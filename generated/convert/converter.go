package convert

import (
	"fmt"
	"reflect"

	"github.com/centrifuge/go-substrate-rpc-client/v4/registry"
	"github.com/centrifuge/go-substrate-rpc-client/v4/types"
	pbgear "github.com/streamingfast/substreams-gear/pb/sf/substreams/gear/type/v1"
	pbgearextrinsic "github.com/streamingfast/substreams-gear/pb/sf/substreams/vara/type/v1"
)

func To_Active_1030(in any) *pbgear.Active_1030 {
	out := &pbgear.Active_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Expiration
	if v.HasValue() {
		out.Expiration = To_Optional_uint32(v.ValueAt(0))
	}

	return out //from message
}

func To_AirdropPallet_100(in any) *pbgear.AirdropPallet_100 {
	out := &pbgear.AirdropPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_AirdropPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_AirdropPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.AirdropPallet_100_CallTransferCall{
			CallTransferCall: To_Airdrop_TransferCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_AirdropPallet_140(in any) *pbgear.AirdropPallet_140 {
	out := &pbgear.AirdropPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_AirdropPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_AirdropPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.AirdropPallet_140_CallTransferCall{
			CallTransferCall: To_Airdrop_TransferCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_AirdropPallet_210(in any) *pbgear.AirdropPallet_210 {
	out := &pbgear.AirdropPallet_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_AirdropPallet_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_AirdropPallet_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.AirdropPallet_210_CallTransferCall{
			CallTransferCall: To_Airdrop_TransferCall(param),
		}
	case 1:
		return &pbgear.AirdropPallet_210_CallTransferVestedCall{
			CallTransferVestedCall: To_Airdrop_TransferVestedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_AirdropPallet_310(in any) *pbgear.AirdropPallet_310 {
	out := &pbgear.AirdropPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_AirdropPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_AirdropPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.AirdropPallet_310_CallTransferCall{
			CallTransferCall: To_Airdrop_TransferCall(param),
		}
	case 1:
		return &pbgear.AirdropPallet_310_CallTransferVestedCall{
			CallTransferVestedCall: To_Airdrop_TransferVestedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Airdrop_TransferCall_100(in any) *pbgear.Airdrop_TransferCall_100 {
	out := &pbgear.Airdrop_TransferCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Source To_SpCoreCryptoAccountId32(w)
	out.Source = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Dest To_SpCoreCryptoAccountId32(w)
	out.Dest = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))

	return out //from message
}
func To_Airdrop_TransferCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Airdrop_TransferCall_100(in)
	out := &pbgearextrinsic.Extrinsic_AirdropTransferCall{}
	reflect.ValueOf(out).Elem().FieldByName("AirdropTransferCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Airdrop_TransferVestedCall_210(in any) *pbgear.Airdrop_TransferVestedCall_210 {
	out := &pbgear.Airdrop_TransferVestedCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Source To_SpCoreCryptoAccountId32(w)
	out.Source = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Dest To_SpCoreCryptoAccountId32(w)
	out.Dest = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field ScheduleIndex
	out.ScheduleIndex = To_uint32(v.ValueAt(2))
	// primitive field Amount
	if v.HasValue() {
		out.Amount = To_Optional_string(v.ValueAt(3))
	}

	return out //from message
}
func To_Airdrop_TransferVestedCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Airdrop_TransferVestedCall_210(in)
	out := &pbgearextrinsic.Extrinsic_AirdropTransferVestedCall{}
	reflect.ValueOf(out).Elem().FieldByName("AirdropTransferVestedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Any_1030(in any) *pbgear.Any_1030 {
	out := &pbgear.Any_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Arithmetic_1030(in any) *pbgear.Arithmetic_1030 {
	out := &pbgear.Arithmetic_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Arithmetic_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Arithmetic_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Arithmetic_1030_Value0Underflow{
			Value0Underflow: To_Underflow(param),
		}
	case 1:
		return &pbgear.Arithmetic_1030_Value0Overflow{
			Value0Overflow: To_Overflow(param),
		}
	case 2:
		return &pbgear.Arithmetic_1030_Value0DivisionByZero{
			Value0DivisionByZero: To_DivisionByZero(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_AuthorityDiscoveryPallet_100(in any) *pbgear.AuthorityDiscoveryPallet_100 {
	out := &pbgear.AuthorityDiscoveryPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_AuthorshipPallet_100(in any) *pbgear.AuthorshipPallet_100 {
	out := &pbgear.AuthorshipPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Auto_1030(in any) *pbgear.Auto_1030 {
	out := &pbgear.Auto_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_BTreeMap_1030(in any) *pbgear.BTreeMap_1030 {
	out := &pbgear.BTreeMap_1030{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeMap_1030_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeMap_1030_value0(in any) []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus {
	items := in.([]interface{})

	var out []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeMap_1040(in any) *pbgear.BTreeMap_1040 {
	out := &pbgear.BTreeMap_1040{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeMap_1040_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeMap_1040_value0(in any) []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus {
	items := in.([]interface{})

	var out []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeMap_1110(in any) *pbgear.BTreeMap_1110 {
	out := &pbgear.BTreeMap_1110{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeMap_1110_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeMap_1110_value0(in any) []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus {
	items := in.([]interface{})

	var out []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeMap_1400(in any) *pbgear.BTreeMap_1400 {
	out := &pbgear.BTreeMap_1400{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeMap_1400_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeMap_1400_value0(in any) []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus {
	items := in.([]interface{})

	var out []*pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeMap_1420(in any) *pbgear.BTreeMap_1420 {
	out := &pbgear.BTreeMap_1420{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeMap_1420_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeMap_1420_value0(in any) []*pbgear.TupleGprimitivesMessageIdgearCommonEventDispatchStatus {
	items := in.([]interface{})

	var out []*pbgear.TupleGprimitivesMessageIdgearCommonEventDispatchStatus
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_TupleGprimitivesMessageIdgearCommonEventDispatchStatus(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeSet_210(in any) *pbgear.BTreeSet_210 {
	out := &pbgear.BTreeSet_210{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeSet_210_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeSet_210_value0(in any) []*pbgear.Gear_GearCoreMemoryWasmPage {
	items := in.([]interface{})

	var out []*pbgear.Gear_GearCoreMemoryWasmPage
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Gear_GearCoreMemoryWasmPage(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeSet_310(in any) *pbgear.BTreeSet_310 {
	out := &pbgear.BTreeSet_310{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeSet_310_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeSet_310_value0(in any) []*pbgear.Gear_GearCorePagesWasmPage {
	items := in.([]interface{})

	var out []*pbgear.Gear_GearCorePagesWasmPage
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Gear_GearCorePagesWasmPage(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeSet_1030(in any) *pbgear.BTreeSet_1030 {
	out := &pbgear.BTreeSet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeSet_1030_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeSet_1030_value0(in any) []*pbgear.Gear_GearCorePagesWasmPage {
	items := in.([]interface{})

	var out []*pbgear.Gear_GearCorePagesWasmPage
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Gear_GearCorePagesWasmPage(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeSet_1040(in any) *pbgear.BTreeSet_1040 {
	out := &pbgear.BTreeSet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeSet_1040_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeSet_1040_value0(in any) []*pbgear.GearCoreIdsProgramId {
	items := in.([]interface{})

	var out []*pbgear.GearCoreIdsProgramId
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_GearCoreIdsProgramId(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeSet_1110(in any) *pbgear.BTreeSet_1110 {
	out := &pbgear.BTreeSet_1110{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeSet_1110_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeSet_1110_value0(in any) []*pbgear.GearCoreIdsProgramId {
	items := in.([]interface{})

	var out []*pbgear.GearCoreIdsProgramId
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_GearCoreIdsProgramId(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeSet_1400(in any) *pbgear.BTreeSet_1400 {
	out := &pbgear.BTreeSet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeSet_1400_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeSet_1400_value0(in any) []*pbgear.GearCoreIdsProgramId {
	items := in.([]interface{})

	var out []*pbgear.GearCoreIdsProgramId
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_GearCoreIdsProgramId(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BTreeSet_1420(in any) *pbgear.BTreeSet_1420 {
	out := &pbgear.BTreeSet_1420{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BTreeSet_1420_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BTreeSet_1420_value0(in any) []*pbgear.GprimitivesActorId {
	items := in.([]interface{})

	var out []*pbgear.GprimitivesActorId
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_GprimitivesActorId(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Babe_BabeTrieNodesList_100(in any) *pbgear.Babe_BabeTrieNodesList_100 {
	out := &pbgear.Babe_BabeTrieNodesList_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Babe_BabeTrieNodesList_310(in any) *pbgear.Babe_BabeTrieNodesList_310 {
	out := &pbgear.Babe_BabeTrieNodesList_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Babe_BabeTrieNodesList_1030(in any) *pbgear.Babe_BabeTrieNodesList_1030 {
	out := &pbgear.Babe_BabeTrieNodesList_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Babe_BabeTrieNodesList_1400(in any) *pbgear.Babe_BabeTrieNodesList_1400 {
	out := &pbgear.Babe_BabeTrieNodesList_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Babe_Consensus_100(in any) *pbgear.Babe_Consensus_100 {
	out := &pbgear.Babe_Consensus_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Babe_Other_100(in any) *pbgear.Babe_Other_100 {
	out := &pbgear.Babe_Other_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Babe_PreRuntime_100(in any) *pbgear.Babe_PreRuntime_100 {
	out := &pbgear.Babe_PreRuntime_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Babe_PrimaryAndSecondaryPlainSlots_100(in any) *pbgear.Babe_PrimaryAndSecondaryPlainSlots_100 {
	out := &pbgear.Babe_PrimaryAndSecondaryPlainSlots_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Babe_PrimaryAndSecondaryVrfSlots_100(in any) *pbgear.Babe_PrimaryAndSecondaryVrfSlots_100 {
	out := &pbgear.Babe_PrimaryAndSecondaryVrfSlots_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Babe_PrimarySlots_100(in any) *pbgear.Babe_PrimarySlots_100 {
	out := &pbgear.Babe_PrimarySlots_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Babe_RuntimeEnvironmentUpdated_100(in any) *pbgear.Babe_RuntimeEnvironmentUpdated_100 {
	out := &pbgear.Babe_RuntimeEnvironmentUpdated_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Babe_Seal_100(in any) *pbgear.Babe_Seal_100 {
	out := &pbgear.Babe_Seal_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Babe_TupleUint64Uint64_100(in any) *pbgear.Babe_TupleUint64Uint64_100 {
	out := &pbgear.Babe_TupleUint64Uint64_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint64(v.ValueAt(1))

	return out //from message
}

func To_Babe_TupleUint64Uint64_310(in any) *pbgear.Babe_TupleUint64Uint64_310 {
	out := &pbgear.Babe_TupleUint64Uint64_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint64(v.ValueAt(1))

	return out //from message
}

func To_Babe_TupleUint64Uint64_1030(in any) *pbgear.Babe_TupleUint64Uint64_1030 {
	out := &pbgear.Babe_TupleUint64Uint64_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint64(v.ValueAt(1))

	return out //from message
}

func To_Babe_V1_100(in any) *pbgear.Babe_V1_100 {
	out := &pbgear.Babe_V1_100{}
	v := in.(registry.Valuable)
	_ = v

	// field C To_Babe_TupleUint64Uint64(w)
	out.C = To_Babe_TupleUint64Uint64(v.ValueAt(0))
	// oneOf field AllowedSlots
	v1 := To_OneOf_Babe_V1_100_allowed_slots(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("AllowedSlots").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Babe_V1_100_allowed_slots(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Babe_V1_100_AllowedSlotsPrimarySlots{
			AllowedSlotsPrimarySlots: To_Babe_PrimarySlots(param),
		}
	case 1:
		return &pbgear.Babe_V1_100_AllowedSlotsPrimaryAndSecondaryPlainSlots{
			AllowedSlotsPrimaryAndSecondaryPlainSlots: To_Babe_PrimaryAndSecondaryPlainSlots(param),
		}
	case 2:
		return &pbgear.Babe_V1_100_AllowedSlotsPrimaryAndSecondaryVrfSlots{
			AllowedSlotsPrimaryAndSecondaryVrfSlots: To_Babe_PrimaryAndSecondaryVrfSlots(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BabePallet_100(in any) *pbgear.BabePallet_100 {
	out := &pbgear.BabePallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BabePallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BabePallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BabePallet_100_CallReportEquivocationCall{
			CallReportEquivocationCall: To_Babe_ReportEquivocationCall(param),
		}
	case 1:
		return &pbgear.BabePallet_100_CallReportEquivocationUnsignedCall{
			CallReportEquivocationUnsignedCall: To_Babe_ReportEquivocationUnsignedCall(param),
		}
	case 2:
		return &pbgear.BabePallet_100_CallPlanConfigChangeCall{
			CallPlanConfigChangeCall: To_Babe_PlanConfigChangeCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BabePallet_310(in any) *pbgear.BabePallet_310 {
	out := &pbgear.BabePallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BabePallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BabePallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BabePallet_310_CallReportEquivocationCall{
			CallReportEquivocationCall: To_Babe_ReportEquivocationCall(param),
		}
	case 1:
		return &pbgear.BabePallet_310_CallReportEquivocationUnsignedCall{
			CallReportEquivocationUnsignedCall: To_Babe_ReportEquivocationUnsignedCall(param),
		}
	case 2:
		return &pbgear.BabePallet_310_CallPlanConfigChangeCall{
			CallPlanConfigChangeCall: To_Babe_PlanConfigChangeCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BabePallet_1030(in any) *pbgear.BabePallet_1030 {
	out := &pbgear.BabePallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BabePallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BabePallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BabePallet_1030_CallReportEquivocationCall{
			CallReportEquivocationCall: To_Babe_ReportEquivocationCall(param),
		}
	case 1:
		return &pbgear.BabePallet_1030_CallReportEquivocationUnsignedCall{
			CallReportEquivocationUnsignedCall: To_Babe_ReportEquivocationUnsignedCall(param),
		}
	case 2:
		return &pbgear.BabePallet_1030_CallPlanConfigChangeCall{
			CallPlanConfigChangeCall: To_Babe_PlanConfigChangeCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BabePallet_1400(in any) *pbgear.BabePallet_1400 {
	out := &pbgear.BabePallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BabePallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BabePallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BabePallet_1400_CallReportEquivocationCall{
			CallReportEquivocationCall: To_Babe_ReportEquivocationCall(param),
		}
	case 1:
		return &pbgear.BabePallet_1400_CallReportEquivocationUnsignedCall{
			CallReportEquivocationUnsignedCall: To_Babe_ReportEquivocationUnsignedCall(param),
		}
	case 2:
		return &pbgear.BabePallet_1400_CallPlanConfigChangeCall{
			CallPlanConfigChangeCall: To_Babe_PlanConfigChangeCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_AllowedSlots_100(in any) *pbgear.Babe_AllowedSlots_100 {
	out := &pbgear.Babe_AllowedSlots_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AllowedSlots
	v0 := To_OneOf_Babe_AllowedSlots_100_allowed_slots(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AllowedSlots").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_AllowedSlots_100_allowed_slots(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Babe_AllowedSlots_100_AllowedSlotsPrimarySlots{
			AllowedSlotsPrimarySlots: To_Babe_PrimarySlots(param),
		}
	case 1:
		return &pbgear.Babe_AllowedSlots_100_AllowedSlotsPrimaryAndSecondaryPlainSlots{
			AllowedSlotsPrimaryAndSecondaryPlainSlots: To_Babe_PrimaryAndSecondaryPlainSlots(param),
		}
	case 2:
		return &pbgear.Babe_AllowedSlots_100_AllowedSlotsPrimaryAndSecondaryVrfSlots{
			AllowedSlotsPrimaryAndSecondaryVrfSlots: To_Babe_PrimaryAndSecondaryVrfSlots(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_AllowedSlots_310(in any) *pbgear.Babe_AllowedSlots_310 {
	out := &pbgear.Babe_AllowedSlots_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AllowedSlots
	v0 := To_OneOf_Babe_AllowedSlots_310_allowed_slots(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AllowedSlots").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_AllowedSlots_310_allowed_slots(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Babe_AllowedSlots_310_AllowedSlotsPrimarySlots{
			AllowedSlotsPrimarySlots: To_Babe_PrimarySlots(param),
		}
	case 1:
		return &pbgear.Babe_AllowedSlots_310_AllowedSlotsPrimaryAndSecondaryPlainSlots{
			AllowedSlotsPrimaryAndSecondaryPlainSlots: To_Babe_PrimaryAndSecondaryPlainSlots(param),
		}
	case 2:
		return &pbgear.Babe_AllowedSlots_310_AllowedSlotsPrimaryAndSecondaryVrfSlots{
			AllowedSlotsPrimaryAndSecondaryVrfSlots: To_Babe_PrimaryAndSecondaryVrfSlots(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_AllowedSlots_1030(in any) *pbgear.Babe_AllowedSlots_1030 {
	out := &pbgear.Babe_AllowedSlots_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AllowedSlots
	v0 := To_OneOf_Babe_AllowedSlots_1030_allowed_slots(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AllowedSlots").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_AllowedSlots_1030_allowed_slots(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Babe_AllowedSlots_1030_AllowedSlotsPrimarySlots{
			AllowedSlotsPrimarySlots: To_Babe_PrimarySlots(param),
		}
	case 1:
		return &pbgear.Babe_AllowedSlots_1030_AllowedSlotsPrimaryAndSecondaryPlainSlots{
			AllowedSlotsPrimaryAndSecondaryPlainSlots: To_Babe_PrimaryAndSecondaryPlainSlots(param),
		}
	case 2:
		return &pbgear.Babe_AllowedSlots_1030_AllowedSlotsPrimaryAndSecondaryVrfSlots{
			AllowedSlotsPrimaryAndSecondaryVrfSlots: To_Babe_PrimaryAndSecondaryVrfSlots(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_Config_100(in any) *pbgear.Babe_Config_100 {
	out := &pbgear.Babe_Config_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Config
	v0 := To_OneOf_Babe_Config_100_config(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Config").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_Config_100_config(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 1:
		return &pbgear.Babe_Config_100_ConfigV1{
			ConfigV1: To_Babe_V1(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_Config_310(in any) *pbgear.Babe_Config_310 {
	out := &pbgear.Babe_Config_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Config
	v0 := To_OneOf_Babe_Config_310_config(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Config").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_Config_310_config(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 1:
		return &pbgear.Babe_Config_310_ConfigV1{
			ConfigV1: To_Babe_V1(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_Config_1030(in any) *pbgear.Babe_Config_1030 {
	out := &pbgear.Babe_Config_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Config
	v0 := To_OneOf_Babe_Config_1030_config(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Config").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_Config_1030_config(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 1:
		return &pbgear.Babe_Config_1030_ConfigV1{
			ConfigV1: To_Babe_V1(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_Logs_100(in any) *pbgear.Babe_Logs_100 {
	out := &pbgear.Babe_Logs_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Logs
	v0 := To_OneOf_Babe_Logs_100_logs(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Logs").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_Logs_100_logs(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 6:
		return &pbgear.Babe_Logs_100_LogsPreRuntime{
			LogsPreRuntime: To_Babe_PreRuntime(param),
		}
	case 4:
		return &pbgear.Babe_Logs_100_LogsConsensus{
			LogsConsensus: To_Babe_Consensus(param),
		}
	case 5:
		return &pbgear.Babe_Logs_100_LogsSeal{
			LogsSeal: To_Babe_Seal(param),
		}
	case 0:
		return &pbgear.Babe_Logs_100_LogsOther{
			LogsOther: To_Babe_Other(param),
		}
	case 8:
		return &pbgear.Babe_Logs_100_LogsRuntimeEnvironmentUpdated{
			LogsRuntimeEnvironmentUpdated: To_Babe_RuntimeEnvironmentUpdated(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_Logs_1030(in any) *pbgear.Babe_Logs_1030 {
	out := &pbgear.Babe_Logs_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Logs
	v0 := To_OneOf_Babe_Logs_1030_logs(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Logs").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Babe_Logs_1030_logs(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 6:
		return &pbgear.Babe_Logs_1030_LogsPreRuntime{
			LogsPreRuntime: To_Babe_PreRuntime(param),
		}
	case 4:
		return &pbgear.Babe_Logs_1030_LogsConsensus{
			LogsConsensus: To_Babe_Consensus(param),
		}
	case 5:
		return &pbgear.Babe_Logs_1030_LogsSeal{
			LogsSeal: To_Babe_Seal(param),
		}
	case 0:
		return &pbgear.Babe_Logs_1030_LogsOther{
			LogsOther: To_Babe_Other(param),
		}
	case 8:
		return &pbgear.Babe_Logs_1030_LogsRuntimeEnvironmentUpdated{
			LogsRuntimeEnvironmentUpdated: To_Babe_RuntimeEnvironmentUpdated(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_PlanConfigChangeCall_100(in any) *pbgear.Babe_PlanConfigChangeCall_100 {
	out := &pbgear.Babe_PlanConfigChangeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Config
	v0 := To_OneOf_Babe_PlanConfigChangeCall_100_config(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Config").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Babe_PlanConfigChangeCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Babe_PlanConfigChangeCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BabePlanConfigChangeCall{}
	reflect.ValueOf(out).Elem().FieldByName("BabePlanConfigChangeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Babe_PlanConfigChangeCall_100_config(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 1:
		return &pbgear.Babe_PlanConfigChangeCall_100_ConfigV1{
			ConfigV1: To_Babe_V1(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Babe_ReportEquivocationCall_100(in any) *pbgear.Babe_ReportEquivocationCall_100 {
	out := &pbgear.Babe_ReportEquivocationCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field EquivocationProof To_SpConsensusSlotsEquivocationProof(w)
	out.EquivocationProof = To_SpConsensusSlotsEquivocationProof(v.ValueAt(0))
	// field KeyOwnerProof To_SpSessionMembershipProof(w)
	out.KeyOwnerProof = To_SpSessionMembershipProof(v.ValueAt(1))

	return out //from message
}
func To_Babe_ReportEquivocationCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Babe_ReportEquivocationCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BabeReportEquivocationCall{}
	reflect.ValueOf(out).Elem().FieldByName("BabeReportEquivocationCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Babe_ReportEquivocationUnsignedCall_100(in any) *pbgear.Babe_ReportEquivocationUnsignedCall_100 {
	out := &pbgear.Babe_ReportEquivocationUnsignedCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field EquivocationProof To_SpConsensusSlotsEquivocationProof(w)
	out.EquivocationProof = To_SpConsensusSlotsEquivocationProof(v.ValueAt(0))
	// field KeyOwnerProof To_SpSessionMembershipProof(w)
	out.KeyOwnerProof = To_SpSessionMembershipProof(v.ValueAt(1))

	return out //from message
}
func To_Babe_ReportEquivocationUnsignedCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Babe_ReportEquivocationUnsignedCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BabeReportEquivocationUnsignedCall{}
	reflect.ValueOf(out).Elem().FieldByName("BabeReportEquivocationUnsignedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Babe_SpConsensusBabeAppPublic_100(in any) *pbgear.Babe_SpConsensusBabeAppPublic_100 {
	out := &pbgear.Babe_SpConsensusBabeAppPublic_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_Babe_SpConsensusBabeAppPublic_310(in any) *pbgear.Babe_SpConsensusBabeAppPublic_310 {
	out := &pbgear.Babe_SpConsensusBabeAppPublic_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_Babe_SpConsensusBabeAppPublic_1030(in any) *pbgear.Babe_SpConsensusBabeAppPublic_1030 {
	out := &pbgear.Babe_SpConsensusBabeAppPublic_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_BackendError_1030(in any) *pbgear.BackendError_1030 {
	out := &pbgear.BackendError_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_BadOrigin_1030(in any) *pbgear.BadOrigin_1030 {
	out := &pbgear.BadOrigin_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_BagsList_Address20_100(in any) *pbgear.BagsList_Address20_100 {
	out := &pbgear.BagsList_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BagsList_Address32_100(in any) *pbgear.BagsList_Address32_100 {
	out := &pbgear.BagsList_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BagsList_Id_100(in any) *pbgear.BagsList_Id_100 {
	out := &pbgear.BagsList_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_BagsList_Index_100(in any) *pbgear.BagsList_Index_100 {
	out := &pbgear.BagsList_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_BagsList_TupleNull(w)
	out.Value0 = To_BagsList_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_BagsList_Raw_100(in any) *pbgear.BagsList_Raw_100 {
	out := &pbgear.BagsList_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BagsList_TupleNull_100(in any) *pbgear.BagsList_TupleNull_100 {
	out := &pbgear.BagsList_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_BagsList_TupleNull_310(in any) *pbgear.BagsList_TupleNull_310 {
	out := &pbgear.BagsList_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_BagsList_TupleNull_1030(in any) *pbgear.BagsList_TupleNull_1030 {
	out := &pbgear.BagsList_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_BagsListPallet_100(in any) *pbgear.BagsListPallet_100 {
	out := &pbgear.BagsListPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BagsListPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsListPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsListPallet_100_CallRebagCall{
			CallRebagCall: To_BagsList_RebagCall(param),
		}
	case 1:
		return &pbgear.BagsListPallet_100_CallPutInFrontOfCall{
			CallPutInFrontOfCall: To_BagsList_PutInFrontOfCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsListPallet_310(in any) *pbgear.BagsListPallet_310 {
	out := &pbgear.BagsListPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BagsListPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsListPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsListPallet_310_CallRebagCall{
			CallRebagCall: To_BagsList_RebagCall(param),
		}
	case 1:
		return &pbgear.BagsListPallet_310_CallPutInFrontOfCall{
			CallPutInFrontOfCall: To_BagsList_PutInFrontOfCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsListPallet_1030(in any) *pbgear.BagsListPallet_1030 {
	out := &pbgear.BagsListPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BagsListPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsListPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsListPallet_1030_CallRebagCall{
			CallRebagCall: To_BagsList_RebagCall(param),
		}
	case 1:
		return &pbgear.BagsListPallet_1030_CallPutInFrontOfCall{
			CallPutInFrontOfCall: To_BagsList_PutInFrontOfCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsListPallet_1040(in any) *pbgear.BagsListPallet_1040 {
	out := &pbgear.BagsListPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BagsListPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsListPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsListPallet_1040_CallRebagCall{
			CallRebagCall: To_BagsList_RebagCall(param),
		}
	case 1:
		return &pbgear.BagsListPallet_1040_CallPutInFrontOfCall{
			CallPutInFrontOfCall: To_BagsList_PutInFrontOfCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsListPallet_1300(in any) *pbgear.BagsListPallet_1300 {
	out := &pbgear.BagsListPallet_1300{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BagsListPallet_1300_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsListPallet_1300_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsListPallet_1300_CallRebagCall{
			CallRebagCall: To_BagsList_RebagCall(param),
		}
	case 1:
		return &pbgear.BagsListPallet_1300_CallPutInFrontOfCall{
			CallPutInFrontOfCall: To_BagsList_PutInFrontOfCall(param),
		}
	case 2:
		return &pbgear.BagsListPallet_1300_CallPutInFrontOfOtherCall{
			CallPutInFrontOfOtherCall: To_BagsList_PutInFrontOfOtherCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsListPallet_1400(in any) *pbgear.BagsListPallet_1400 {
	out := &pbgear.BagsListPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BagsListPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsListPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsListPallet_1400_CallRebagCall{
			CallRebagCall: To_BagsList_RebagCall(param),
		}
	case 1:
		return &pbgear.BagsListPallet_1400_CallPutInFrontOfCall{
			CallPutInFrontOfCall: To_BagsList_PutInFrontOfCall(param),
		}
	case 2:
		return &pbgear.BagsListPallet_1400_CallPutInFrontOfOtherCall{
			CallPutInFrontOfOtherCall: To_BagsList_PutInFrontOfOtherCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Dislocated_100(in any) *pbgear.BagsList_Dislocated_100 {
	out := &pbgear.BagsList_Dislocated_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dislocated
	v0 := To_OneOf_BagsList_Dislocated_100_dislocated(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dislocated").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Dislocated_100_dislocated(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Dislocated_100_DislocatedId{
			DislocatedId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Dislocated_100_DislocatedIndex{
			DislocatedIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Dislocated_100_DislocatedRaw{
			DislocatedRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Dislocated_100_DislocatedAddress32{
			DislocatedAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Dislocated_100_DislocatedAddress20{
			DislocatedAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Dislocated_310(in any) *pbgear.BagsList_Dislocated_310 {
	out := &pbgear.BagsList_Dislocated_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dislocated
	v0 := To_OneOf_BagsList_Dislocated_310_dislocated(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dislocated").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Dislocated_310_dislocated(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Dislocated_310_DislocatedId{
			DislocatedId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Dislocated_310_DislocatedIndex{
			DislocatedIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Dislocated_310_DislocatedRaw{
			DislocatedRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Dislocated_310_DislocatedAddress32{
			DislocatedAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Dislocated_310_DislocatedAddress20{
			DislocatedAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Dislocated_1030(in any) *pbgear.BagsList_Dislocated_1030 {
	out := &pbgear.BagsList_Dislocated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dislocated
	v0 := To_OneOf_BagsList_Dislocated_1030_dislocated(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dislocated").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Dislocated_1030_dislocated(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Dislocated_1030_DislocatedId{
			DislocatedId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Dislocated_1030_DislocatedIndex{
			DislocatedIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Dislocated_1030_DislocatedRaw{
			DislocatedRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Dislocated_1030_DislocatedAddress32{
			DislocatedAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Dislocated_1030_DislocatedAddress20{
			DislocatedAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Heavier_1300(in any) *pbgear.BagsList_Heavier_1300 {
	out := &pbgear.BagsList_Heavier_1300{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Heavier
	v0 := To_OneOf_BagsList_Heavier_1300_heavier(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Heavier").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Heavier_1300_heavier(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Heavier_1300_HeavierId{
			HeavierId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Heavier_1300_HeavierIndex{
			HeavierIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Heavier_1300_HeavierRaw{
			HeavierRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Heavier_1300_HeavierAddress32{
			HeavierAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Heavier_1300_HeavierAddress20{
			HeavierAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Heavier_1400(in any) *pbgear.BagsList_Heavier_1400 {
	out := &pbgear.BagsList_Heavier_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Heavier
	v0 := To_OneOf_BagsList_Heavier_1400_heavier(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Heavier").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Heavier_1400_heavier(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Heavier_1400_HeavierId{
			HeavierId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Heavier_1400_HeavierIndex{
			HeavierIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Heavier_1400_HeavierRaw{
			HeavierRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Heavier_1400_HeavierAddress32{
			HeavierAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Heavier_1400_HeavierAddress20{
			HeavierAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Lighter_100(in any) *pbgear.BagsList_Lighter_100 {
	out := &pbgear.BagsList_Lighter_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Lighter
	v0 := To_OneOf_BagsList_Lighter_100_lighter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Lighter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Lighter_100_lighter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Lighter_100_LighterId{
			LighterId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Lighter_100_LighterIndex{
			LighterIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Lighter_100_LighterRaw{
			LighterRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Lighter_100_LighterAddress32{
			LighterAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Lighter_100_LighterAddress20{
			LighterAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Lighter_310(in any) *pbgear.BagsList_Lighter_310 {
	out := &pbgear.BagsList_Lighter_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Lighter
	v0 := To_OneOf_BagsList_Lighter_310_lighter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Lighter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Lighter_310_lighter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Lighter_310_LighterId{
			LighterId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Lighter_310_LighterIndex{
			LighterIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Lighter_310_LighterRaw{
			LighterRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Lighter_310_LighterAddress32{
			LighterAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Lighter_310_LighterAddress20{
			LighterAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_Lighter_1030(in any) *pbgear.BagsList_Lighter_1030 {
	out := &pbgear.BagsList_Lighter_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Lighter
	v0 := To_OneOf_BagsList_Lighter_1030_lighter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Lighter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BagsList_Lighter_1030_lighter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_Lighter_1030_LighterId{
			LighterId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_Lighter_1030_LighterIndex{
			LighterIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_Lighter_1030_LighterRaw{
			LighterRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_Lighter_1030_LighterAddress32{
			LighterAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_Lighter_1030_LighterAddress20{
			LighterAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_PutInFrontOfCall_100(in any) *pbgear.BagsList_PutInFrontOfCall_100 {
	out := &pbgear.BagsList_PutInFrontOfCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Lighter
	v0 := To_OneOf_BagsList_PutInFrontOfCall_100_lighter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Lighter").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_BagsList_PutInFrontOfCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_BagsList_PutInFrontOfCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BagslistPutInFrontOfCall{}
	reflect.ValueOf(out).Elem().FieldByName("BagslistPutInFrontOfCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_BagsList_PutInFrontOfCall_100_lighter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_PutInFrontOfCall_100_LighterId{
			LighterId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_PutInFrontOfCall_100_LighterIndex{
			LighterIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_PutInFrontOfCall_100_LighterRaw{
			LighterRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_PutInFrontOfCall_100_LighterAddress32{
			LighterAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_PutInFrontOfCall_100_LighterAddress20{
			LighterAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_PutInFrontOfOtherCall_1300(in any) *pbgear.BagsList_PutInFrontOfOtherCall_1300 {
	out := &pbgear.BagsList_PutInFrontOfOtherCall_1300{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Heavier
	v0 := To_OneOf_BagsList_PutInFrontOfOtherCall_1300_heavier(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Heavier").Set(reflect.ValueOf(v0))
	// oneOf field Lighter
	v1 := To_OneOf_BagsList_PutInFrontOfOtherCall_1300_lighter(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Lighter").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_BagsList_PutInFrontOfOtherCall_1300_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_BagsList_PutInFrontOfOtherCall_1300(in)
	out := &pbgearextrinsic.Extrinsic_BagslistPutInFrontOfOtherCall{}
	reflect.ValueOf(out).Elem().FieldByName("BagslistPutInFrontOfOtherCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_BagsList_PutInFrontOfOtherCall_1300_heavier(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_HeavierId{
			HeavierId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_HeavierIndex{
			HeavierIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_HeavierRaw{
			HeavierRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_HeavierAddress32{
			HeavierAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_HeavierAddress20{
			HeavierAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_BagsList_PutInFrontOfOtherCall_1300_lighter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_LighterId{
			LighterId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_LighterIndex{
			LighterIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_LighterRaw{
			LighterRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_LighterAddress32{
			LighterAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_PutInFrontOfOtherCall_1300_LighterAddress20{
			LighterAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BagsList_RebagCall_100(in any) *pbgear.BagsList_RebagCall_100 {
	out := &pbgear.BagsList_RebagCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dislocated
	v0 := To_OneOf_BagsList_RebagCall_100_dislocated(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dislocated").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_BagsList_RebagCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_BagsList_RebagCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BagslistRebagCall{}
	reflect.ValueOf(out).Elem().FieldByName("BagslistRebagCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_BagsList_RebagCall_100_dislocated(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BagsList_RebagCall_100_DislocatedId{
			DislocatedId: To_BagsList_Id(param),
		}
	case 1:
		return &pbgear.BagsList_RebagCall_100_DislocatedIndex{
			DislocatedIndex: To_BagsList_Index(param),
		}
	case 2:
		return &pbgear.BagsList_RebagCall_100_DislocatedRaw{
			DislocatedRaw: To_BagsList_Raw(param),
		}
	case 3:
		return &pbgear.BagsList_RebagCall_100_DislocatedAddress32{
			DislocatedAddress32: To_BagsList_Address32(param),
		}
	case 4:
		return &pbgear.BagsList_RebagCall_100_DislocatedAddress20{
			DislocatedAddress20: To_BagsList_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Added_1030(in any) *pbgear.Balances_Added_1030 {
	out := &pbgear.Balances_Added_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field ChildIndex
	out.ChildIndex = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_Address20_100(in any) *pbgear.Balances_Address20_100 {
	out := &pbgear.Balances_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Balances_Address32_100(in any) *pbgear.Balances_Address32_100 {
	out := &pbgear.Balances_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Balances_AllGood_1030(in any) *pbgear.Balances_AllGood_1030 {
	out := &pbgear.Balances_AllGood_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_Announced_1030(in any) *pbgear.Balances_Announced_1030 {
	out := &pbgear.Balances_Announced_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Real To_SpCoreCryptoAccountId32(w)
	out.Real = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Proxy To_SpCoreCryptoAccountId32(w)
	out.Proxy = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(2))

	return out //from message
}

func To_Balances_Approved_1030(in any) *pbgear.Balances_Approved_1030 {
	out := &pbgear.Balances_Approved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_AssetSpendApproved_1410(in any) *pbgear.Balances_AssetSpendApproved_1410 {
	out := &pbgear.Balances_AssetSpendApproved_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field AssetKind To_Balances_TupleNull(w)
	out.AssetKind = To_Balances_TupleNull(v.ValueAt(1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))
	// field Beneficiary To_SpCoreCryptoAccountId32(w)
	out.Beneficiary = To_SpCoreCryptoAccountId32(v.ValueAt(3))
	// primitive field ValidFrom
	out.ValidFrom = To_uint32(v.ValueAt(4))
	// primitive field ExpireAt
	out.ExpireAt = To_uint32(v.ValueAt(5))

	return out //from message
}

func To_Balances_AssetSpendVoided_1410(in any) *pbgear.Balances_AssetSpendVoided_1410 {
	out := &pbgear.Balances_AssetSpendVoided_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Awarded_1030(in any) *pbgear.Balances_Awarded_1030 {
	out := &pbgear.Balances_Awarded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ProposalIndex
	out.ProposalIndex = To_uint32(v.ValueAt(0))
	// primitive field Award
	out.Award = To_string(v.ValueAt(1))
	// field Account To_SpCoreCryptoAccountId32(w)
	out.Account = To_SpCoreCryptoAccountId32(v.ValueAt(2))

	return out //from message
}

func To_Balances_BagsListEvent_1030(in any) *pbgear.Balances_BagsListEvent_1030 {
	out := &pbgear.Balances_BagsListEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_BagsListEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_BagsListEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_BagsListEvent_1030_Value0Rebagged{
			Value0Rebagged: To_Balances_Rebagged(param),
		}
	case 1:
		return &pbgear.Balances_BagsListEvent_1030_Value0ScoreUpdated{
			Value0ScoreUpdated: To_Balances_ScoreUpdated(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_BalanceSet_1030(in any) *pbgear.Balances_BalanceSet_1030 {
	out := &pbgear.Balances_BalanceSet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Free
	out.Free = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_BalancesEvent_1030(in any) *pbgear.Balances_BalancesEvent_1030 {
	out := &pbgear.Balances_BalancesEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_BalancesEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_BalancesEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_BalancesEvent_1030_Value0Endowed{
			Value0Endowed: To_Balances_Endowed(param),
		}
	case 1:
		return &pbgear.Balances_BalancesEvent_1030_Value0DustLost{
			Value0DustLost: To_Balances_DustLost(param),
		}
	case 2:
		return &pbgear.Balances_BalancesEvent_1030_Value0Transfer{
			Value0Transfer: To_Balances_Transfer(param),
		}
	case 3:
		return &pbgear.Balances_BalancesEvent_1030_Value0BalanceSet{
			Value0BalanceSet: To_Balances_BalanceSet(param),
		}
	case 4:
		return &pbgear.Balances_BalancesEvent_1030_Value0Reserved{
			Value0Reserved: To_Balances_Reserved(param),
		}
	case 5:
		return &pbgear.Balances_BalancesEvent_1030_Value0Unreserved{
			Value0Unreserved: To_Balances_Unreserved(param),
		}
	case 6:
		return &pbgear.Balances_BalancesEvent_1030_Value0ReserveRepatriated{
			Value0ReserveRepatriated: To_Balances_ReserveRepatriated(param),
		}
	case 7:
		return &pbgear.Balances_BalancesEvent_1030_Value0Deposit{
			Value0Deposit: To_Balances_Deposit(param),
		}
	case 8:
		return &pbgear.Balances_BalancesEvent_1030_Value0Withdraw{
			Value0Withdraw: To_Balances_Withdraw(param),
		}
	case 9:
		return &pbgear.Balances_BalancesEvent_1030_Value0Slashed{
			Value0Slashed: To_Balances_Slashed(param),
		}
	case 10:
		return &pbgear.Balances_BalancesEvent_1030_Value0Minted{
			Value0Minted: To_Balances_Minted(param),
		}
	case 11:
		return &pbgear.Balances_BalancesEvent_1030_Value0Burned{
			Value0Burned: To_Balances_Burned(param),
		}
	case 12:
		return &pbgear.Balances_BalancesEvent_1030_Value0Suspended{
			Value0Suspended: To_Balances_Suspended(param),
		}
	case 13:
		return &pbgear.Balances_BalancesEvent_1030_Value0Restored{
			Value0Restored: To_Balances_Restored(param),
		}
	case 14:
		return &pbgear.Balances_BalancesEvent_1030_Value0Upgraded{
			Value0Upgraded: To_Balances_Upgraded(param),
		}
	case 15:
		return &pbgear.Balances_BalancesEvent_1030_Value0Issued{
			Value0Issued: To_Balances_Issued(param),
		}
	case 16:
		return &pbgear.Balances_BalancesEvent_1030_Value0Rescinded{
			Value0Rescinded: To_Balances_Rescinded(param),
		}
	case 17:
		return &pbgear.Balances_BalancesEvent_1030_Value0Locked{
			Value0Locked: To_Balances_Locked(param),
		}
	case 18:
		return &pbgear.Balances_BalancesEvent_1030_Value0Unlocked{
			Value0Unlocked: To_Balances_Unlocked(param),
		}
	case 19:
		return &pbgear.Balances_BalancesEvent_1030_Value0Frozen{
			Value0Frozen: To_Balances_Frozen(param),
		}
	case 20:
		return &pbgear.Balances_BalancesEvent_1030_Value0Thawed{
			Value0Thawed: To_Balances_Thawed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_BatchCompleted_1030(in any) *pbgear.Balances_BatchCompleted_1030 {
	out := &pbgear.Balances_BatchCompleted_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_BatchCompletedWithErrors_1030(in any) *pbgear.Balances_BatchCompletedWithErrors_1030 {
	out := &pbgear.Balances_BatchCompletedWithErrors_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_BatchInterrupted_1030(in any) *pbgear.Balances_BatchInterrupted_1030 {
	out := &pbgear.Balances_BatchInterrupted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// oneOf field Error
	v1 := To_OneOf_Balances_BatchInterrupted_1030_error(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Error").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_BatchInterrupted_1030_error(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorOther{
			ErrorOther: To_Other(param),
		}
	case 1:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorCannotLookup{
			ErrorCannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorBadOrigin{
			ErrorBadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorModule{
			ErrorModule: To_Module(param),
		}
	case 4:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorConsumerRemaining{
			ErrorConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorNoProviders{
			ErrorNoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorTooManyConsumers{
			ErrorTooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorToken{
			ErrorToken: To_Token(param),
		}
	case 8:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorArithmetic{
			ErrorArithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorTransactional{
			ErrorTransactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorExhausted{
			ErrorExhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorCorruption{
			ErrorCorruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorUnavailable{
			ErrorUnavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.Balances_BatchInterrupted_1030_ErrorRootNotAllowed{
			ErrorRootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Bonded_1030(in any) *pbgear.Balances_Bonded_1030 {
	out := &pbgear.Balances_Bonded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Member To_SpCoreCryptoAccountId32(w)
	out.Member = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(1))
	// primitive field Bonded
	out.Bonded = To_string(v.ValueAt(2))
	// primitive field Joined
	out.Joined = To_bool(v.ValueAt(3))

	return out //from message
}

func To_Balances_BountiesEvent_1030(in any) *pbgear.Balances_BountiesEvent_1030 {
	out := &pbgear.Balances_BountiesEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_BountiesEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_BountiesEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_BountiesEvent_1030_Value0BountyProposed{
			Value0BountyProposed: To_Balances_BountyProposed(param),
		}
	case 1:
		return &pbgear.Balances_BountiesEvent_1030_Value0BountyRejected{
			Value0BountyRejected: To_Balances_BountyRejected(param),
		}
	case 2:
		return &pbgear.Balances_BountiesEvent_1030_Value0BountyBecameActive{
			Value0BountyBecameActive: To_Balances_BountyBecameActive(param),
		}
	case 3:
		return &pbgear.Balances_BountiesEvent_1030_Value0BountyAwarded{
			Value0BountyAwarded: To_Balances_BountyAwarded(param),
		}
	case 4:
		return &pbgear.Balances_BountiesEvent_1030_Value0BountyClaimed{
			Value0BountyClaimed: To_Balances_BountyClaimed(param),
		}
	case 5:
		return &pbgear.Balances_BountiesEvent_1030_Value0BountyCanceled{
			Value0BountyCanceled: To_Balances_BountyCanceled(param),
		}
	case 6:
		return &pbgear.Balances_BountiesEvent_1030_Value0BountyExtended{
			Value0BountyExtended: To_Balances_BountyExtended(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_BountiesEvent_1410(in any) *pbgear.Balances_BountiesEvent_1410 {
	out := &pbgear.Balances_BountiesEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_BountiesEvent_1410_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_BountiesEvent_1410_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyProposed{
			Value0BountyProposed: To_Balances_BountyProposed(param),
		}
	case 1:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyRejected{
			Value0BountyRejected: To_Balances_BountyRejected(param),
		}
	case 2:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyBecameActive{
			Value0BountyBecameActive: To_Balances_BountyBecameActive(param),
		}
	case 3:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyAwarded{
			Value0BountyAwarded: To_Balances_BountyAwarded(param),
		}
	case 4:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyClaimed{
			Value0BountyClaimed: To_Balances_BountyClaimed(param),
		}
	case 5:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyCanceled{
			Value0BountyCanceled: To_Balances_BountyCanceled(param),
		}
	case 6:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyExtended{
			Value0BountyExtended: To_Balances_BountyExtended(param),
		}
	case 7:
		return &pbgear.Balances_BountiesEvent_1410_Value0BountyApproved{
			Value0BountyApproved: To_Balances_BountyApproved(param),
		}
	case 8:
		return &pbgear.Balances_BountiesEvent_1410_Value0CuratorProposed{
			Value0CuratorProposed: To_Balances_CuratorProposed(param),
		}
	case 9:
		return &pbgear.Balances_BountiesEvent_1410_Value0CuratorUnassigned{
			Value0CuratorUnassigned: To_Balances_CuratorUnassigned(param),
		}
	case 10:
		return &pbgear.Balances_BountiesEvent_1410_Value0CuratorAccepted{
			Value0CuratorAccepted: To_Balances_CuratorAccepted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_BountyApproved_1410(in any) *pbgear.Balances_BountyApproved_1410 {
	out := &pbgear.Balances_BountyApproved_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_BountyAwarded_1030(in any) *pbgear.Balances_BountyAwarded_1030 {
	out := &pbgear.Balances_BountyAwarded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Beneficiary To_SpCoreCryptoAccountId32(w)
	out.Beneficiary = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Balances_BountyBecameActive_1030(in any) *pbgear.Balances_BountyBecameActive_1030 {
	out := &pbgear.Balances_BountyBecameActive_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_BountyCanceled_1030(in any) *pbgear.Balances_BountyCanceled_1030 {
	out := &pbgear.Balances_BountyCanceled_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_BountyClaimed_1030(in any) *pbgear.Balances_BountyClaimed_1030 {
	out := &pbgear.Balances_BountyClaimed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field Payout
	out.Payout = To_string(v.ValueAt(1))
	// field Beneficiary To_SpCoreCryptoAccountId32(w)
	out.Beneficiary = To_SpCoreCryptoAccountId32(v.ValueAt(2))

	return out //from message
}

func To_Balances_BountyExtended_1030(in any) *pbgear.Balances_BountyExtended_1030 {
	out := &pbgear.Balances_BountyExtended_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_BountyProposed_1030(in any) *pbgear.Balances_BountyProposed_1030 {
	out := &pbgear.Balances_BountyProposed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_BountyRejected_1030(in any) *pbgear.Balances_BountyRejected_1030 {
	out := &pbgear.Balances_BountyRejected_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field Bond
	out.Bond = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Burned_1030(in any) *pbgear.Balances_Burned_1030 {
	out := &pbgear.Balances_Burned_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Burnt_1030(in any) *pbgear.Balances_Burnt_1030 {
	out := &pbgear.Balances_Burnt_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BurntFunds
	out.BurntFunds = To_string(v.ValueAt(0))

	return out //from message
}

func To_Balances_CallUnavailable_1030(in any) *pbgear.Balances_CallUnavailable_1030 {
	out := &pbgear.Balances_CallUnavailable_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Task To_Balances_TupleUint32Uint32(w)
	out.Task = To_Balances_TupleUint32Uint32(v.ValueAt(0))
	// primitive field Id
	out.Id = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Balances_CallWhitelisted_1030(in any) *pbgear.Balances_CallWhitelisted_1030 {
	out := &pbgear.Balances_CallWhitelisted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_Balances_Canceled_1030(in any) *pbgear.Balances_Canceled_1030 {
	out := &pbgear.Balances_Canceled_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field ChildIndex
	out.ChildIndex = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_Cancelled_1030(in any) *pbgear.Balances_Cancelled_1030 {
	out := &pbgear.Balances_Cancelled_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Tally To_RankedCollective_PalletRankedCollectiveTally(w)
	out.Tally = To_RankedCollective_PalletRankedCollectiveTally(v.ValueAt(1))

	return out //from message
}

func To_Balances_ChildBountiesEvent_1030(in any) *pbgear.Balances_ChildBountiesEvent_1030 {
	out := &pbgear.Balances_ChildBountiesEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_ChildBountiesEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ChildBountiesEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ChildBountiesEvent_1030_Value0Added{
			Value0Added: To_Balances_Added(param),
		}
	case 1:
		return &pbgear.Balances_ChildBountiesEvent_1030_Value0Awarded{
			Value0Awarded: To_Balances_Awarded(param),
		}
	case 2:
		return &pbgear.Balances_ChildBountiesEvent_1030_Value0Claimed{
			Value0Claimed: To_Balances_Claimed(param),
		}
	case 3:
		return &pbgear.Balances_ChildBountiesEvent_1030_Value0Canceled{
			Value0Canceled: To_Balances_Canceled(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Chilled_1030(in any) *pbgear.Balances_Chilled_1030 {
	out := &pbgear.Balances_Chilled_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Claimed_1030(in any) *pbgear.Balances_Claimed_1030 {
	out := &pbgear.Balances_Claimed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field ChildIndex
	out.ChildIndex = To_uint32(v.ValueAt(1))
	// primitive field Payout
	out.Payout = To_string(v.ValueAt(2))
	// field Beneficiary To_SpCoreCryptoAccountId32(w)
	out.Beneficiary = To_SpCoreCryptoAccountId32(v.ValueAt(3))

	return out //from message
}

func To_Balances_Cleared_1030(in any) *pbgear.Balances_Cleared_1030 {
	out := &pbgear.Balances_Cleared_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_Balances_CodeChanged_1030(in any) *pbgear.Balances_CodeChanged_1030 {
	out := &pbgear.Balances_CodeChanged_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsCodeId(w)
	out.Id = To_GearCoreIdsCodeId(v.ValueAt(0))
	// oneOf field Change
	v1 := To_OneOf_Balances_CodeChanged_1030_change(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_CodeChanged_1030_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_CodeChanged_1030_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Balances_CodeChanged_1030_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Balances_CodeChanged_1030_ChangeReinstrumented{
			ChangeReinstrumented: To_Reinstrumented(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_CodeChanged_1420(in any) *pbgear.Balances_CodeChanged_1420 {
	out := &pbgear.Balances_CodeChanged_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GprimitivesCodeId(w)
	out.Id = To_GprimitivesCodeId(v.ValueAt(0))
	// oneOf field Change
	v1 := To_OneOf_Balances_CodeChanged_1420_change(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_CodeChanged_1420_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_CodeChanged_1420_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Balances_CodeChanged_1420_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Balances_CodeChanged_1420_ChangeReinstrumented{
			ChangeReinstrumented: To_Reinstrumented(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_CodeUpdated_1030(in any) *pbgear.Balances_CodeUpdated_1030 {
	out := &pbgear.Balances_CodeUpdated_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_ConfirmAborted_1030(in any) *pbgear.Balances_ConfirmAborted_1030 {
	out := &pbgear.Balances_ConfirmAborted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_ConfirmStarted_1030(in any) *pbgear.Balances_ConfirmStarted_1030 {
	out := &pbgear.Balances_ConfirmStarted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Confirmed_1030(in any) *pbgear.Balances_Confirmed_1030 {
	out := &pbgear.Balances_Confirmed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Tally To_RankedCollective_PalletRankedCollectiveTally(w)
	out.Tally = To_RankedCollective_PalletRankedCollectiveTally(v.ValueAt(1))

	return out //from message
}

func To_Balances_ConsensusEvent_1030(in any) *pbgear.Balances_ConsensusEvent_1030 {
	out := &pbgear.Balances_ConsensusEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Balances_ConvictionVotingEvent_1030(in any) *pbgear.Balances_ConvictionVotingEvent_1030 {
	out := &pbgear.Balances_ConvictionVotingEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_ConvictionVotingEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ConvictionVotingEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ConvictionVotingEvent_1030_Value0Delegated{
			Value0Delegated: To_Balances_Delegated(param),
		}
	case 1:
		return &pbgear.Balances_ConvictionVotingEvent_1030_Value0Undelegated{
			Value0Undelegated: To_Balances_Undelegated(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Created_1030(in any) *pbgear.Balances_Created_1030 {
	out := &pbgear.Balances_Created_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Depositor To_SpCoreCryptoAccountId32(w)
	out.Depositor = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_CuratorAccepted_1410(in any) *pbgear.Balances_CuratorAccepted_1410 {
	out := &pbgear.Balances_CuratorAccepted_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))
	// field Curator To_SpCoreCryptoAccountId32(w)
	out.Curator = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Balances_CuratorProposed_1410(in any) *pbgear.Balances_CuratorProposed_1410 {
	out := &pbgear.Balances_CuratorProposed_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))
	// field Curator To_SpCoreCryptoAccountId32(w)
	out.Curator = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Balances_CuratorUnassigned_1410(in any) *pbgear.Balances_CuratorUnassigned_1410 {
	out := &pbgear.Balances_CuratorUnassigned_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_DecisionDepositPlaced_1030(in any) *pbgear.Balances_DecisionDepositPlaced_1030 {
	out := &pbgear.Balances_DecisionDepositPlaced_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_DecisionDepositRefunded_1030(in any) *pbgear.Balances_DecisionDepositRefunded_1030 {
	out := &pbgear.Balances_DecisionDepositRefunded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_DecisionStarted_1030(in any) *pbgear.Balances_DecisionStarted_1030 {
	out := &pbgear.Balances_DecisionStarted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field Track
	out.Track = To_uint32(v.ValueAt(1))
	// oneOf field Proposal
	v2 := To_OneOf_Balances_DecisionStarted_1030_proposal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v2))
	// field Tally To_ConvictionVoting_PalletConvictionVotingTypesTally(w)
	out.Tally = To_ConvictionVoting_PalletConvictionVotingTypesTally(v.ValueAt(3))

	return out //from message
}

func To_OneOf_Balances_DecisionStarted_1030_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_DecisionStarted_1030_ProposalLegacy{
			ProposalLegacy: To_Legacy(param),
		}
	case 1:
		return &pbgear.Balances_DecisionStarted_1030_ProposalInline{
			ProposalInline: To_Inline(param),
		}
	case 2:
		return &pbgear.Balances_DecisionStarted_1030_ProposalLookup{
			ProposalLookup: To_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Balances_Delegated_1030(in any) *pbgear.Balances_Delegated_1030 {
	out := &pbgear.Balances_Delegated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Balances_Deposit_1030(in any) *pbgear.Balances_Deposit_1030 {
	out := &pbgear.Balances_Deposit_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_DepositSlashed_1030(in any) *pbgear.Balances_DepositSlashed_1030 {
	out := &pbgear.Balances_DepositSlashed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Deposited_1030(in any) *pbgear.Balances_Deposited_1030 {
	out := &pbgear.Balances_Deposited_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))

	return out //from message
}

func To_Balances_Destroyed_1030(in any) *pbgear.Balances_Destroyed_1030 {
	out := &pbgear.Balances_Destroyed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Dispatched_1030(in any) *pbgear.Balances_Dispatched_1030 {
	out := &pbgear.Balances_Dispatched_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Task To_Balances_TupleUint32Uint32(w)
	out.Task = To_Balances_TupleUint32Uint32(v.ValueAt(0))
	// primitive field Id
	out.Id = To_bytes(v.ValueAt(1))
	// oneOf field Result
	v2 := To_OneOf_Balances_Dispatched_1030_result(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v2))

	return out //from message
}

func To_OneOf_Balances_Dispatched_1030_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Dispatched_1030_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Balances_Dispatched_1030_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_DispatchedAs_1030(in any) *pbgear.Balances_DispatchedAs_1030 {
	out := &pbgear.Balances_DispatchedAs_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Result
	v0 := To_OneOf_Balances_DispatchedAs_1030_result(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_DispatchedAs_1030_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_DispatchedAs_1030_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Balances_DispatchedAs_1030_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_DustLost_1030(in any) *pbgear.Balances_DustLost_1030 {
	out := &pbgear.Balances_DustLost_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Account To_SpCoreCryptoAccountId32(w)
	out.Account = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_ElectionFailed_1030(in any) *pbgear.Balances_ElectionFailed_1030 {
	out := &pbgear.Balances_ElectionFailed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_ElectionFinalized_1030(in any) *pbgear.Balances_ElectionFinalized_1030 {
	out := &pbgear.Balances_ElectionFinalized_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Compute
	v0 := To_OneOf_Balances_ElectionFinalized_1030_compute(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Compute").Set(reflect.ValueOf(v0))
	// field Score To_SpNposElectionsElectionScore(w)
	out.Score = To_SpNposElectionsElectionScore(v.ValueAt(1))

	return out //from message
}

func To_OneOf_Balances_ElectionFinalized_1030_compute(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ElectionFinalized_1030_ComputeOnChain{
			ComputeOnChain: To_ElectionProviderMultiPhase_OnChain(param),
		}
	case 1:
		return &pbgear.Balances_ElectionFinalized_1030_ComputeSigned{
			ComputeSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.Balances_ElectionFinalized_1030_ComputeUnsigned{
			ComputeUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.Balances_ElectionFinalized_1030_ComputeFallback{
			ComputeFallback: To_ElectionProviderMultiPhase_Fallback(param),
		}
	case 4:
		return &pbgear.Balances_ElectionFinalized_1030_ComputeEmergency{
			ComputeEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Balances_ElectionProviderMultiPhaseEvent_1030(in any) *pbgear.Balances_ElectionProviderMultiPhaseEvent_1030 {
	out := &pbgear.Balances_ElectionProviderMultiPhaseEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_ElectionProviderMultiPhaseEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ElectionProviderMultiPhaseEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ElectionProviderMultiPhaseEvent_1030_Value0SolutionStored{
			Value0SolutionStored: To_Balances_SolutionStored(param),
		}
	case 1:
		return &pbgear.Balances_ElectionProviderMultiPhaseEvent_1030_Value0ElectionFinalized{
			Value0ElectionFinalized: To_Balances_ElectionFinalized(param),
		}
	case 2:
		return &pbgear.Balances_ElectionProviderMultiPhaseEvent_1030_Value0ElectionFailed{
			Value0ElectionFailed: To_Balances_ElectionFailed(param),
		}
	case 3:
		return &pbgear.Balances_ElectionProviderMultiPhaseEvent_1030_Value0Rewarded{
			Value0Rewarded: To_Balances_Rewarded(param),
		}
	case 4:
		return &pbgear.Balances_ElectionProviderMultiPhaseEvent_1030_Value0Slashed{
			Value0Slashed: To_Balances_Slashed(param),
		}
	case 5:
		return &pbgear.Balances_ElectionProviderMultiPhaseEvent_1030_Value0PhaseTransitioned{
			Value0PhaseTransitioned: To_Balances_PhaseTransitioned(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Endowed_1030(in any) *pbgear.Balances_Endowed_1030 {
	out := &pbgear.Balances_Endowed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Account To_SpCoreCryptoAccountId32(w)
	out.Account = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field FreeBalance
	out.FreeBalance = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_EraPaid_1030(in any) *pbgear.Balances_EraPaid_1030 {
	out := &pbgear.Balances_EraPaid_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field EraIndex
	out.EraIndex = To_uint32(v.ValueAt(0))
	// primitive field ValidatorPayout
	out.ValidatorPayout = To_string(v.ValueAt(1))
	// primitive field Remainder
	out.Remainder = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_ExtrinsicFailed_1030(in any) *pbgear.Balances_ExtrinsicFailed_1030 {
	out := &pbgear.Balances_ExtrinsicFailed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field DispatchError
	v0 := To_OneOf_Balances_ExtrinsicFailed_1030_dispatch_error(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("DispatchError").Set(reflect.ValueOf(v0))
	// field DispatchInfo To_FrameSupportDispatchDispatchInfo(w)
	out.DispatchInfo = To_FrameSupportDispatchDispatchInfo(v.ValueAt(1))

	return out //from message
}

func To_OneOf_Balances_ExtrinsicFailed_1030_dispatch_error(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorOther{
			DispatchErrorOther: To_Other(param),
		}
	case 1:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorCannotLookup{
			DispatchErrorCannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorBadOrigin{
			DispatchErrorBadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorModule{
			DispatchErrorModule: To_Module(param),
		}
	case 4:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorConsumerRemaining{
			DispatchErrorConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorNoProviders{
			DispatchErrorNoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorTooManyConsumers{
			DispatchErrorTooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorToken{
			DispatchErrorToken: To_Token(param),
		}
	case 8:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorArithmetic{
			DispatchErrorArithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorTransactional{
			DispatchErrorTransactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorExhausted{
			DispatchErrorExhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorCorruption{
			DispatchErrorCorruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorUnavailable{
			DispatchErrorUnavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.Balances_ExtrinsicFailed_1030_DispatchErrorRootNotAllowed{
			DispatchErrorRootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Balances_ExtrinsicSuccess_1030(in any) *pbgear.Balances_ExtrinsicSuccess_1030 {
	out := &pbgear.Balances_ExtrinsicSuccess_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field DispatchInfo To_FrameSupportDispatchDispatchInfo(w)
	out.DispatchInfo = To_FrameSupportDispatchDispatchInfo(v.ValueAt(0))

	return out //from message
}

func To_Balances_FellowshipCollectiveEvent_1030(in any) *pbgear.Balances_FellowshipCollectiveEvent_1030 {
	out := &pbgear.Balances_FellowshipCollectiveEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_FellowshipCollectiveEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_FellowshipCollectiveEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_FellowshipCollectiveEvent_1030_Value0MemberAdded{
			Value0MemberAdded: To_Balances_MemberAdded(param),
		}
	case 1:
		return &pbgear.Balances_FellowshipCollectiveEvent_1030_Value0RankChanged{
			Value0RankChanged: To_Balances_RankChanged(param),
		}
	case 2:
		return &pbgear.Balances_FellowshipCollectiveEvent_1030_Value0MemberRemoved{
			Value0MemberRemoved: To_Balances_MemberRemoved(param),
		}
	case 3:
		return &pbgear.Balances_FellowshipCollectiveEvent_1030_Value0Voted{
			Value0Voted: To_Balances_Voted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_FellowshipReferendaEvent_1030(in any) *pbgear.Balances_FellowshipReferendaEvent_1030 {
	out := &pbgear.Balances_FellowshipReferendaEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_FellowshipReferendaEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_FellowshipReferendaEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0Submitted{
			Value0Submitted: To_Balances_Submitted(param),
		}
	case 1:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0DecisionDepositPlaced{
			Value0DecisionDepositPlaced: To_Balances_DecisionDepositPlaced(param),
		}
	case 2:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0DecisionDepositRefunded{
			Value0DecisionDepositRefunded: To_Balances_DecisionDepositRefunded(param),
		}
	case 3:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0DepositSlashed{
			Value0DepositSlashed: To_Balances_DepositSlashed(param),
		}
	case 4:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0DecisionStarted{
			Value0DecisionStarted: To_Balances_DecisionStarted(param),
		}
	case 5:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0ConfirmStarted{
			Value0ConfirmStarted: To_Balances_ConfirmStarted(param),
		}
	case 6:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0ConfirmAborted{
			Value0ConfirmAborted: To_Balances_ConfirmAborted(param),
		}
	case 7:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0Confirmed{
			Value0Confirmed: To_Balances_Confirmed(param),
		}
	case 8:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0Approved{
			Value0Approved: To_Balances_Approved(param),
		}
	case 9:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0Rejected{
			Value0Rejected: To_Balances_Rejected(param),
		}
	case 10:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0TimedOut{
			Value0TimedOut: To_Balances_TimedOut(param),
		}
	case 11:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0Cancelled{
			Value0Cancelled: To_Balances_Cancelled(param),
		}
	case 12:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0Killed{
			Value0Killed: To_Balances_Killed(param),
		}
	case 13:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0SubmissionDepositRefunded{
			Value0SubmissionDepositRefunded: To_Balances_SubmissionDepositRefunded(param),
		}
	case 14:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0MetadataSet{
			Value0MetadataSet: To_Balances_MetadataSet(param),
		}
	case 15:
		return &pbgear.Balances_FellowshipReferendaEvent_1030_Value0MetadataCleared{
			Value0MetadataCleared: To_Balances_MetadataCleared(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ForceEra_1030(in any) *pbgear.Balances_ForceEra_1030 {
	out := &pbgear.Balances_ForceEra_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Mode
	v0 := To_OneOf_Balances_ForceEra_1030_mode(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Mode").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ForceEra_1030_mode(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ForceEra_1030_ModeNotForcing{
			ModeNotForcing: To_Staking_NotForcing(param),
		}
	case 1:
		return &pbgear.Balances_ForceEra_1030_ModeForceNew{
			ModeForceNew: To_Staking_ForceNew(param),
		}
	case 2:
		return &pbgear.Balances_ForceEra_1030_ModeForceNone{
			ModeForceNone: To_Staking_ForceNone(param),
		}
	case 3:
		return &pbgear.Balances_ForceEra_1030_ModeForceAlways{
			ModeForceAlways: To_Staking_ForceAlways(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Frozen_1030(in any) *pbgear.Balances_Frozen_1030 {
	out := &pbgear.Balances_Frozen_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_GearVoucherEvent_1030(in any) *pbgear.Balances_GearVoucherEvent_1030 {
	out := &pbgear.Balances_GearVoucherEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_GearVoucherEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_GearVoucherEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_GearVoucherEvent_1030_Value0VoucherIssued{
			Value0VoucherIssued: To_Balances_VoucherIssued(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_GearVoucherEvent_1110(in any) *pbgear.Balances_GearVoucherEvent_1110 {
	out := &pbgear.Balances_GearVoucherEvent_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_GearVoucherEvent_1110_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_GearVoucherEvent_1110_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_GearVoucherEvent_1110_Value0VoucherIssued{
			Value0VoucherIssued: To_Balances_VoucherIssued(param),
		}
	case 1:
		return &pbgear.Balances_GearVoucherEvent_1110_Value0VoucherRevoked{
			Value0VoucherRevoked: To_Balances_VoucherRevoked(param),
		}
	case 2:
		return &pbgear.Balances_GearVoucherEvent_1110_Value0VoucherUpdated{
			Value0VoucherUpdated: To_Balances_VoucherUpdated(param),
		}
	case 3:
		return &pbgear.Balances_GearVoucherEvent_1110_Value0VoucherDeclined{
			Value0VoucherDeclined: To_Balances_VoucherDeclined(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_GearEvent_1030(in any) *pbgear.Balances_GearEvent_1030 {
	out := &pbgear.Balances_GearEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_GearEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_GearEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_GearEvent_1030_Value0MessageQueued{
			Value0MessageQueued: To_Balances_MessageQueued(param),
		}
	case 1:
		return &pbgear.Balances_GearEvent_1030_Value0UserMessageSent{
			Value0UserMessageSent: To_Balances_UserMessageSent(param),
		}
	case 2:
		return &pbgear.Balances_GearEvent_1030_Value0UserMessageRead{
			Value0UserMessageRead: To_Balances_UserMessageRead(param),
		}
	case 3:
		return &pbgear.Balances_GearEvent_1030_Value0MessagesDispatched{
			Value0MessagesDispatched: To_Balances_MessagesDispatched(param),
		}
	case 4:
		return &pbgear.Balances_GearEvent_1030_Value0MessageWaited{
			Value0MessageWaited: To_Balances_MessageWaited(param),
		}
	case 5:
		return &pbgear.Balances_GearEvent_1030_Value0MessageWoken{
			Value0MessageWoken: To_Balances_MessageWoken(param),
		}
	case 6:
		return &pbgear.Balances_GearEvent_1030_Value0CodeChanged{
			Value0CodeChanged: To_Balances_CodeChanged(param),
		}
	case 7:
		return &pbgear.Balances_GearEvent_1030_Value0ProgramChanged{
			Value0ProgramChanged: To_Balances_ProgramChanged(param),
		}
	case 8:
		return &pbgear.Balances_GearEvent_1030_Value0QueueNotProcessed{
			Value0QueueNotProcessed: To_Balances_QueueNotProcessed(param),
		}
	case 9:
		return &pbgear.Balances_GearEvent_1030_Value0ProgramResumeSessionStarted{
			Value0ProgramResumeSessionStarted: To_Balances_ProgramResumeSessionStarted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_GearEvent_1420(in any) *pbgear.Balances_GearEvent_1420 {
	out := &pbgear.Balances_GearEvent_1420{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_GearEvent_1420_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_GearEvent_1420_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_GearEvent_1420_Value0MessageQueued{
			Value0MessageQueued: To_Balances_MessageQueued(param),
		}
	case 1:
		return &pbgear.Balances_GearEvent_1420_Value0UserMessageSent{
			Value0UserMessageSent: To_Balances_UserMessageSent(param),
		}
	case 2:
		return &pbgear.Balances_GearEvent_1420_Value0UserMessageRead{
			Value0UserMessageRead: To_Balances_UserMessageRead(param),
		}
	case 3:
		return &pbgear.Balances_GearEvent_1420_Value0MessagesDispatched{
			Value0MessagesDispatched: To_Balances_MessagesDispatched(param),
		}
	case 4:
		return &pbgear.Balances_GearEvent_1420_Value0MessageWaited{
			Value0MessageWaited: To_Balances_MessageWaited(param),
		}
	case 5:
		return &pbgear.Balances_GearEvent_1420_Value0MessageWoken{
			Value0MessageWoken: To_Balances_MessageWoken(param),
		}
	case 6:
		return &pbgear.Balances_GearEvent_1420_Value0CodeChanged{
			Value0CodeChanged: To_Balances_CodeChanged(param),
		}
	case 7:
		return &pbgear.Balances_GearEvent_1420_Value0ProgramChanged{
			Value0ProgramChanged: To_Balances_ProgramChanged(param),
		}
	case 8:
		return &pbgear.Balances_GearEvent_1420_Value0QueueNotProcessed{
			Value0QueueNotProcessed: To_Balances_QueueNotProcessed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_GrandpaEvent_1030(in any) *pbgear.Balances_GrandpaEvent_1030 {
	out := &pbgear.Balances_GrandpaEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_GrandpaEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_GrandpaEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_GrandpaEvent_1030_Value0NewAuthorities{
			Value0NewAuthorities: To_Balances_NewAuthorities(param),
		}
	case 1:
		return &pbgear.Balances_GrandpaEvent_1030_Value0Paused{
			Value0Paused: To_Balances_Paused(param),
		}
	case 2:
		return &pbgear.Balances_GrandpaEvent_1030_Value0Resumed{
			Value0Resumed: To_Balances_Resumed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_HeartbeatReceived_1030(in any) *pbgear.Balances_HeartbeatReceived_1030 {
	out := &pbgear.Balances_HeartbeatReceived_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field AuthorityId To_ImOnline_PalletImOnlineSr25519AppSr25519Public(w)
	out.AuthorityId = To_ImOnline_PalletImOnlineSr25519AppSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_Balances_Id_100(in any) *pbgear.Balances_Id_100 {
	out := &pbgear.Balances_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_IdentityCleared_1030(in any) *pbgear.Balances_IdentityCleared_1030 {
	out := &pbgear.Balances_IdentityCleared_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Deposit
	out.Deposit = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_IdentityKilled_1030(in any) *pbgear.Balances_IdentityKilled_1030 {
	out := &pbgear.Balances_IdentityKilled_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Deposit
	out.Deposit = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_IdentitySet_1030(in any) *pbgear.Balances_IdentitySet_1030 {
	out := &pbgear.Balances_IdentitySet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_IdentityEvent_1030(in any) *pbgear.Balances_IdentityEvent_1030 {
	out := &pbgear.Balances_IdentityEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_IdentityEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_IdentityEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_IdentityEvent_1030_Value0IdentitySet{
			Value0IdentitySet: To_Balances_IdentitySet(param),
		}
	case 1:
		return &pbgear.Balances_IdentityEvent_1030_Value0IdentityCleared{
			Value0IdentityCleared: To_Balances_IdentityCleared(param),
		}
	case 2:
		return &pbgear.Balances_IdentityEvent_1030_Value0IdentityKilled{
			Value0IdentityKilled: To_Balances_IdentityKilled(param),
		}
	case 3:
		return &pbgear.Balances_IdentityEvent_1030_Value0JudgementRequested{
			Value0JudgementRequested: To_Balances_JudgementRequested(param),
		}
	case 4:
		return &pbgear.Balances_IdentityEvent_1030_Value0JudgementUnrequested{
			Value0JudgementUnrequested: To_Balances_JudgementUnrequested(param),
		}
	case 5:
		return &pbgear.Balances_IdentityEvent_1030_Value0JudgementGiven{
			Value0JudgementGiven: To_Balances_JudgementGiven(param),
		}
	case 6:
		return &pbgear.Balances_IdentityEvent_1030_Value0RegistrarAdded{
			Value0RegistrarAdded: To_Balances_RegistrarAdded(param),
		}
	case 7:
		return &pbgear.Balances_IdentityEvent_1030_Value0SubIdentityAdded{
			Value0SubIdentityAdded: To_Balances_SubIdentityAdded(param),
		}
	case 8:
		return &pbgear.Balances_IdentityEvent_1030_Value0SubIdentityRemoved{
			Value0SubIdentityRemoved: To_Balances_SubIdentityRemoved(param),
		}
	case 9:
		return &pbgear.Balances_IdentityEvent_1030_Value0SubIdentityRevoked{
			Value0SubIdentityRevoked: To_Balances_SubIdentityRevoked(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ImOnlineEvent_1030(in any) *pbgear.Balances_ImOnlineEvent_1030 {
	out := &pbgear.Balances_ImOnlineEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_ImOnlineEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ImOnlineEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ImOnlineEvent_1030_Value0HeartbeatReceived{
			Value0HeartbeatReceived: To_Balances_HeartbeatReceived(param),
		}
	case 1:
		return &pbgear.Balances_ImOnlineEvent_1030_Value0AllGood{
			Value0AllGood: To_Balances_AllGood(param),
		}
	case 2:
		return &pbgear.Balances_ImOnlineEvent_1030_Value0SomeOffline{
			Value0SomeOffline: To_Balances_SomeOffline(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Index_100(in any) *pbgear.Balances_Index_100 {
	out := &pbgear.Balances_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Balances_TupleNull(w)
	out.Value0 = To_Balances_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Balances_Issued_1030(in any) *pbgear.Balances_Issued_1030 {
	out := &pbgear.Balances_Issued_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))

	return out //from message
}

func To_Balances_ItemCompleted_1030(in any) *pbgear.Balances_ItemCompleted_1030 {
	out := &pbgear.Balances_ItemCompleted_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_ItemFailed_1030(in any) *pbgear.Balances_ItemFailed_1030 {
	out := &pbgear.Balances_ItemFailed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Error
	v0 := To_OneOf_Balances_ItemFailed_1030_error(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Error").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ItemFailed_1030_error(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ItemFailed_1030_ErrorOther{
			ErrorOther: To_Other(param),
		}
	case 1:
		return &pbgear.Balances_ItemFailed_1030_ErrorCannotLookup{
			ErrorCannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.Balances_ItemFailed_1030_ErrorBadOrigin{
			ErrorBadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.Balances_ItemFailed_1030_ErrorModule{
			ErrorModule: To_Module(param),
		}
	case 4:
		return &pbgear.Balances_ItemFailed_1030_ErrorConsumerRemaining{
			ErrorConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.Balances_ItemFailed_1030_ErrorNoProviders{
			ErrorNoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.Balances_ItemFailed_1030_ErrorTooManyConsumers{
			ErrorTooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.Balances_ItemFailed_1030_ErrorToken{
			ErrorToken: To_Token(param),
		}
	case 8:
		return &pbgear.Balances_ItemFailed_1030_ErrorArithmetic{
			ErrorArithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.Balances_ItemFailed_1030_ErrorTransactional{
			ErrorTransactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.Balances_ItemFailed_1030_ErrorExhausted{
			ErrorExhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.Balances_ItemFailed_1030_ErrorCorruption{
			ErrorCorruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.Balances_ItemFailed_1030_ErrorUnavailable{
			ErrorUnavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.Balances_ItemFailed_1030_ErrorRootNotAllowed{
			ErrorRootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_JudgementGiven_1030(in any) *pbgear.Balances_JudgementGiven_1030 {
	out := &pbgear.Balances_JudgementGiven_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Target To_SpCoreCryptoAccountId32(w)
	out.Target = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field RegistrarIndex
	out.RegistrarIndex = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_JudgementRequested_1030(in any) *pbgear.Balances_JudgementRequested_1030 {
	out := &pbgear.Balances_JudgementRequested_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field RegistrarIndex
	out.RegistrarIndex = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_JudgementUnrequested_1030(in any) *pbgear.Balances_JudgementUnrequested_1030 {
	out := &pbgear.Balances_JudgementUnrequested_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field RegistrarIndex
	out.RegistrarIndex = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_Kicked_1030(in any) *pbgear.Balances_Kicked_1030 {
	out := &pbgear.Balances_Kicked_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Nominator To_SpCoreCryptoAccountId32(w)
	out.Nominator = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Balances_Killed_1030(in any) *pbgear.Balances_Killed_1030 {
	out := &pbgear.Balances_Killed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Tally To_RankedCollective_PalletRankedCollectiveTally(w)
	out.Tally = To_RankedCollective_PalletRankedCollectiveTally(v.ValueAt(1))

	return out //from message
}

func To_Balances_KilledAccount_1030(in any) *pbgear.Balances_KilledAccount_1030 {
	out := &pbgear.Balances_KilledAccount_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Account To_SpCoreCryptoAccountId32(w)
	out.Account = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Locked_1030(in any) *pbgear.Balances_Locked_1030 {
	out := &pbgear.Balances_Locked_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_MemberAdded_1030(in any) *pbgear.Balances_MemberAdded_1030 {
	out := &pbgear.Balances_MemberAdded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_MemberRemoved_1030(in any) *pbgear.Balances_MemberRemoved_1030 {
	out := &pbgear.Balances_MemberRemoved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// field Member To_SpCoreCryptoAccountId32(w)
	out.Member = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Balances_MessageQueued_1030(in any) *pbgear.Balances_MessageQueued_1030 {
	out := &pbgear.Balances_MessageQueued_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// field Source To_SpCoreCryptoAccountId32(w)
	out.Source = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// field Destination To_GearCoreIdsProgramId(w)
	out.Destination = To_GearCoreIdsProgramId(v.ValueAt(2))
	// oneOf field Entry
	v3 := To_OneOf_Balances_MessageQueued_1030_entry(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Entry").Set(reflect.ValueOf(v3))

	return out //from message
}

func To_OneOf_Balances_MessageQueued_1030_entry(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageQueued_1030_EntryInit{
			EntryInit: To_Init(param),
		}
	case 1:
		return &pbgear.Balances_MessageQueued_1030_EntryHandle{
			EntryHandle: To_Handle(param),
		}
	case 2:
		return &pbgear.Balances_MessageQueued_1030_EntryReply{
			EntryReply: To_Reply(param),
		}
	case 3:
		return &pbgear.Balances_MessageQueued_1030_EntrySignal{
			EntrySignal: To_Signal(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_MessageQueued_1420(in any) *pbgear.Balances_MessageQueued_1420 {
	out := &pbgear.Balances_MessageQueued_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GprimitivesMessageId(w)
	out.Id = To_GprimitivesMessageId(v.ValueAt(0))
	// field Source To_SpCoreCryptoAccountId32(w)
	out.Source = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// field Destination To_GprimitivesActorId(w)
	out.Destination = To_GprimitivesActorId(v.ValueAt(2))
	// oneOf field Entry
	v3 := To_OneOf_Balances_MessageQueued_1420_entry(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Entry").Set(reflect.ValueOf(v3))

	return out //from message
}

func To_OneOf_Balances_MessageQueued_1420_entry(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageQueued_1420_EntryInit{
			EntryInit: To_Init(param),
		}
	case 1:
		return &pbgear.Balances_MessageQueued_1420_EntryHandle{
			EntryHandle: To_Handle(param),
		}
	case 2:
		return &pbgear.Balances_MessageQueued_1420_EntryReply{
			EntryReply: To_Reply(param),
		}
	case 3:
		return &pbgear.Balances_MessageQueued_1420_EntrySignal{
			EntrySignal: To_Signal(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_MessageWaited_1030(in any) *pbgear.Balances_MessageWaited_1030 {
	out := &pbgear.Balances_MessageWaited_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Origin
	v1 := To_OneOf_Balances_MessageWaited_1030_origin(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Origin").Set(reflect.ValueOf(v1))
	// oneOf field Reason
	v2 := To_OneOf_Balances_MessageWaited_1030_reason(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v2))
	// primitive field Expiration
	out.Expiration = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_OneOf_Balances_MessageWaited_1030_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageWaited_1030_OriginNode{
			OriginNode: To_Node(param),
		}
	case 1:
		return &pbgear.Balances_MessageWaited_1030_OriginReservation{
			OriginReservation: To_Reservation(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Balances_MessageWaited_1030_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageWaited_1030_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Balances_MessageWaited_1030_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_MessageWaited_1420(in any) *pbgear.Balances_MessageWaited_1420 {
	out := &pbgear.Balances_MessageWaited_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GprimitivesMessageId(w)
	out.Id = To_GprimitivesMessageId(v.ValueAt(0))
	// oneOf field Origin
	v1 := To_OneOf_Balances_MessageWaited_1420_origin(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Origin").Set(reflect.ValueOf(v1))
	// oneOf field Reason
	v2 := To_OneOf_Balances_MessageWaited_1420_reason(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v2))
	// primitive field Expiration
	out.Expiration = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_OneOf_Balances_MessageWaited_1420_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageWaited_1420_OriginNode{
			OriginNode: To_Node(param),
		}
	case 1:
		return &pbgear.Balances_MessageWaited_1420_OriginReservation{
			OriginReservation: To_Reservation(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Balances_MessageWaited_1420_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageWaited_1420_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Balances_MessageWaited_1420_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_MessageWoken_1030(in any) *pbgear.Balances_MessageWoken_1030 {
	out := &pbgear.Balances_MessageWoken_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Reason
	v1 := To_OneOf_Balances_MessageWoken_1030_reason(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_MessageWoken_1030_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageWoken_1030_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Balances_MessageWoken_1030_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_MessageWoken_1420(in any) *pbgear.Balances_MessageWoken_1420 {
	out := &pbgear.Balances_MessageWoken_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GprimitivesMessageId(w)
	out.Id = To_GprimitivesMessageId(v.ValueAt(0))
	// oneOf field Reason
	v1 := To_OneOf_Balances_MessageWoken_1420_reason(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_MessageWoken_1420_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MessageWoken_1420_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Balances_MessageWoken_1420_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_MessagesDispatched_1030(in any) *pbgear.Balances_MessagesDispatched_1030 {
	out := &pbgear.Balances_MessagesDispatched_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Total
	out.Total = To_uint32(v.ValueAt(0))
	// field Statuses To_BTreeMap(w)
	out.Statuses = To_BTreeMap(v.ValueAt(1))
	// field StateChanges To_BTreeSet(w)
	out.StateChanges = To_BTreeSet(v.ValueAt(2))

	return out //from message
}

func To_Balances_MetadataCleared_1030(in any) *pbgear.Balances_MetadataCleared_1030 {
	out := &pbgear.Balances_MetadataCleared_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(1))

	return out //from message
}

func To_Balances_MetadataSet_1030(in any) *pbgear.Balances_MetadataSet_1030 {
	out := &pbgear.Balances_MetadataSet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(1))

	return out //from message
}

func To_Balances_MinBalanceDeficitAdjusted_1410(in any) *pbgear.Balances_MinBalanceDeficitAdjusted_1410 {
	out := &pbgear.Balances_MinBalanceDeficitAdjusted_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_MinBalanceExcessAdjusted_1410(in any) *pbgear.Balances_MinBalanceExcessAdjusted_1410 {
	out := &pbgear.Balances_MinBalanceExcessAdjusted_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Minted_1030(in any) *pbgear.Balances_Minted_1030 {
	out := &pbgear.Balances_Minted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_MultisigApproval_1030(in any) *pbgear.Balances_MultisigApproval_1030 {
	out := &pbgear.Balances_MultisigApproval_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Approving To_SpCoreCryptoAccountId32(w)
	out.Approving = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Timepoint To_Multisig_PalletMultisigTimepoint(w)
	out.Timepoint = To_Multisig_PalletMultisigTimepoint(v.ValueAt(1))
	// field Multisig To_SpCoreCryptoAccountId32(w)
	out.Multisig = To_SpCoreCryptoAccountId32(v.ValueAt(2))
	// primitive field CallHash
	out.CallHash = To_bytes(v.ValueAt(3))

	return out //from message
}

func To_Balances_MultisigCancelled_1030(in any) *pbgear.Balances_MultisigCancelled_1030 {
	out := &pbgear.Balances_MultisigCancelled_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Cancelling To_SpCoreCryptoAccountId32(w)
	out.Cancelling = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Timepoint To_Multisig_PalletMultisigTimepoint(w)
	out.Timepoint = To_Multisig_PalletMultisigTimepoint(v.ValueAt(1))
	// field Multisig To_SpCoreCryptoAccountId32(w)
	out.Multisig = To_SpCoreCryptoAccountId32(v.ValueAt(2))
	// primitive field CallHash
	out.CallHash = To_bytes(v.ValueAt(3))

	return out //from message
}

func To_Balances_MultisigExecuted_1030(in any) *pbgear.Balances_MultisigExecuted_1030 {
	out := &pbgear.Balances_MultisigExecuted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Approving To_SpCoreCryptoAccountId32(w)
	out.Approving = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Timepoint To_Multisig_PalletMultisigTimepoint(w)
	out.Timepoint = To_Multisig_PalletMultisigTimepoint(v.ValueAt(1))
	// field Multisig To_SpCoreCryptoAccountId32(w)
	out.Multisig = To_SpCoreCryptoAccountId32(v.ValueAt(2))
	// primitive field CallHash
	out.CallHash = To_bytes(v.ValueAt(3))
	// oneOf field Result
	v4 := To_OneOf_Balances_MultisigExecuted_1030_result(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v4))

	return out //from message
}

func To_OneOf_Balances_MultisigExecuted_1030_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MultisigExecuted_1030_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Balances_MultisigExecuted_1030_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_MultisigEvent_1030(in any) *pbgear.Balances_MultisigEvent_1030 {
	out := &pbgear.Balances_MultisigEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_MultisigEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_MultisigEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_MultisigEvent_1030_Value0NewMultisig{
			Value0NewMultisig: To_Balances_NewMultisig(param),
		}
	case 1:
		return &pbgear.Balances_MultisigEvent_1030_Value0MultisigApproval{
			Value0MultisigApproval: To_Balances_MultisigApproval(param),
		}
	case 2:
		return &pbgear.Balances_MultisigEvent_1030_Value0MultisigExecuted{
			Value0MultisigExecuted: To_Balances_MultisigExecuted(param),
		}
	case 3:
		return &pbgear.Balances_MultisigEvent_1030_Value0MultisigCancelled{
			Value0MultisigCancelled: To_Balances_MultisigCancelled(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_NewAccount_1030(in any) *pbgear.Balances_NewAccount_1030 {
	out := &pbgear.Balances_NewAccount_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Account To_SpCoreCryptoAccountId32(w)
	out.Account = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_NewAuthorities_1030(in any) *pbgear.Balances_NewAuthorities_1030 {
	out := &pbgear.Balances_NewAuthorities_1030{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field AuthoritySet
	out.AuthoritySet = To_Repeated_Balances_NewAuthorities_1030_authority_set(v.ValueAt(0))

	return out //from message
}

func To_Repeated_Balances_NewAuthorities_1030_authority_set(in any) []*pbgear.Balances_TupleSpConsensusGrandpaAppPublicuint64 {
	items := in.([]interface{})

	var out []*pbgear.Balances_TupleSpConsensusGrandpaAppPublicuint64
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Balances_TupleSpConsensusGrandpaAppPublicuint64(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Balances_NewMultisig_1030(in any) *pbgear.Balances_NewMultisig_1030 {
	out := &pbgear.Balances_NewMultisig_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Approving To_SpCoreCryptoAccountId32(w)
	out.Approving = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Multisig To_SpCoreCryptoAccountId32(w)
	out.Multisig = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field CallHash
	out.CallHash = To_bytes(v.ValueAt(2))

	return out //from message
}

func To_Balances_NewSession_1030(in any) *pbgear.Balances_NewSession_1030 {
	out := &pbgear.Balances_NewSession_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SessionIndex
	out.SessionIndex = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_NominationPoolsEvent_1030(in any) *pbgear.Balances_NominationPoolsEvent_1030 {
	out := &pbgear.Balances_NominationPoolsEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_NominationPoolsEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_NominationPoolsEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0Created{
			Value0Created: To_Balances_Created(param),
		}
	case 1:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0Bonded{
			Value0Bonded: To_Balances_Bonded(param),
		}
	case 2:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0PaidOut{
			Value0PaidOut: To_Balances_PaidOut(param),
		}
	case 3:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0Unbonded{
			Value0Unbonded: To_Balances_Unbonded(param),
		}
	case 4:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0Withdrawn{
			Value0Withdrawn: To_Balances_Withdrawn(param),
		}
	case 5:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0Destroyed{
			Value0Destroyed: To_Balances_Destroyed(param),
		}
	case 6:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0StateChanged{
			Value0StateChanged: To_Balances_StateChanged(param),
		}
	case 7:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0MemberRemoved{
			Value0MemberRemoved: To_Balances_MemberRemoved(param),
		}
	case 8:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0RolesUpdated{
			Value0RolesUpdated: To_Balances_RolesUpdated(param),
		}
	case 9:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0PoolSlashed{
			Value0PoolSlashed: To_Balances_PoolSlashed(param),
		}
	case 10:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0UnbondingPoolSlashed{
			Value0UnbondingPoolSlashed: To_Balances_UnbondingPoolSlashed(param),
		}
	case 11:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0PoolCommissionUpdated{
			Value0PoolCommissionUpdated: To_Balances_PoolCommissionUpdated(param),
		}
	case 12:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0PoolMaxCommissionUpdated{
			Value0PoolMaxCommissionUpdated: To_Balances_PoolMaxCommissionUpdated(param),
		}
	case 13:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0PoolCommissionChangeRateUpdated{
			Value0PoolCommissionChangeRateUpdated: To_Balances_PoolCommissionChangeRateUpdated(param),
		}
	case 14:
		return &pbgear.Balances_NominationPoolsEvent_1030_Value0PoolCommissionClaimed{
			Value0PoolCommissionClaimed: To_Balances_PoolCommissionClaimed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_NominationPoolsEvent_1410(in any) *pbgear.Balances_NominationPoolsEvent_1410 {
	out := &pbgear.Balances_NominationPoolsEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_NominationPoolsEvent_1410_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_NominationPoolsEvent_1410_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0Created{
			Value0Created: To_Balances_Created(param),
		}
	case 1:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0Bonded{
			Value0Bonded: To_Balances_Bonded(param),
		}
	case 2:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0PaidOut{
			Value0PaidOut: To_Balances_PaidOut(param),
		}
	case 3:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0Unbonded{
			Value0Unbonded: To_Balances_Unbonded(param),
		}
	case 4:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0Withdrawn{
			Value0Withdrawn: To_Balances_Withdrawn(param),
		}
	case 5:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0Destroyed{
			Value0Destroyed: To_Balances_Destroyed(param),
		}
	case 6:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0StateChanged{
			Value0StateChanged: To_Balances_StateChanged(param),
		}
	case 7:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0MemberRemoved{
			Value0MemberRemoved: To_Balances_MemberRemoved(param),
		}
	case 8:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0RolesUpdated{
			Value0RolesUpdated: To_Balances_RolesUpdated(param),
		}
	case 9:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0PoolSlashed{
			Value0PoolSlashed: To_Balances_PoolSlashed(param),
		}
	case 10:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0UnbondingPoolSlashed{
			Value0UnbondingPoolSlashed: To_Balances_UnbondingPoolSlashed(param),
		}
	case 11:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0PoolCommissionUpdated{
			Value0PoolCommissionUpdated: To_Balances_PoolCommissionUpdated(param),
		}
	case 12:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0PoolMaxCommissionUpdated{
			Value0PoolMaxCommissionUpdated: To_Balances_PoolMaxCommissionUpdated(param),
		}
	case 13:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0PoolCommissionChangeRateUpdated{
			Value0PoolCommissionChangeRateUpdated: To_Balances_PoolCommissionChangeRateUpdated(param),
		}
	case 14:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0PoolCommissionClaimed{
			Value0PoolCommissionClaimed: To_Balances_PoolCommissionClaimed(param),
		}
	case 15:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0MinBalanceDeficitAdjusted{
			Value0MinBalanceDeficitAdjusted: To_Balances_MinBalanceDeficitAdjusted(param),
		}
	case 16:
		return &pbgear.Balances_NominationPoolsEvent_1410_Value0MinBalanceExcessAdjusted{
			Value0MinBalanceExcessAdjusted: To_Balances_MinBalanceExcessAdjusted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Noted_1030(in any) *pbgear.Balances_Noted_1030 {
	out := &pbgear.Balances_Noted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_Balances_Offence_1030(in any) *pbgear.Balances_Offence_1030 {
	out := &pbgear.Balances_Offence_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Kind
	out.Kind = To_bytes(v.ValueAt(0))
	// primitive field Timeslot
	out.Timeslot = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Balances_OffencesEvent_1030(in any) *pbgear.Balances_OffencesEvent_1030 {
	out := &pbgear.Balances_OffencesEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_OffencesEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_OffencesEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_OffencesEvent_1030_Value0Offence{
			Value0Offence: To_Balances_Offence(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_OldSlashingReportDiscarded_1030(in any) *pbgear.Balances_OldSlashingReportDiscarded_1030 {
	out := &pbgear.Balances_OldSlashingReportDiscarded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SessionIndex
	out.SessionIndex = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_OtherEvent_1030(in any) *pbgear.Balances_OtherEvent_1030 {
	out := &pbgear.Balances_OtherEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Balances_Paid_1410(in any) *pbgear.Balances_Paid_1410 {
	out := &pbgear.Balances_Paid_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field PaymentId To_Balances_TupleNull(w)
	out.PaymentId = To_Balances_TupleNull(v.ValueAt(1))

	return out //from message
}

func To_Balances_PaidOut_1030(in any) *pbgear.Balances_PaidOut_1030 {
	out := &pbgear.Balances_PaidOut_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Member To_SpCoreCryptoAccountId32(w)
	out.Member = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(1))
	// primitive field Payout
	out.Payout = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_Paused_1030(in any) *pbgear.Balances_Paused_1030 {
	out := &pbgear.Balances_Paused_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_PaymentFailed_1410(in any) *pbgear.Balances_PaymentFailed_1410 {
	out := &pbgear.Balances_PaymentFailed_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field PaymentId To_Balances_TupleNull(w)
	out.PaymentId = To_Balances_TupleNull(v.ValueAt(1))

	return out //from message
}

func To_Balances_PayoutStarted_1030(in any) *pbgear.Balances_PayoutStarted_1030 {
	out := &pbgear.Balances_PayoutStarted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field EraIndex
	out.EraIndex = To_uint32(v.ValueAt(0))
	// field ValidatorStash To_SpCoreCryptoAccountId32(w)
	out.ValidatorStash = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Balances_PeriodicFailed_1030(in any) *pbgear.Balances_PeriodicFailed_1030 {
	out := &pbgear.Balances_PeriodicFailed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Task To_Balances_TupleUint32Uint32(w)
	out.Task = To_Balances_TupleUint32Uint32(v.ValueAt(0))
	// primitive field Id
	out.Id = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Balances_PermanentlyOverweight_1030(in any) *pbgear.Balances_PermanentlyOverweight_1030 {
	out := &pbgear.Balances_PermanentlyOverweight_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Task To_Balances_TupleUint32Uint32(w)
	out.Task = To_Balances_TupleUint32Uint32(v.ValueAt(0))
	// primitive field Id
	out.Id = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Balances_PhaseTransitioned_1030(in any) *pbgear.Balances_PhaseTransitioned_1030 {
	out := &pbgear.Balances_PhaseTransitioned_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_Balances_PhaseTransitioned_1030_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))
	// oneOf field To
	v1 := To_OneOf_Balances_PhaseTransitioned_1030_to(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v1))
	// primitive field Round
	out.Round = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_OneOf_Balances_PhaseTransitioned_1030_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_PhaseTransitioned_1030_FromOff{
			FromOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.Balances_PhaseTransitioned_1030_FromSigned{
			FromSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.Balances_PhaseTransitioned_1030_FromUnsigned{
			FromUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.Balances_PhaseTransitioned_1030_FromEmergency{
			FromEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Balances_PhaseTransitioned_1030_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_PhaseTransitioned_1030_ToOff{
			ToOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.Balances_PhaseTransitioned_1030_ToSigned{
			ToSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.Balances_PhaseTransitioned_1030_ToUnsigned{
			ToUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.Balances_PhaseTransitioned_1030_ToEmergency{
			ToEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_PoolCommissionChangeRateUpdated_1030(in any) *pbgear.Balances_PoolCommissionChangeRateUpdated_1030 {
	out := &pbgear.Balances_PoolCommissionChangeRateUpdated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// field ChangeRate To_NominationPools_PalletNominationPoolsCommissionChangeRate(w)
	out.ChangeRate = To_NominationPools_PalletNominationPoolsCommissionChangeRate(v.ValueAt(1))

	return out //from message
}

func To_Balances_PoolCommissionClaimed_1030(in any) *pbgear.Balances_PoolCommissionClaimed_1030 {
	out := &pbgear.Balances_PoolCommissionClaimed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// primitive field Commission
	out.Commission = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_PoolCommissionUpdated_1030(in any) *pbgear.Balances_PoolCommissionUpdated_1030 {
	out := &pbgear.Balances_PoolCommissionUpdated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// optional field Current true
	if v.HasValue() {
		out.Current = To_Optional_Balances_PoolCommissionUpdated_1030_current(v.ValueAt(1))
	}

	return out //from message
}

func To_Optional_Balances_PoolCommissionUpdated_1030_current(in any) *pbgear.TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_Balances_PoolMaxCommissionUpdated_1030(in any) *pbgear.Balances_PoolMaxCommissionUpdated_1030 {
	out := &pbgear.Balances_PoolMaxCommissionUpdated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// field MaxCommission To_SpArithmeticPerThingsPerbill(w)
	out.MaxCommission = To_SpArithmeticPerThingsPerbill(v.ValueAt(1))

	return out //from message
}

func To_Balances_PoolSlashed_1030(in any) *pbgear.Balances_PoolSlashed_1030 {
	out := &pbgear.Balances_PoolSlashed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// primitive field Balance
	out.Balance = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_PreRuntimeEvent_1030(in any) *pbgear.Balances_PreRuntimeEvent_1030 {
	out := &pbgear.Balances_PreRuntimeEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Balances_PreimageEvent_1030(in any) *pbgear.Balances_PreimageEvent_1030 {
	out := &pbgear.Balances_PreimageEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_PreimageEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_PreimageEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_PreimageEvent_1030_Value0Noted{
			Value0Noted: To_Balances_Noted(param),
		}
	case 1:
		return &pbgear.Balances_PreimageEvent_1030_Value0Requested{
			Value0Requested: To_Balances_Requested(param),
		}
	case 2:
		return &pbgear.Balances_PreimageEvent_1030_Value0Cleared{
			Value0Cleared: To_Balances_Cleared(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ProgramChanged_1030(in any) *pbgear.Balances_ProgramChanged_1030 {
	out := &pbgear.Balances_ProgramChanged_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsProgramId(w)
	out.Id = To_GearCoreIdsProgramId(v.ValueAt(0))
	// oneOf field Change
	v1 := To_OneOf_Balances_ProgramChanged_1030_change(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_ProgramChanged_1030_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ProgramChanged_1030_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Balances_ProgramChanged_1030_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Balances_ProgramChanged_1030_ChangePaused{
			ChangePaused: To_Paused(param),
		}
	case 3:
		return &pbgear.Balances_ProgramChanged_1030_ChangeTerminated{
			ChangeTerminated: To_Terminated(param),
		}
	case 4:
		return &pbgear.Balances_ProgramChanged_1030_ChangeExpirationChanged{
			ChangeExpirationChanged: To_ExpirationChanged(param),
		}
	case 5:
		return &pbgear.Balances_ProgramChanged_1030_ChangeProgramSet{
			ChangeProgramSet: To_ProgramSet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ProgramChanged_1420(in any) *pbgear.Balances_ProgramChanged_1420 {
	out := &pbgear.Balances_ProgramChanged_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GprimitivesActorId(w)
	out.Id = To_GprimitivesActorId(v.ValueAt(0))
	// oneOf field Change
	v1 := To_OneOf_Balances_ProgramChanged_1420_change(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_ProgramChanged_1420_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ProgramChanged_1420_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Balances_ProgramChanged_1420_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Balances_ProgramChanged_1420_ChangePaused{
			ChangePaused: To_Paused(param),
		}
	case 3:
		return &pbgear.Balances_ProgramChanged_1420_ChangeTerminated{
			ChangeTerminated: To_Terminated(param),
		}
	case 4:
		return &pbgear.Balances_ProgramChanged_1420_ChangeExpirationChanged{
			ChangeExpirationChanged: To_ExpirationChanged(param),
		}
	case 5:
		return &pbgear.Balances_ProgramChanged_1420_ChangeProgramSet{
			ChangeProgramSet: To_ProgramSet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ProgramResumeSessionStarted_1030(in any) *pbgear.Balances_ProgramResumeSessionStarted_1030 {
	out := &pbgear.Balances_ProgramResumeSessionStarted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SessionId
	out.SessionId = To_string(v.ValueAt(0))
	// field AccountId To_SpCoreCryptoAccountId32(w)
	out.AccountId = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// field ProgramId To_GearCoreIdsProgramId(w)
	out.ProgramId = To_GearCoreIdsProgramId(v.ValueAt(2))
	// primitive field SessionEndBlock
	out.SessionEndBlock = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_Balances_ProgramResumeSessionStarted_1110(in any) *pbgear.Balances_ProgramResumeSessionStarted_1110 {
	out := &pbgear.Balances_ProgramResumeSessionStarted_1110{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SessionId
	out.SessionId = To_uint32(v.ValueAt(0))
	// field AccountId To_SpCoreCryptoAccountId32(w)
	out.AccountId = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// field ProgramId To_GearCoreIdsProgramId(w)
	out.ProgramId = To_GearCoreIdsProgramId(v.ValueAt(2))
	// primitive field SessionEndBlock
	out.SessionEndBlock = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_Balances_Proposed_1030(in any) *pbgear.Balances_Proposed_1030 {
	out := &pbgear.Balances_Proposed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ProposalIndex
	out.ProposalIndex = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_ProxyAdded_1030(in any) *pbgear.Balances_ProxyAdded_1030 {
	out := &pbgear.Balances_ProxyAdded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Delegator To_SpCoreCryptoAccountId32(w)
	out.Delegator = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Delegatee To_SpCoreCryptoAccountId32(w)
	out.Delegatee = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// oneOf field ProxyType
	v2 := To_OneOf_Balances_ProxyAdded_1030_proxy_type(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v2))
	// primitive field Delay
	out.Delay = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_OneOf_Balances_ProxyAdded_1030_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ProxyAdded_1030_ProxyTypeAny{
			ProxyTypeAny: To_Any(param),
		}
	case 1:
		return &pbgear.Balances_ProxyAdded_1030_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_NonTransfer(param),
		}
	case 2:
		return &pbgear.Balances_ProxyAdded_1030_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Governance(param),
		}
	case 3:
		return &pbgear.Balances_ProxyAdded_1030_ProxyTypeStaking{
			ProxyTypeStaking: To_Staking(param),
		}
	case 4:
		return &pbgear.Balances_ProxyAdded_1030_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Balances_ProxyAdded_1030_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ProxyExecuted_1030(in any) *pbgear.Balances_ProxyExecuted_1030 {
	out := &pbgear.Balances_ProxyExecuted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Result
	v0 := To_OneOf_Balances_ProxyExecuted_1030_result(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ProxyExecuted_1030_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ProxyExecuted_1030_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Balances_ProxyExecuted_1030_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ProxyRemoved_1030(in any) *pbgear.Balances_ProxyRemoved_1030 {
	out := &pbgear.Balances_ProxyRemoved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Delegator To_SpCoreCryptoAccountId32(w)
	out.Delegator = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Delegatee To_SpCoreCryptoAccountId32(w)
	out.Delegatee = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// oneOf field ProxyType
	v2 := To_OneOf_Balances_ProxyRemoved_1030_proxy_type(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v2))
	// primitive field Delay
	out.Delay = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_OneOf_Balances_ProxyRemoved_1030_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ProxyRemoved_1030_ProxyTypeAny{
			ProxyTypeAny: To_Any(param),
		}
	case 1:
		return &pbgear.Balances_ProxyRemoved_1030_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_NonTransfer(param),
		}
	case 2:
		return &pbgear.Balances_ProxyRemoved_1030_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Governance(param),
		}
	case 3:
		return &pbgear.Balances_ProxyRemoved_1030_ProxyTypeStaking{
			ProxyTypeStaking: To_Staking(param),
		}
	case 4:
		return &pbgear.Balances_ProxyRemoved_1030_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Balances_ProxyRemoved_1030_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ProxyEvent_1030(in any) *pbgear.Balances_ProxyEvent_1030 {
	out := &pbgear.Balances_ProxyEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_ProxyEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ProxyEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ProxyEvent_1030_Value0ProxyExecuted{
			Value0ProxyExecuted: To_Balances_ProxyExecuted(param),
		}
	case 1:
		return &pbgear.Balances_ProxyEvent_1030_Value0PureCreated{
			Value0PureCreated: To_Balances_PureCreated(param),
		}
	case 2:
		return &pbgear.Balances_ProxyEvent_1030_Value0Announced{
			Value0Announced: To_Balances_Announced(param),
		}
	case 3:
		return &pbgear.Balances_ProxyEvent_1030_Value0ProxyAdded{
			Value0ProxyAdded: To_Balances_ProxyAdded(param),
		}
	case 4:
		return &pbgear.Balances_ProxyEvent_1030_Value0ProxyRemoved{
			Value0ProxyRemoved: To_Balances_ProxyRemoved(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_PureCreated_1030(in any) *pbgear.Balances_PureCreated_1030 {
	out := &pbgear.Balances_PureCreated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Pure To_SpCoreCryptoAccountId32(w)
	out.Pure = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// oneOf field ProxyType
	v2 := To_OneOf_Balances_PureCreated_1030_proxy_type(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v2))
	// primitive field DisambiguationIndex
	out.DisambiguationIndex = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_OneOf_Balances_PureCreated_1030_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_PureCreated_1030_ProxyTypeAny{
			ProxyTypeAny: To_Any(param),
		}
	case 1:
		return &pbgear.Balances_PureCreated_1030_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_NonTransfer(param),
		}
	case 2:
		return &pbgear.Balances_PureCreated_1030_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Governance(param),
		}
	case 3:
		return &pbgear.Balances_PureCreated_1030_ProxyTypeStaking{
			ProxyTypeStaking: To_Staking(param),
		}
	case 4:
		return &pbgear.Balances_PureCreated_1030_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Balances_PureCreated_1030_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_QueueNotProcessed_1030(in any) *pbgear.Balances_QueueNotProcessed_1030 {
	out := &pbgear.Balances_QueueNotProcessed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_RankChanged_1030(in any) *pbgear.Balances_RankChanged_1030 {
	out := &pbgear.Balances_RankChanged_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Rank
	out.Rank = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_Raw_100(in any) *pbgear.Balances_Raw_100 {
	out := &pbgear.Balances_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Balances_Rebagged_1030(in any) *pbgear.Balances_Rebagged_1030 {
	out := &pbgear.Balances_Rebagged_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field From
	out.From = To_uint64(v.ValueAt(1))
	// primitive field To
	out.To = To_uint64(v.ValueAt(2))

	return out //from message
}

func To_Balances_ReferendaEvent_1030(in any) *pbgear.Balances_ReferendaEvent_1030 {
	out := &pbgear.Balances_ReferendaEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_ReferendaEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_ReferendaEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ReferendaEvent_1030_Value0Submitted{
			Value0Submitted: To_Balances_Submitted(param),
		}
	case 1:
		return &pbgear.Balances_ReferendaEvent_1030_Value0DecisionDepositPlaced{
			Value0DecisionDepositPlaced: To_Balances_DecisionDepositPlaced(param),
		}
	case 2:
		return &pbgear.Balances_ReferendaEvent_1030_Value0DecisionDepositRefunded{
			Value0DecisionDepositRefunded: To_Balances_DecisionDepositRefunded(param),
		}
	case 3:
		return &pbgear.Balances_ReferendaEvent_1030_Value0DepositSlashed{
			Value0DepositSlashed: To_Balances_DepositSlashed(param),
		}
	case 4:
		return &pbgear.Balances_ReferendaEvent_1030_Value0DecisionStarted{
			Value0DecisionStarted: To_Balances_DecisionStarted(param),
		}
	case 5:
		return &pbgear.Balances_ReferendaEvent_1030_Value0ConfirmStarted{
			Value0ConfirmStarted: To_Balances_ConfirmStarted(param),
		}
	case 6:
		return &pbgear.Balances_ReferendaEvent_1030_Value0ConfirmAborted{
			Value0ConfirmAborted: To_Balances_ConfirmAborted(param),
		}
	case 7:
		return &pbgear.Balances_ReferendaEvent_1030_Value0Confirmed{
			Value0Confirmed: To_Balances_Confirmed(param),
		}
	case 8:
		return &pbgear.Balances_ReferendaEvent_1030_Value0Approved{
			Value0Approved: To_Balances_Approved(param),
		}
	case 9:
		return &pbgear.Balances_ReferendaEvent_1030_Value0Rejected{
			Value0Rejected: To_Balances_Rejected(param),
		}
	case 10:
		return &pbgear.Balances_ReferendaEvent_1030_Value0TimedOut{
			Value0TimedOut: To_Balances_TimedOut(param),
		}
	case 11:
		return &pbgear.Balances_ReferendaEvent_1030_Value0Cancelled{
			Value0Cancelled: To_Balances_Cancelled(param),
		}
	case 12:
		return &pbgear.Balances_ReferendaEvent_1030_Value0Killed{
			Value0Killed: To_Balances_Killed(param),
		}
	case 13:
		return &pbgear.Balances_ReferendaEvent_1030_Value0SubmissionDepositRefunded{
			Value0SubmissionDepositRefunded: To_Balances_SubmissionDepositRefunded(param),
		}
	case 14:
		return &pbgear.Balances_ReferendaEvent_1030_Value0MetadataSet{
			Value0MetadataSet: To_Balances_MetadataSet(param),
		}
	case 15:
		return &pbgear.Balances_ReferendaEvent_1030_Value0MetadataCleared{
			Value0MetadataCleared: To_Balances_MetadataCleared(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_RegistrarAdded_1030(in any) *pbgear.Balances_RegistrarAdded_1030 {
	out := &pbgear.Balances_RegistrarAdded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RegistrarIndex
	out.RegistrarIndex = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Rejected_1030(in any) *pbgear.Balances_Rejected_1030 {
	out := &pbgear.Balances_Rejected_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Tally To_ConvictionVoting_PalletConvictionVotingTypesTally(w)
	out.Tally = To_ConvictionVoting_PalletConvictionVotingTypesTally(v.ValueAt(1))

	return out //from message
}

func To_Balances_Remarked_1030(in any) *pbgear.Balances_Remarked_1030 {
	out := &pbgear.Balances_Remarked_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Sender To_SpCoreCryptoAccountId32(w)
	out.Sender = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(1))

	return out //from message
}

func To_Balances_Requested_1030(in any) *pbgear.Balances_Requested_1030 {
	out := &pbgear.Balances_Requested_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_Balances_Rescinded_1030(in any) *pbgear.Balances_Rescinded_1030 {
	out := &pbgear.Balances_Rescinded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))

	return out //from message
}

func To_Balances_ReserveRepatriated_1030(in any) *pbgear.Balances_ReserveRepatriated_1030 {
	out := &pbgear.Balances_ReserveRepatriated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field From To_SpCoreCryptoAccountId32(w)
	out.From = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field To To_SpCoreCryptoAccountId32(w)
	out.To = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))
	// oneOf field DestinationStatus
	v3 := To_OneOf_Balances_ReserveRepatriated_1030_destination_status(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("DestinationStatus").Set(reflect.ValueOf(v3))

	return out //from message
}

func To_OneOf_Balances_ReserveRepatriated_1030_destination_status(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ReserveRepatriated_1030_DestinationStatusFree{
			DestinationStatusFree: To_Free(param),
		}
	case 1:
		return &pbgear.Balances_ReserveRepatriated_1030_DestinationStatusReserved{
			DestinationStatusReserved: To_Reserved(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Reserved_1030(in any) *pbgear.Balances_Reserved_1030 {
	out := &pbgear.Balances_Reserved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Restored_1030(in any) *pbgear.Balances_Restored_1030 {
	out := &pbgear.Balances_Restored_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Resumed_1030(in any) *pbgear.Balances_Resumed_1030 {
	out := &pbgear.Balances_Resumed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_Rewarded_1030(in any) *pbgear.Balances_Rewarded_1030 {
	out := &pbgear.Balances_Rewarded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Rewarded_1400(in any) *pbgear.Balances_Rewarded_1400 {
	out := &pbgear.Balances_Rewarded_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// oneOf field Dest
	v1 := To_OneOf_Balances_Rewarded_1400_dest(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))

	return out //from message
}

func To_OneOf_Balances_Rewarded_1400_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Rewarded_1400_DestStaked{
			DestStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Balances_Rewarded_1400_DestStash{
			DestStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Balances_Rewarded_1400_DestController{
			DestController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Balances_Rewarded_1400_DestAccount{
			DestAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Balances_Rewarded_1400_DestNone{
			DestNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_RolesUpdated_1030(in any) *pbgear.Balances_RolesUpdated_1030 {
	out := &pbgear.Balances_RolesUpdated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// optional field Root true
	if v.HasValue() {
		out.Root = To_Optional_Balances_RolesUpdated_1030_root(v.ValueAt(0))
	}
	// optional field Bouncer true
	if v.HasValue() {
		out.Bouncer = To_Optional_Balances_RolesUpdated_1030_bouncer(v.ValueAt(1))
	}
	// optional field Nominator true
	if v.HasValue() {
		out.Nominator = To_Optional_Balances_RolesUpdated_1030_nominator(v.ValueAt(2))
	}

	return out //from message
}

func To_Optional_Balances_RolesUpdated_1030_root(in any) *pbgear.SpCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_Optional_Balances_RolesUpdated_1030_bouncer(in any) *pbgear.SpCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_Optional_Balances_RolesUpdated_1030_nominator(in any) *pbgear.SpCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_Balances_Rollover_1030(in any) *pbgear.Balances_Rollover_1030 {
	out := &pbgear.Balances_Rollover_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RolloverBalance
	out.RolloverBalance = To_string(v.ValueAt(0))

	return out //from message
}

func To_Balances_RuntimeEnvironmentUpdatedEvent_1030(in any) *pbgear.Balances_RuntimeEnvironmentUpdatedEvent_1030 {
	out := &pbgear.Balances_RuntimeEnvironmentUpdatedEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_Scheduled_1030(in any) *pbgear.Balances_Scheduled_1030 {
	out := &pbgear.Balances_Scheduled_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field When
	out.When = To_uint32(v.ValueAt(0))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_SchedulerEvent_1030(in any) *pbgear.Balances_SchedulerEvent_1030 {
	out := &pbgear.Balances_SchedulerEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_SchedulerEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_SchedulerEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_SchedulerEvent_1030_Value0Scheduled{
			Value0Scheduled: To_Balances_Scheduled(param),
		}
	case 1:
		return &pbgear.Balances_SchedulerEvent_1030_Value0Canceled{
			Value0Canceled: To_Balances_Canceled(param),
		}
	case 2:
		return &pbgear.Balances_SchedulerEvent_1030_Value0Dispatched{
			Value0Dispatched: To_Balances_Dispatched(param),
		}
	case 3:
		return &pbgear.Balances_SchedulerEvent_1030_Value0CallUnavailable{
			Value0CallUnavailable: To_Balances_CallUnavailable(param),
		}
	case 4:
		return &pbgear.Balances_SchedulerEvent_1030_Value0PeriodicFailed{
			Value0PeriodicFailed: To_Balances_PeriodicFailed(param),
		}
	case 5:
		return &pbgear.Balances_SchedulerEvent_1030_Value0PermanentlyOverweight{
			Value0PermanentlyOverweight: To_Balances_PermanentlyOverweight(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ScoreUpdated_1030(in any) *pbgear.Balances_ScoreUpdated_1030 {
	out := &pbgear.Balances_ScoreUpdated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field NewScore
	out.NewScore = To_uint64(v.ValueAt(1))

	return out //from message
}

func To_Balances_SealEvent_1030(in any) *pbgear.Balances_SealEvent_1030 {
	out := &pbgear.Balances_SealEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Balances_SessionEvent_1030(in any) *pbgear.Balances_SessionEvent_1030 {
	out := &pbgear.Balances_SessionEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_SessionEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_SessionEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_SessionEvent_1030_Value0NewSession{
			Value0NewSession: To_Balances_NewSession(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_SlashReported_1030(in any) *pbgear.Balances_SlashReported_1030 {
	out := &pbgear.Balances_SlashReported_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Validator To_SpCoreCryptoAccountId32(w)
	out.Validator = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Fraction To_SpArithmeticPerThingsPerbill(w)
	out.Fraction = To_SpArithmeticPerThingsPerbill(v.ValueAt(1))
	// primitive field SlashEra
	out.SlashEra = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Balances_Slashed_1030(in any) *pbgear.Balances_Slashed_1030 {
	out := &pbgear.Balances_Slashed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_SnapshotTargetsSizeExceeded_1300(in any) *pbgear.Balances_SnapshotTargetsSizeExceeded_1300 {
	out := &pbgear.Balances_SnapshotTargetsSizeExceeded_1300{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Size
	out.Size = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_SnapshotVotersSizeExceeded_1300(in any) *pbgear.Balances_SnapshotVotersSizeExceeded_1300 {
	out := &pbgear.Balances_SnapshotVotersSizeExceeded_1300{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Size
	out.Size = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_SolutionStored_1030(in any) *pbgear.Balances_SolutionStored_1030 {
	out := &pbgear.Balances_SolutionStored_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Compute
	v0 := To_OneOf_Balances_SolutionStored_1030_compute(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Compute").Set(reflect.ValueOf(v0))
	// optional field Origin true
	if v.HasValue() {
		out.Origin = To_Optional_Balances_SolutionStored_1030_origin(v.ValueAt(1))
	}
	// primitive field PrevEjected
	out.PrevEjected = To_bool(v.ValueAt(2))

	return out //from message
}

func To_OneOf_Balances_SolutionStored_1030_compute(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_SolutionStored_1030_ComputeOnChain{
			ComputeOnChain: To_ElectionProviderMultiPhase_OnChain(param),
		}
	case 1:
		return &pbgear.Balances_SolutionStored_1030_ComputeSigned{
			ComputeSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.Balances_SolutionStored_1030_ComputeUnsigned{
			ComputeUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.Balances_SolutionStored_1030_ComputeFallback{
			ComputeFallback: To_ElectionProviderMultiPhase_Fallback(param),
		}
	case 4:
		return &pbgear.Balances_SolutionStored_1030_ComputeEmergency{
			ComputeEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Optional_Balances_SolutionStored_1030_origin(in any) *pbgear.SpCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_Balances_SomeOffline_1030(in any) *pbgear.Balances_SomeOffline_1030 {
	out := &pbgear.Balances_SomeOffline_1030{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Offline
	out.Offline = To_Repeated_Balances_SomeOffline_1030_offline(v.ValueAt(0))

	return out //from message
}

func To_Repeated_Balances_SomeOffline_1030_offline(in any) []*pbgear.Balances_TupleSpCoreCryptoAccountId32PalletStakingExposure {
	items := in.([]interface{})

	var out []*pbgear.Balances_TupleSpCoreCryptoAccountId32PalletStakingExposure
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Balances_TupleSpCoreCryptoAccountId32PalletStakingExposure(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Balances_SpendApproved_1030(in any) *pbgear.Balances_SpendApproved_1030 {
	out := &pbgear.Balances_SpendApproved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ProposalIndex
	out.ProposalIndex = To_uint32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))
	// field Beneficiary To_SpCoreCryptoAccountId32(w)
	out.Beneficiary = To_SpCoreCryptoAccountId32(v.ValueAt(2))

	return out //from message
}

func To_Balances_SpendProcessed_1410(in any) *pbgear.Balances_SpendProcessed_1410 {
	out := &pbgear.Balances_SpendProcessed_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Spending_1030(in any) *pbgear.Balances_Spending_1030 {
	out := &pbgear.Balances_Spending_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BudgetRemaining
	out.BudgetRemaining = To_string(v.ValueAt(0))

	return out //from message
}

func To_Balances_StakersElected_1030(in any) *pbgear.Balances_StakersElected_1030 {
	out := &pbgear.Balances_StakersElected_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_StakingElectionFailed_1030(in any) *pbgear.Balances_StakingElectionFailed_1030 {
	out := &pbgear.Balances_StakingElectionFailed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_StakingRewardsEvent_1030(in any) *pbgear.Balances_StakingRewardsEvent_1030 {
	out := &pbgear.Balances_StakingRewardsEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_StakingRewardsEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_StakingRewardsEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_StakingRewardsEvent_1030_Value0Deposited{
			Value0Deposited: To_Balances_Deposited(param),
		}
	case 1:
		return &pbgear.Balances_StakingRewardsEvent_1030_Value0Withdrawn{
			Value0Withdrawn: To_Balances_Withdrawn(param),
		}
	case 2:
		return &pbgear.Balances_StakingRewardsEvent_1030_Value0Burned{
			Value0Burned: To_Balances_Burned(param),
		}
	case 3:
		return &pbgear.Balances_StakingRewardsEvent_1030_Value0Minted{
			Value0Minted: To_Balances_Minted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_StakingEvent_1030(in any) *pbgear.Balances_StakingEvent_1030 {
	out := &pbgear.Balances_StakingEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_StakingEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_StakingEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_StakingEvent_1030_Value0EraPaid{
			Value0EraPaid: To_Balances_EraPaid(param),
		}
	case 1:
		return &pbgear.Balances_StakingEvent_1030_Value0Rewarded{
			Value0Rewarded: To_Balances_Rewarded(param),
		}
	case 2:
		return &pbgear.Balances_StakingEvent_1030_Value0Slashed{
			Value0Slashed: To_Balances_Slashed(param),
		}
	case 3:
		return &pbgear.Balances_StakingEvent_1030_Value0SlashReported{
			Value0SlashReported: To_Balances_SlashReported(param),
		}
	case 4:
		return &pbgear.Balances_StakingEvent_1030_Value0OldSlashingReportDiscarded{
			Value0OldSlashingReportDiscarded: To_Balances_OldSlashingReportDiscarded(param),
		}
	case 5:
		return &pbgear.Balances_StakingEvent_1030_Value0StakersElected{
			Value0StakersElected: To_Balances_StakersElected(param),
		}
	case 6:
		return &pbgear.Balances_StakingEvent_1030_Value0Bonded{
			Value0Bonded: To_Balances_Bonded(param),
		}
	case 7:
		return &pbgear.Balances_StakingEvent_1030_Value0Unbonded{
			Value0Unbonded: To_Balances_Unbonded(param),
		}
	case 8:
		return &pbgear.Balances_StakingEvent_1030_Value0Withdrawn{
			Value0Withdrawn: To_Balances_Withdrawn(param),
		}
	case 9:
		return &pbgear.Balances_StakingEvent_1030_Value0Kicked{
			Value0Kicked: To_Balances_Kicked(param),
		}
	case 10:
		return &pbgear.Balances_StakingEvent_1030_Value0StakingElectionFailed{
			Value0StakingElectionFailed: To_Balances_StakingElectionFailed(param),
		}
	case 11:
		return &pbgear.Balances_StakingEvent_1030_Value0Chilled{
			Value0Chilled: To_Balances_Chilled(param),
		}
	case 12:
		return &pbgear.Balances_StakingEvent_1030_Value0PayoutStarted{
			Value0PayoutStarted: To_Balances_PayoutStarted(param),
		}
	case 13:
		return &pbgear.Balances_StakingEvent_1030_Value0ValidatorPrefsSet{
			Value0ValidatorPrefsSet: To_Balances_ValidatorPrefsSet(param),
		}
	case 14:
		return &pbgear.Balances_StakingEvent_1030_Value0ForceEra{
			Value0ForceEra: To_Balances_ForceEra(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_StakingEvent_1300(in any) *pbgear.Balances_StakingEvent_1300 {
	out := &pbgear.Balances_StakingEvent_1300{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_StakingEvent_1300_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_StakingEvent_1300_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_StakingEvent_1300_Value0EraPaid{
			Value0EraPaid: To_Balances_EraPaid(param),
		}
	case 1:
		return &pbgear.Balances_StakingEvent_1300_Value0Rewarded{
			Value0Rewarded: To_Balances_Rewarded(param),
		}
	case 2:
		return &pbgear.Balances_StakingEvent_1300_Value0Slashed{
			Value0Slashed: To_Balances_Slashed(param),
		}
	case 3:
		return &pbgear.Balances_StakingEvent_1300_Value0SlashReported{
			Value0SlashReported: To_Balances_SlashReported(param),
		}
	case 4:
		return &pbgear.Balances_StakingEvent_1300_Value0OldSlashingReportDiscarded{
			Value0OldSlashingReportDiscarded: To_Balances_OldSlashingReportDiscarded(param),
		}
	case 5:
		return &pbgear.Balances_StakingEvent_1300_Value0StakersElected{
			Value0StakersElected: To_Balances_StakersElected(param),
		}
	case 6:
		return &pbgear.Balances_StakingEvent_1300_Value0Bonded{
			Value0Bonded: To_Balances_Bonded(param),
		}
	case 7:
		return &pbgear.Balances_StakingEvent_1300_Value0Unbonded{
			Value0Unbonded: To_Balances_Unbonded(param),
		}
	case 8:
		return &pbgear.Balances_StakingEvent_1300_Value0Withdrawn{
			Value0Withdrawn: To_Balances_Withdrawn(param),
		}
	case 9:
		return &pbgear.Balances_StakingEvent_1300_Value0Kicked{
			Value0Kicked: To_Balances_Kicked(param),
		}
	case 10:
		return &pbgear.Balances_StakingEvent_1300_Value0StakingElectionFailed{
			Value0StakingElectionFailed: To_Balances_StakingElectionFailed(param),
		}
	case 11:
		return &pbgear.Balances_StakingEvent_1300_Value0Chilled{
			Value0Chilled: To_Balances_Chilled(param),
		}
	case 12:
		return &pbgear.Balances_StakingEvent_1300_Value0PayoutStarted{
			Value0PayoutStarted: To_Balances_PayoutStarted(param),
		}
	case 13:
		return &pbgear.Balances_StakingEvent_1300_Value0ValidatorPrefsSet{
			Value0ValidatorPrefsSet: To_Balances_ValidatorPrefsSet(param),
		}
	case 14:
		return &pbgear.Balances_StakingEvent_1300_Value0SnapshotVotersSizeExceeded{
			Value0SnapshotVotersSizeExceeded: To_Balances_SnapshotVotersSizeExceeded(param),
		}
	case 15:
		return &pbgear.Balances_StakingEvent_1300_Value0SnapshotTargetsSizeExceeded{
			Value0SnapshotTargetsSizeExceeded: To_Balances_SnapshotTargetsSizeExceeded(param),
		}
	case 16:
		return &pbgear.Balances_StakingEvent_1300_Value0ForceEra{
			Value0ForceEra: To_Balances_ForceEra(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_StateChanged_1030(in any) *pbgear.Balances_StateChanged_1030 {
	out := &pbgear.Balances_StateChanged_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// oneOf field NewState
	v1 := To_OneOf_Balances_StateChanged_1030_new_state(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("NewState").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_StateChanged_1030_new_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_StateChanged_1030_NewStateOpen{
			NewStateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.Balances_StateChanged_1030_NewStateBlocked{
			NewStateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.Balances_StateChanged_1030_NewStateDestroying{
			NewStateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_SubIdentityAdded_1030(in any) *pbgear.Balances_SubIdentityAdded_1030 {
	out := &pbgear.Balances_SubIdentityAdded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Sub To_SpCoreCryptoAccountId32(w)
	out.Sub = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Main To_SpCoreCryptoAccountId32(w)
	out.Main = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Deposit
	out.Deposit = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_SubIdentityRemoved_1030(in any) *pbgear.Balances_SubIdentityRemoved_1030 {
	out := &pbgear.Balances_SubIdentityRemoved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Sub To_SpCoreCryptoAccountId32(w)
	out.Sub = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Main To_SpCoreCryptoAccountId32(w)
	out.Main = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Deposit
	out.Deposit = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_SubIdentityRevoked_1030(in any) *pbgear.Balances_SubIdentityRevoked_1030 {
	out := &pbgear.Balances_SubIdentityRevoked_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Sub To_SpCoreCryptoAccountId32(w)
	out.Sub = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Main To_SpCoreCryptoAccountId32(w)
	out.Main = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Deposit
	out.Deposit = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_SubmissionDepositRefunded_1030(in any) *pbgear.Balances_SubmissionDepositRefunded_1030 {
	out := &pbgear.Balances_SubmissionDepositRefunded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_Submitted_1030(in any) *pbgear.Balances_Submitted_1030 {
	out := &pbgear.Balances_Submitted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field Track
	out.Track = To_uint32(v.ValueAt(1))
	// oneOf field Proposal
	v2 := To_OneOf_Balances_Submitted_1030_proposal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v2))

	return out //from message
}

func To_OneOf_Balances_Submitted_1030_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Submitted_1030_ProposalLegacy{
			ProposalLegacy: To_Legacy(param),
		}
	case 1:
		return &pbgear.Balances_Submitted_1030_ProposalInline{
			ProposalInline: To_Inline(param),
		}
	case 2:
		return &pbgear.Balances_Submitted_1030_ProposalLookup{
			ProposalLookup: To_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Suspended_1030(in any) *pbgear.Balances_Suspended_1030 {
	out := &pbgear.Balances_Suspended_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_SystemEvent_1030(in any) *pbgear.Balances_SystemEvent_1030 {
	out := &pbgear.Balances_SystemEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_SystemEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_SystemEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_SystemEvent_1030_Value0ExtrinsicSuccess{
			Value0ExtrinsicSuccess: To_Balances_ExtrinsicSuccess(param),
		}
	case 1:
		return &pbgear.Balances_SystemEvent_1030_Value0ExtrinsicFailed{
			Value0ExtrinsicFailed: To_Balances_ExtrinsicFailed(param),
		}
	case 2:
		return &pbgear.Balances_SystemEvent_1030_Value0CodeUpdated{
			Value0CodeUpdated: To_Balances_CodeUpdated(param),
		}
	case 3:
		return &pbgear.Balances_SystemEvent_1030_Value0NewAccount{
			Value0NewAccount: To_Balances_NewAccount(param),
		}
	case 4:
		return &pbgear.Balances_SystemEvent_1030_Value0KilledAccount{
			Value0KilledAccount: To_Balances_KilledAccount(param),
		}
	case 5:
		return &pbgear.Balances_SystemEvent_1030_Value0Remarked{
			Value0Remarked: To_Balances_Remarked(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Thawed_1030(in any) *pbgear.Balances_Thawed_1030 {
	out := &pbgear.Balances_Thawed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_TimedOut_1030(in any) *pbgear.Balances_TimedOut_1030 {
	out := &pbgear.Balances_TimedOut_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Tally To_ConvictionVoting_PalletConvictionVotingTypesTally(w)
	out.Tally = To_ConvictionVoting_PalletConvictionVotingTypesTally(v.ValueAt(1))

	return out //from message
}

func To_Balances_TransactionFeePaid_1030(in any) *pbgear.Balances_TransactionFeePaid_1030 {
	out := &pbgear.Balances_TransactionFeePaid_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field ActualFee
	out.ActualFee = To_string(v.ValueAt(1))
	// primitive field Tip
	out.Tip = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_TransactionPaymentEvent_1030(in any) *pbgear.Balances_TransactionPaymentEvent_1030 {
	out := &pbgear.Balances_TransactionPaymentEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_TransactionPaymentEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_TransactionPaymentEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_TransactionPaymentEvent_1030_Value0TransactionFeePaid{
			Value0TransactionFeePaid: To_Balances_TransactionFeePaid(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Transfer_1030(in any) *pbgear.Balances_Transfer_1030 {
	out := &pbgear.Balances_Transfer_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field From To_SpCoreCryptoAccountId32(w)
	out.From = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field To To_SpCoreCryptoAccountId32(w)
	out.To = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_TreasuryEvent_1030(in any) *pbgear.Balances_TreasuryEvent_1030 {
	out := &pbgear.Balances_TreasuryEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_TreasuryEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_TreasuryEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_TreasuryEvent_1030_Value0Proposed{
			Value0Proposed: To_Balances_Proposed(param),
		}
	case 1:
		return &pbgear.Balances_TreasuryEvent_1030_Value0Spending{
			Value0Spending: To_Balances_Spending(param),
		}
	case 2:
		return &pbgear.Balances_TreasuryEvent_1030_Value0Awarded{
			Value0Awarded: To_Balances_Awarded(param),
		}
	case 3:
		return &pbgear.Balances_TreasuryEvent_1030_Value0Rejected{
			Value0Rejected: To_Balances_Rejected(param),
		}
	case 4:
		return &pbgear.Balances_TreasuryEvent_1030_Value0Burnt{
			Value0Burnt: To_Balances_Burnt(param),
		}
	case 5:
		return &pbgear.Balances_TreasuryEvent_1030_Value0Rollover{
			Value0Rollover: To_Balances_Rollover(param),
		}
	case 6:
		return &pbgear.Balances_TreasuryEvent_1030_Value0Deposit{
			Value0Deposit: To_Balances_Deposit(param),
		}
	case 7:
		return &pbgear.Balances_TreasuryEvent_1030_Value0SpendApproved{
			Value0SpendApproved: To_Balances_SpendApproved(param),
		}
	case 8:
		return &pbgear.Balances_TreasuryEvent_1030_Value0UpdatedInactive{
			Value0UpdatedInactive: To_Balances_UpdatedInactive(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_TreasuryEvent_1410(in any) *pbgear.Balances_TreasuryEvent_1410 {
	out := &pbgear.Balances_TreasuryEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_TreasuryEvent_1410_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_TreasuryEvent_1410_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Proposed{
			Value0Proposed: To_Balances_Proposed(param),
		}
	case 1:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Spending{
			Value0Spending: To_Balances_Spending(param),
		}
	case 2:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Awarded{
			Value0Awarded: To_Balances_Awarded(param),
		}
	case 3:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Rejected{
			Value0Rejected: To_Balances_Rejected(param),
		}
	case 4:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Burnt{
			Value0Burnt: To_Balances_Burnt(param),
		}
	case 5:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Rollover{
			Value0Rollover: To_Balances_Rollover(param),
		}
	case 6:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Deposit{
			Value0Deposit: To_Balances_Deposit(param),
		}
	case 7:
		return &pbgear.Balances_TreasuryEvent_1410_Value0SpendApproved{
			Value0SpendApproved: To_Balances_SpendApproved(param),
		}
	case 8:
		return &pbgear.Balances_TreasuryEvent_1410_Value0UpdatedInactive{
			Value0UpdatedInactive: To_Balances_UpdatedInactive(param),
		}
	case 9:
		return &pbgear.Balances_TreasuryEvent_1410_Value0AssetSpendApproved{
			Value0AssetSpendApproved: To_Balances_AssetSpendApproved(param),
		}
	case 10:
		return &pbgear.Balances_TreasuryEvent_1410_Value0AssetSpendVoided{
			Value0AssetSpendVoided: To_Balances_AssetSpendVoided(param),
		}
	case 11:
		return &pbgear.Balances_TreasuryEvent_1410_Value0Paid{
			Value0Paid: To_Balances_Paid(param),
		}
	case 12:
		return &pbgear.Balances_TreasuryEvent_1410_Value0PaymentFailed{
			Value0PaymentFailed: To_Balances_PaymentFailed(param),
		}
	case 13:
		return &pbgear.Balances_TreasuryEvent_1410_Value0SpendProcessed{
			Value0SpendProcessed: To_Balances_SpendProcessed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_TupleNull_100(in any) *pbgear.Balances_TupleNull_100 {
	out := &pbgear.Balances_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Balances_TupleNull_310(in any) *pbgear.Balances_TupleNull_310 {
	out := &pbgear.Balances_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Balances_TupleNull_1030(in any) *pbgear.Balances_TupleNull_1030 {
	out := &pbgear.Balances_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Balances_TupleNull_1410(in any) *pbgear.Balances_TupleNull_1410 {
	out := &pbgear.Balances_TupleNull_1410{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Balances_TupleSpConsensusGrandpaAppPublicuint64_1030(in any) *pbgear.Balances_TupleSpConsensusGrandpaAppPublicuint64_1030 {
	out := &pbgear.Balances_TupleSpConsensusGrandpaAppPublicuint64_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpConsensusGrandpaAppPublic(w)
	out.Value0 = To_SpConsensusGrandpaAppPublic(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint64(v.ValueAt(1))

	return out //from message
}

func To_Balances_TupleSpCoreCryptoAccountId32PalletStakingExposure_1030(in any) *pbgear.Balances_TupleSpCoreCryptoAccountId32PalletStakingExposure_1030 {
	out := &pbgear.Balances_TupleSpCoreCryptoAccountId32PalletStakingExposure_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Value1 To_Staking_PalletStakingExposure(w)
	out.Value1 = To_Staking_PalletStakingExposure(v.ValueAt(1))

	return out //from message
}

func To_Balances_TupleUint32Uint32_1030(in any) *pbgear.Balances_TupleUint32Uint32_1030 {
	out := &pbgear.Balances_TupleUint32Uint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_TupleUint32Uint32_1040(in any) *pbgear.Balances_TupleUint32Uint32_1040 {
	out := &pbgear.Balances_TupleUint32Uint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_TupleUint32Uint32_1410(in any) *pbgear.Balances_TupleUint32Uint32_1410 {
	out := &pbgear.Balances_TupleUint32Uint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Balances_Unbonded_1030(in any) *pbgear.Balances_Unbonded_1030 {
	out := &pbgear.Balances_Unbonded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_UnbondingPoolSlashed_1030(in any) *pbgear.Balances_UnbondingPoolSlashed_1030 {
	out := &pbgear.Balances_UnbondingPoolSlashed_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// primitive field Era
	out.Era = To_uint32(v.ValueAt(1))
	// primitive field Balance
	out.Balance = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_Undelegated_1030(in any) *pbgear.Balances_Undelegated_1030 {
	out := &pbgear.Balances_Undelegated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_Unlocked_1030(in any) *pbgear.Balances_Unlocked_1030 {
	out := &pbgear.Balances_Unlocked_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Unreserved_1030(in any) *pbgear.Balances_Unreserved_1030 {
	out := &pbgear.Balances_Unreserved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_UpdatedInactive_1030(in any) *pbgear.Balances_UpdatedInactive_1030 {
	out := &pbgear.Balances_UpdatedInactive_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Reactivated
	out.Reactivated = To_string(v.ValueAt(0))
	// primitive field Deactivated
	out.Deactivated = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Upgraded_1030(in any) *pbgear.Balances_Upgraded_1030 {
	out := &pbgear.Balances_Upgraded_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_UserMessageRead_1030(in any) *pbgear.Balances_UserMessageRead_1030 {
	out := &pbgear.Balances_UserMessageRead_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Reason
	v1 := To_OneOf_Balances_UserMessageRead_1030_reason(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_UserMessageRead_1030_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_UserMessageRead_1030_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Balances_UserMessageRead_1030_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_UserMessageRead_1420(in any) *pbgear.Balances_UserMessageRead_1420 {
	out := &pbgear.Balances_UserMessageRead_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GprimitivesMessageId(w)
	out.Id = To_GprimitivesMessageId(v.ValueAt(0))
	// oneOf field Reason
	v1 := To_OneOf_Balances_UserMessageRead_1420_reason(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_UserMessageRead_1420_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_UserMessageRead_1420_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Balances_UserMessageRead_1420_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_UserMessageSent_1030(in any) *pbgear.Balances_UserMessageSent_1030 {
	out := &pbgear.Balances_UserMessageSent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Message To_GearCoreMessageUserUserMessage(w)
	out.Message = To_GearCoreMessageUserUserMessage(v.ValueAt(0))
	// primitive field Expiration
	if v.HasValue() {
		out.Expiration = To_Optional_uint32(v.ValueAt(1))
	}

	return out //from message
}

func To_Balances_UtilityEvent_1030(in any) *pbgear.Balances_UtilityEvent_1030 {
	out := &pbgear.Balances_UtilityEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_UtilityEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_UtilityEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_UtilityEvent_1030_Value0BatchInterrupted{
			Value0BatchInterrupted: To_Balances_BatchInterrupted(param),
		}
	case 1:
		return &pbgear.Balances_UtilityEvent_1030_Value0BatchCompleted{
			Value0BatchCompleted: To_Balances_BatchCompleted(param),
		}
	case 2:
		return &pbgear.Balances_UtilityEvent_1030_Value0BatchCompletedWithErrors{
			Value0BatchCompletedWithErrors: To_Balances_BatchCompletedWithErrors(param),
		}
	case 3:
		return &pbgear.Balances_UtilityEvent_1030_Value0ItemCompleted{
			Value0ItemCompleted: To_Balances_ItemCompleted(param),
		}
	case 4:
		return &pbgear.Balances_UtilityEvent_1030_Value0ItemFailed{
			Value0ItemFailed: To_Balances_ItemFailed(param),
		}
	case 5:
		return &pbgear.Balances_UtilityEvent_1030_Value0DispatchedAs{
			Value0DispatchedAs: To_Balances_DispatchedAs(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ValidatorPrefsSet_1030(in any) *pbgear.Balances_ValidatorPrefsSet_1030 {
	out := &pbgear.Balances_ValidatorPrefsSet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Prefs To_Staking_PalletStakingValidatorPrefs(w)
	out.Prefs = To_Staking_PalletStakingValidatorPrefs(v.ValueAt(1))

	return out //from message
}

func To_Balances_VestingCompleted_1030(in any) *pbgear.Balances_VestingCompleted_1030 {
	out := &pbgear.Balances_VestingCompleted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Account To_SpCoreCryptoAccountId32(w)
	out.Account = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Balances_VestingUpdated_1030(in any) *pbgear.Balances_VestingUpdated_1030 {
	out := &pbgear.Balances_VestingUpdated_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Account To_SpCoreCryptoAccountId32(w)
	out.Account = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Unvested
	out.Unvested = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_VestingEvent_1030(in any) *pbgear.Balances_VestingEvent_1030 {
	out := &pbgear.Balances_VestingEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_VestingEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_VestingEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_VestingEvent_1030_Value0VestingUpdated{
			Value0VestingUpdated: To_Balances_VestingUpdated(param),
		}
	case 1:
		return &pbgear.Balances_VestingEvent_1030_Value0VestingCompleted{
			Value0VestingCompleted: To_Balances_VestingCompleted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Voted_1030(in any) *pbgear.Balances_Voted_1030 {
	out := &pbgear.Balances_Voted_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Poll
	out.Poll = To_uint32(v.ValueAt(1))
	// oneOf field Vote
	v2 := To_OneOf_Balances_Voted_1030_vote(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v2))
	// field Tally To_RankedCollective_PalletRankedCollectiveTally(w)
	out.Tally = To_RankedCollective_PalletRankedCollectiveTally(v.ValueAt(3))

	return out //from message
}

func To_OneOf_Balances_Voted_1030_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Voted_1030_VoteAye{
			VoteAye: To_RankedCollective_Aye(param),
		}
	case 1:
		return &pbgear.Balances_Voted_1030_VoteNay{
			VoteNay: To_RankedCollective_Nay(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Balances_VoucherDeclined_1110(in any) *pbgear.Balances_VoucherDeclined_1110 {
	out := &pbgear.Balances_VoucherDeclined_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Spender To_SpCoreCryptoAccountId32(w)
	out.Spender = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(1))

	return out //from message
}

func To_Balances_VoucherIssued_1030(in any) *pbgear.Balances_VoucherIssued_1030 {
	out := &pbgear.Balances_VoucherIssued_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Holder To_SpCoreCryptoAccountId32(w)
	out.Holder = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Program To_GearCoreIdsProgramId(w)
	out.Program = To_GearCoreIdsProgramId(v.ValueAt(1))
	// primitive field Value
	out.Value = To_string(v.ValueAt(2))

	return out //from message
}

func To_Balances_VoucherIssued_1110(in any) *pbgear.Balances_VoucherIssued_1110 {
	out := &pbgear.Balances_VoucherIssued_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Owner To_SpCoreCryptoAccountId32(w)
	out.Owner = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Spender To_SpCoreCryptoAccountId32(w)
	out.Spender = To_SpCoreCryptoAccountId32(v.ValueAt(1))
	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(2))

	return out //from message
}

func To_Balances_VoucherRevoked_1110(in any) *pbgear.Balances_VoucherRevoked_1110 {
	out := &pbgear.Balances_VoucherRevoked_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Spender To_SpCoreCryptoAccountId32(w)
	out.Spender = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(1))

	return out //from message
}

func To_Balances_VoucherUpdated_1110(in any) *pbgear.Balances_VoucherUpdated_1110 {
	out := &pbgear.Balances_VoucherUpdated_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Spender To_SpCoreCryptoAccountId32(w)
	out.Spender = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(1))
	// optional field NewOwner true
	if v.HasValue() {
		out.NewOwner = To_Optional_Balances_VoucherUpdated_1110_new_owner(v.ValueAt(2))
	}

	return out //from message
}

func To_Optional_Balances_VoucherUpdated_1110_new_owner(in any) *pbgear.SpCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_Balances_WhitelistEvent_1030(in any) *pbgear.Balances_WhitelistEvent_1030 {
	out := &pbgear.Balances_WhitelistEvent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_WhitelistEvent_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_WhitelistEvent_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_WhitelistEvent_1030_Value0CallWhitelisted{
			Value0CallWhitelisted: To_Balances_CallWhitelisted(param),
		}
	case 1:
		return &pbgear.Balances_WhitelistEvent_1030_Value0WhitelistedCallRemoved{
			Value0WhitelistedCallRemoved: To_Balances_WhitelistedCallRemoved(param),
		}
	case 2:
		return &pbgear.Balances_WhitelistEvent_1030_Value0WhitelistedCallDispatched{
			Value0WhitelistedCallDispatched: To_Balances_WhitelistedCallDispatched(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_WhitelistedCallDispatched_1030(in any) *pbgear.Balances_WhitelistedCallDispatched_1030 {
	out := &pbgear.Balances_WhitelistedCallDispatched_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// oneOf field Result
	v1 := To_OneOf_Balances_WhitelistedCallDispatched_1030_result(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Balances_WhitelistedCallDispatched_1030_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_WhitelistedCallDispatched_1030_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Balances_WhitelistedCallDispatched_1030_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_WhitelistedCallRemoved_1030(in any) *pbgear.Balances_WhitelistedCallRemoved_1030 {
	out := &pbgear.Balances_WhitelistedCallRemoved_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_Balances_Withdraw_1030(in any) *pbgear.Balances_Withdraw_1030 {
	out := &pbgear.Balances_Withdraw_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Who To_SpCoreCryptoAccountId32(w)
	out.Who = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}

func To_Balances_Withdrawn_1030(in any) *pbgear.Balances_Withdrawn_1030 {
	out := &pbgear.Balances_Withdrawn_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))

	return out //from message
}

func To_BalancesPallet_100(in any) *pbgear.BalancesPallet_100 {
	out := &pbgear.BalancesPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BalancesPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BalancesPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BalancesPallet_100_CallTransferCall{
			CallTransferCall: To_Balances_TransferCall(param),
		}
	case 1:
		return &pbgear.BalancesPallet_100_CallSetBalanceCall{
			CallSetBalanceCall: To_Balances_SetBalanceCall(param),
		}
	case 2:
		return &pbgear.BalancesPallet_100_CallForceTransferCall{
			CallForceTransferCall: To_Balances_ForceTransferCall(param),
		}
	case 3:
		return &pbgear.BalancesPallet_100_CallTransferKeepAliveCall{
			CallTransferKeepAliveCall: To_Balances_TransferKeepAliveCall(param),
		}
	case 4:
		return &pbgear.BalancesPallet_100_CallTransferAllCall{
			CallTransferAllCall: To_Balances_TransferAllCall(param),
		}
	case 5:
		return &pbgear.BalancesPallet_100_CallForceUnreserveCall{
			CallForceUnreserveCall: To_Balances_ForceUnreserveCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BalancesPallet_310(in any) *pbgear.BalancesPallet_310 {
	out := &pbgear.BalancesPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BalancesPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BalancesPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BalancesPallet_310_CallTransferCall{
			CallTransferCall: To_Balances_TransferCall(param),
		}
	case 1:
		return &pbgear.BalancesPallet_310_CallSetBalanceCall{
			CallSetBalanceCall: To_Balances_SetBalanceCall(param),
		}
	case 2:
		return &pbgear.BalancesPallet_310_CallForceTransferCall{
			CallForceTransferCall: To_Balances_ForceTransferCall(param),
		}
	case 3:
		return &pbgear.BalancesPallet_310_CallTransferKeepAliveCall{
			CallTransferKeepAliveCall: To_Balances_TransferKeepAliveCall(param),
		}
	case 4:
		return &pbgear.BalancesPallet_310_CallTransferAllCall{
			CallTransferAllCall: To_Balances_TransferAllCall(param),
		}
	case 5:
		return &pbgear.BalancesPallet_310_CallForceUnreserveCall{
			CallForceUnreserveCall: To_Balances_ForceUnreserveCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BalancesPallet_1030(in any) *pbgear.BalancesPallet_1030 {
	out := &pbgear.BalancesPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BalancesPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BalancesPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BalancesPallet_1030_CallTransferAllowDeathCall{
			CallTransferAllowDeathCall: To_Balances_TransferAllowDeathCall(param),
		}
	case 1:
		return &pbgear.BalancesPallet_1030_CallSetBalanceDeprecatedCall{
			CallSetBalanceDeprecatedCall: To_Balances_SetBalanceDeprecatedCall(param),
		}
	case 2:
		return &pbgear.BalancesPallet_1030_CallForceTransferCall{
			CallForceTransferCall: To_Balances_ForceTransferCall(param),
		}
	case 3:
		return &pbgear.BalancesPallet_1030_CallTransferKeepAliveCall{
			CallTransferKeepAliveCall: To_Balances_TransferKeepAliveCall(param),
		}
	case 4:
		return &pbgear.BalancesPallet_1030_CallTransferAllCall{
			CallTransferAllCall: To_Balances_TransferAllCall(param),
		}
	case 5:
		return &pbgear.BalancesPallet_1030_CallForceUnreserveCall{
			CallForceUnreserveCall: To_Balances_ForceUnreserveCall(param),
		}
	case 6:
		return &pbgear.BalancesPallet_1030_CallUpgradeAccountsCall{
			CallUpgradeAccountsCall: To_Balances_UpgradeAccountsCall(param),
		}
	case 7:
		return &pbgear.BalancesPallet_1030_CallTransferCall{
			CallTransferCall: To_Balances_TransferCall(param),
		}
	case 8:
		return &pbgear.BalancesPallet_1030_CallForceSetBalanceCall{
			CallForceSetBalanceCall: To_Balances_ForceSetBalanceCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BalancesPallet_1040(in any) *pbgear.BalancesPallet_1040 {
	out := &pbgear.BalancesPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BalancesPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BalancesPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BalancesPallet_1040_CallTransferAllowDeathCall{
			CallTransferAllowDeathCall: To_Balances_TransferAllowDeathCall(param),
		}
	case 1:
		return &pbgear.BalancesPallet_1040_CallSetBalanceDeprecatedCall{
			CallSetBalanceDeprecatedCall: To_Balances_SetBalanceDeprecatedCall(param),
		}
	case 2:
		return &pbgear.BalancesPallet_1040_CallForceTransferCall{
			CallForceTransferCall: To_Balances_ForceTransferCall(param),
		}
	case 3:
		return &pbgear.BalancesPallet_1040_CallTransferKeepAliveCall{
			CallTransferKeepAliveCall: To_Balances_TransferKeepAliveCall(param),
		}
	case 4:
		return &pbgear.BalancesPallet_1040_CallTransferAllCall{
			CallTransferAllCall: To_Balances_TransferAllCall(param),
		}
	case 5:
		return &pbgear.BalancesPallet_1040_CallForceUnreserveCall{
			CallForceUnreserveCall: To_Balances_ForceUnreserveCall(param),
		}
	case 6:
		return &pbgear.BalancesPallet_1040_CallUpgradeAccountsCall{
			CallUpgradeAccountsCall: To_Balances_UpgradeAccountsCall(param),
		}
	case 7:
		return &pbgear.BalancesPallet_1040_CallTransferCall{
			CallTransferCall: To_Balances_TransferCall(param),
		}
	case 8:
		return &pbgear.BalancesPallet_1040_CallForceSetBalanceCall{
			CallForceSetBalanceCall: To_Balances_ForceSetBalanceCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BalancesPallet_1400(in any) *pbgear.BalancesPallet_1400 {
	out := &pbgear.BalancesPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BalancesPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BalancesPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BalancesPallet_1400_CallTransferAllowDeathCall{
			CallTransferAllowDeathCall: To_Balances_TransferAllowDeathCall(param),
		}
	case 1:
		return &pbgear.BalancesPallet_1400_CallForceTransferCall{
			CallForceTransferCall: To_Balances_ForceTransferCall(param),
		}
	case 2:
		return &pbgear.BalancesPallet_1400_CallTransferKeepAliveCall{
			CallTransferKeepAliveCall: To_Balances_TransferKeepAliveCall(param),
		}
	case 3:
		return &pbgear.BalancesPallet_1400_CallTransferAllCall{
			CallTransferAllCall: To_Balances_TransferAllCall(param),
		}
	case 4:
		return &pbgear.BalancesPallet_1400_CallForceUnreserveCall{
			CallForceUnreserveCall: To_Balances_ForceUnreserveCall(param),
		}
	case 5:
		return &pbgear.BalancesPallet_1400_CallUpgradeAccountsCall{
			CallUpgradeAccountsCall: To_Balances_UpgradeAccountsCall(param),
		}
	case 6:
		return &pbgear.BalancesPallet_1400_CallForceSetBalanceCall{
			CallForceSetBalanceCall: To_Balances_ForceSetBalanceCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Dest_100(in any) *pbgear.Balances_Dest_100 {
	out := &pbgear.Balances_Dest_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Balances_Dest_100_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Dest_100_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Dest_100_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Dest_100_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Dest_100_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Dest_100_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Dest_100_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Dest_310(in any) *pbgear.Balances_Dest_310 {
	out := &pbgear.Balances_Dest_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Balances_Dest_310_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Dest_310_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Dest_310_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Dest_310_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Dest_310_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Dest_310_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Dest_310_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Dest_1030(in any) *pbgear.Balances_Dest_1030 {
	out := &pbgear.Balances_Dest_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Balances_Dest_1030_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Dest_1030_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Dest_1030_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Dest_1030_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Dest_1030_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Dest_1030_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Dest_1030_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ForceSetBalanceCall_1030(in any) *pbgear.Balances_ForceSetBalanceCall_1030 {
	out := &pbgear.Balances_ForceSetBalanceCall_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Balances_ForceSetBalanceCall_1030_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// primitive field NewFree
	out.NewFree = To_string(v.ValueAt(1))

	return out //from message
}
func To_Balances_ForceSetBalanceCall_1030_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_ForceSetBalanceCall_1030(in)
	out := &pbgearextrinsic.Extrinsic_BalancesForceSetBalanceCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesForceSetBalanceCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_ForceSetBalanceCall_1030_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ForceSetBalanceCall_1030_WhoId{
			WhoId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_ForceSetBalanceCall_1030_WhoIndex{
			WhoIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_ForceSetBalanceCall_1030_WhoRaw{
			WhoRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_ForceSetBalanceCall_1030_WhoAddress32{
			WhoAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_ForceSetBalanceCall_1030_WhoAddress20{
			WhoAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ForceTransferCall_100(in any) *pbgear.Balances_ForceTransferCall_100 {
	out := &pbgear.Balances_ForceTransferCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Balances_ForceTransferCall_100_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))
	// oneOf field Dest
	v1 := To_OneOf_Balances_ForceTransferCall_100_dest(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v1))
	// primitive field Value
	out.Value = To_string(v.ValueAt(2))

	return out //from message
}
func To_Balances_ForceTransferCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_ForceTransferCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BalancesForceTransferCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesForceTransferCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_ForceTransferCall_100_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ForceTransferCall_100_SourceId{
			SourceId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_ForceTransferCall_100_SourceIndex{
			SourceIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_ForceTransferCall_100_SourceRaw{
			SourceRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_ForceTransferCall_100_SourceAddress32{
			SourceAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_ForceTransferCall_100_SourceAddress20{
			SourceAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Balances_ForceTransferCall_100_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ForceTransferCall_100_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_ForceTransferCall_100_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_ForceTransferCall_100_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_ForceTransferCall_100_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_ForceTransferCall_100_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_ForceUnreserveCall_100(in any) *pbgear.Balances_ForceUnreserveCall_100 {
	out := &pbgear.Balances_ForceUnreserveCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Balances_ForceUnreserveCall_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))

	return out //from message
}
func To_Balances_ForceUnreserveCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_ForceUnreserveCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BalancesForceUnreserveCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesForceUnreserveCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_ForceUnreserveCall_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_ForceUnreserveCall_100_WhoId{
			WhoId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_ForceUnreserveCall_100_WhoIndex{
			WhoIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_ForceUnreserveCall_100_WhoRaw{
			WhoRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_ForceUnreserveCall_100_WhoAddress32{
			WhoAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_ForceUnreserveCall_100_WhoAddress20{
			WhoAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_SetBalanceCall_100(in any) *pbgear.Balances_SetBalanceCall_100 {
	out := &pbgear.Balances_SetBalanceCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Balances_SetBalanceCall_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// primitive field NewFree
	out.NewFree = To_string(v.ValueAt(1))
	// primitive field NewReserved
	out.NewReserved = To_string(v.ValueAt(2))

	return out //from message
}
func To_Balances_SetBalanceCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_SetBalanceCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BalancesSetBalanceCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesSetBalanceCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_SetBalanceCall_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_SetBalanceCall_100_WhoId{
			WhoId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_SetBalanceCall_100_WhoIndex{
			WhoIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_SetBalanceCall_100_WhoRaw{
			WhoRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_SetBalanceCall_100_WhoAddress32{
			WhoAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_SetBalanceCall_100_WhoAddress20{
			WhoAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_SetBalanceDeprecatedCall_1030(in any) *pbgear.Balances_SetBalanceDeprecatedCall_1030 {
	out := &pbgear.Balances_SetBalanceDeprecatedCall_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Balances_SetBalanceDeprecatedCall_1030_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// primitive field NewFree
	out.NewFree = To_string(v.ValueAt(1))
	// primitive field OldReserved
	out.OldReserved = To_string(v.ValueAt(2))

	return out //from message
}
func To_Balances_SetBalanceDeprecatedCall_1030_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_SetBalanceDeprecatedCall_1030(in)
	out := &pbgearextrinsic.Extrinsic_BalancesSetBalanceDeprecatedCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesSetBalanceDeprecatedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_SetBalanceDeprecatedCall_1030_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_SetBalanceDeprecatedCall_1030_WhoId{
			WhoId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_SetBalanceDeprecatedCall_1030_WhoIndex{
			WhoIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_SetBalanceDeprecatedCall_1030_WhoRaw{
			WhoRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_SetBalanceDeprecatedCall_1030_WhoAddress32{
			WhoAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_SetBalanceDeprecatedCall_1030_WhoAddress20{
			WhoAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Source_100(in any) *pbgear.Balances_Source_100 {
	out := &pbgear.Balances_Source_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Balances_Source_100_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Source_100_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Source_100_SourceId{
			SourceId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Source_100_SourceIndex{
			SourceIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Source_100_SourceRaw{
			SourceRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Source_100_SourceAddress32{
			SourceAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Source_100_SourceAddress20{
			SourceAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Source_310(in any) *pbgear.Balances_Source_310 {
	out := &pbgear.Balances_Source_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Balances_Source_310_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Source_310_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Source_310_SourceId{
			SourceId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Source_310_SourceIndex{
			SourceIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Source_310_SourceRaw{
			SourceRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Source_310_SourceAddress32{
			SourceAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Source_310_SourceAddress20{
			SourceAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Source_1030(in any) *pbgear.Balances_Source_1030 {
	out := &pbgear.Balances_Source_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Balances_Source_1030_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Source_1030_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Source_1030_SourceId{
			SourceId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Source_1030_SourceIndex{
			SourceIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Source_1030_SourceRaw{
			SourceRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Source_1030_SourceAddress32{
			SourceAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Source_1030_SourceAddress20{
			SourceAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_TransferAllCall_100(in any) *pbgear.Balances_TransferAllCall_100 {
	out := &pbgear.Balances_TransferAllCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Balances_TransferAllCall_100_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(1))

	return out //from message
}
func To_Balances_TransferAllCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_TransferAllCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BalancesTransferAllCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesTransferAllCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_TransferAllCall_100_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_TransferAllCall_100_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_TransferAllCall_100_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_TransferAllCall_100_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_TransferAllCall_100_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_TransferAllCall_100_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_TransferAllowDeathCall_1030(in any) *pbgear.Balances_TransferAllowDeathCall_1030 {
	out := &pbgear.Balances_TransferAllowDeathCall_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Balances_TransferAllowDeathCall_1030_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))
	// primitive field Value
	out.Value = To_string(v.ValueAt(1))

	return out //from message
}
func To_Balances_TransferAllowDeathCall_1030_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_TransferAllowDeathCall_1030(in)
	out := &pbgearextrinsic.Extrinsic_BalancesTransferAllowDeathCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesTransferAllowDeathCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_TransferAllowDeathCall_1030_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_TransferAllowDeathCall_1030_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_TransferAllowDeathCall_1030_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_TransferAllowDeathCall_1030_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_TransferAllowDeathCall_1030_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_TransferAllowDeathCall_1030_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_TransferCall_100(in any) *pbgear.Balances_TransferCall_100 {
	out := &pbgear.Balances_TransferCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Balances_TransferCall_100_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))
	// primitive field Value
	out.Value = To_string(v.ValueAt(1))

	return out //from message
}
func To_Balances_TransferCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_TransferCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BalancesTransferCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesTransferCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_TransferCall_100_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_TransferCall_100_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_TransferCall_100_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_TransferCall_100_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_TransferCall_100_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_TransferCall_100_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_TransferKeepAliveCall_100(in any) *pbgear.Balances_TransferKeepAliveCall_100 {
	out := &pbgear.Balances_TransferKeepAliveCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Balances_TransferKeepAliveCall_100_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))
	// primitive field Value
	out.Value = To_string(v.ValueAt(1))

	return out //from message
}
func To_Balances_TransferKeepAliveCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_TransferKeepAliveCall_100(in)
	out := &pbgearextrinsic.Extrinsic_BalancesTransferKeepAliveCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesTransferKeepAliveCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Balances_TransferKeepAliveCall_100_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_TransferKeepAliveCall_100_DestId{
			DestId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_TransferKeepAliveCall_100_DestIndex{
			DestIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_TransferKeepAliveCall_100_DestRaw{
			DestRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_TransferKeepAliveCall_100_DestAddress32{
			DestAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_TransferKeepAliveCall_100_DestAddress20{
			DestAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_UpgradeAccountsCall_1030(in any) *pbgear.Balances_UpgradeAccountsCall_1030 {
	out := &pbgear.Balances_UpgradeAccountsCall_1030{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Who
	out.Who = To_Repeated_Balances_UpgradeAccountsCall_1030_who(v.ValueAt(0))

	return out //from message
}
func To_Balances_UpgradeAccountsCall_1030_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Balances_UpgradeAccountsCall_1030(in)
	out := &pbgearextrinsic.Extrinsic_BalancesUpgradeAccountsCall{}
	reflect.ValueOf(out).Elem().FieldByName("BalancesUpgradeAccountsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Balances_UpgradeAccountsCall_1030_who(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Balances_Value0_1030(in any) *pbgear.Balances_Value0_1030 {
	out := &pbgear.Balances_Value0_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_Value0_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Value0_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Value0_1030_Value0IdentitySet{
			Value0IdentitySet: To_Balances_IdentitySet(param),
		}
	case 1:
		return &pbgear.Balances_Value0_1030_Value0IdentityCleared{
			Value0IdentityCleared: To_Balances_IdentityCleared(param),
		}
	case 2:
		return &pbgear.Balances_Value0_1030_Value0IdentityKilled{
			Value0IdentityKilled: To_Balances_IdentityKilled(param),
		}
	case 3:
		return &pbgear.Balances_Value0_1030_Value0JudgementRequested{
			Value0JudgementRequested: To_Balances_JudgementRequested(param),
		}
	case 4:
		return &pbgear.Balances_Value0_1030_Value0JudgementUnrequested{
			Value0JudgementUnrequested: To_Balances_JudgementUnrequested(param),
		}
	case 5:
		return &pbgear.Balances_Value0_1030_Value0JudgementGiven{
			Value0JudgementGiven: To_Balances_JudgementGiven(param),
		}
	case 6:
		return &pbgear.Balances_Value0_1030_Value0RegistrarAdded{
			Value0RegistrarAdded: To_Balances_RegistrarAdded(param),
		}
	case 7:
		return &pbgear.Balances_Value0_1030_Value0SubIdentityAdded{
			Value0SubIdentityAdded: To_Balances_SubIdentityAdded(param),
		}
	case 8:
		return &pbgear.Balances_Value0_1030_Value0SubIdentityRemoved{
			Value0SubIdentityRemoved: To_Balances_SubIdentityRemoved(param),
		}
	case 9:
		return &pbgear.Balances_Value0_1030_Value0SubIdentityRevoked{
			Value0SubIdentityRevoked: To_Balances_SubIdentityRevoked(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Value0_1040(in any) *pbgear.Balances_Value0_1040 {
	out := &pbgear.Balances_Value0_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_Value0_1040_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Value0_1040_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Value0_1040_Value0Deposited{
			Value0Deposited: To_Balances_Deposited(param),
		}
	case 1:
		return &pbgear.Balances_Value0_1040_Value0Withdrawn{
			Value0Withdrawn: To_Balances_Withdrawn(param),
		}
	case 2:
		return &pbgear.Balances_Value0_1040_Value0Burned{
			Value0Burned: To_Balances_Burned(param),
		}
	case 3:
		return &pbgear.Balances_Value0_1040_Value0Minted{
			Value0Minted: To_Balances_Minted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Value0_1110(in any) *pbgear.Balances_Value0_1110 {
	out := &pbgear.Balances_Value0_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_Value0_1110_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Value0_1110_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Value0_1110_Value0VoucherIssued{
			Value0VoucherIssued: To_Balances_VoucherIssued(param),
		}
	case 1:
		return &pbgear.Balances_Value0_1110_Value0VoucherRevoked{
			Value0VoucherRevoked: To_Balances_VoucherRevoked(param),
		}
	case 2:
		return &pbgear.Balances_Value0_1110_Value0VoucherUpdated{
			Value0VoucherUpdated: To_Balances_VoucherUpdated(param),
		}
	case 3:
		return &pbgear.Balances_Value0_1110_Value0VoucherDeclined{
			Value0VoucherDeclined: To_Balances_VoucherDeclined(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Value0_1300(in any) *pbgear.Balances_Value0_1300 {
	out := &pbgear.Balances_Value0_1300{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_Value0_1300_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Value0_1300_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Value0_1300_Value0EraPaid{
			Value0EraPaid: To_Balances_EraPaid(param),
		}
	case 1:
		return &pbgear.Balances_Value0_1300_Value0Rewarded{
			Value0Rewarded: To_Balances_Rewarded(param),
		}
	case 2:
		return &pbgear.Balances_Value0_1300_Value0Slashed{
			Value0Slashed: To_Balances_Slashed(param),
		}
	case 3:
		return &pbgear.Balances_Value0_1300_Value0SlashReported{
			Value0SlashReported: To_Balances_SlashReported(param),
		}
	case 4:
		return &pbgear.Balances_Value0_1300_Value0OldSlashingReportDiscarded{
			Value0OldSlashingReportDiscarded: To_Balances_OldSlashingReportDiscarded(param),
		}
	case 5:
		return &pbgear.Balances_Value0_1300_Value0StakersElected{
			Value0StakersElected: To_Balances_StakersElected(param),
		}
	case 6:
		return &pbgear.Balances_Value0_1300_Value0Bonded{
			Value0Bonded: To_Balances_Bonded(param),
		}
	case 7:
		return &pbgear.Balances_Value0_1300_Value0Unbonded{
			Value0Unbonded: To_Balances_Unbonded(param),
		}
	case 8:
		return &pbgear.Balances_Value0_1300_Value0Withdrawn{
			Value0Withdrawn: To_Balances_Withdrawn(param),
		}
	case 9:
		return &pbgear.Balances_Value0_1300_Value0Kicked{
			Value0Kicked: To_Balances_Kicked(param),
		}
	case 10:
		return &pbgear.Balances_Value0_1300_Value0StakingElectionFailed{
			Value0StakingElectionFailed: To_Balances_StakingElectionFailed(param),
		}
	case 11:
		return &pbgear.Balances_Value0_1300_Value0Chilled{
			Value0Chilled: To_Balances_Chilled(param),
		}
	case 12:
		return &pbgear.Balances_Value0_1300_Value0PayoutStarted{
			Value0PayoutStarted: To_Balances_PayoutStarted(param),
		}
	case 13:
		return &pbgear.Balances_Value0_1300_Value0ValidatorPrefsSet{
			Value0ValidatorPrefsSet: To_Balances_ValidatorPrefsSet(param),
		}
	case 14:
		return &pbgear.Balances_Value0_1300_Value0SnapshotVotersSizeExceeded{
			Value0SnapshotVotersSizeExceeded: To_Balances_SnapshotVotersSizeExceeded(param),
		}
	case 15:
		return &pbgear.Balances_Value0_1300_Value0SnapshotTargetsSizeExceeded{
			Value0SnapshotTargetsSizeExceeded: To_Balances_SnapshotTargetsSizeExceeded(param),
		}
	case 16:
		return &pbgear.Balances_Value0_1300_Value0ForceEra{
			Value0ForceEra: To_Balances_ForceEra(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Value0_1400(in any) *pbgear.Balances_Value0_1400 {
	out := &pbgear.Balances_Value0_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_Value0_1400_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Value0_1400_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Value0_1400_Value0Added{
			Value0Added: To_Balances_Added(param),
		}
	case 1:
		return &pbgear.Balances_Value0_1400_Value0Awarded{
			Value0Awarded: To_Balances_Awarded(param),
		}
	case 2:
		return &pbgear.Balances_Value0_1400_Value0Claimed{
			Value0Claimed: To_Balances_Claimed(param),
		}
	case 3:
		return &pbgear.Balances_Value0_1400_Value0Canceled{
			Value0Canceled: To_Balances_Canceled(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Value0_1410(in any) *pbgear.Balances_Value0_1410 {
	out := &pbgear.Balances_Value0_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_Value0_1410_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Value0_1410_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Value0_1410_Value0BountyProposed{
			Value0BountyProposed: To_Balances_BountyProposed(param),
		}
	case 1:
		return &pbgear.Balances_Value0_1410_Value0BountyRejected{
			Value0BountyRejected: To_Balances_BountyRejected(param),
		}
	case 2:
		return &pbgear.Balances_Value0_1410_Value0BountyBecameActive{
			Value0BountyBecameActive: To_Balances_BountyBecameActive(param),
		}
	case 3:
		return &pbgear.Balances_Value0_1410_Value0BountyAwarded{
			Value0BountyAwarded: To_Balances_BountyAwarded(param),
		}
	case 4:
		return &pbgear.Balances_Value0_1410_Value0BountyClaimed{
			Value0BountyClaimed: To_Balances_BountyClaimed(param),
		}
	case 5:
		return &pbgear.Balances_Value0_1410_Value0BountyCanceled{
			Value0BountyCanceled: To_Balances_BountyCanceled(param),
		}
	case 6:
		return &pbgear.Balances_Value0_1410_Value0BountyExtended{
			Value0BountyExtended: To_Balances_BountyExtended(param),
		}
	case 7:
		return &pbgear.Balances_Value0_1410_Value0BountyApproved{
			Value0BountyApproved: To_Balances_BountyApproved(param),
		}
	case 8:
		return &pbgear.Balances_Value0_1410_Value0CuratorProposed{
			Value0CuratorProposed: To_Balances_CuratorProposed(param),
		}
	case 9:
		return &pbgear.Balances_Value0_1410_Value0CuratorUnassigned{
			Value0CuratorUnassigned: To_Balances_CuratorUnassigned(param),
		}
	case 10:
		return &pbgear.Balances_Value0_1410_Value0CuratorAccepted{
			Value0CuratorAccepted: To_Balances_CuratorAccepted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Value0_1420(in any) *pbgear.Balances_Value0_1420 {
	out := &pbgear.Balances_Value0_1420{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Balances_Value0_1420_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Value0_1420_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Value0_1420_Value0MessageQueued{
			Value0MessageQueued: To_Balances_MessageQueued(param),
		}
	case 1:
		return &pbgear.Balances_Value0_1420_Value0UserMessageSent{
			Value0UserMessageSent: To_Balances_UserMessageSent(param),
		}
	case 2:
		return &pbgear.Balances_Value0_1420_Value0UserMessageRead{
			Value0UserMessageRead: To_Balances_UserMessageRead(param),
		}
	case 3:
		return &pbgear.Balances_Value0_1420_Value0MessagesDispatched{
			Value0MessagesDispatched: To_Balances_MessagesDispatched(param),
		}
	case 4:
		return &pbgear.Balances_Value0_1420_Value0MessageWaited{
			Value0MessageWaited: To_Balances_MessageWaited(param),
		}
	case 5:
		return &pbgear.Balances_Value0_1420_Value0MessageWoken{
			Value0MessageWoken: To_Balances_MessageWoken(param),
		}
	case 6:
		return &pbgear.Balances_Value0_1420_Value0CodeChanged{
			Value0CodeChanged: To_Balances_CodeChanged(param),
		}
	case 7:
		return &pbgear.Balances_Value0_1420_Value0ProgramChanged{
			Value0ProgramChanged: To_Balances_ProgramChanged(param),
		}
	case 8:
		return &pbgear.Balances_Value0_1420_Value0QueueNotProcessed{
			Value0QueueNotProcessed: To_Balances_QueueNotProcessed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Who_100(in any) *pbgear.Balances_Who_100 {
	out := &pbgear.Balances_Who_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Balances_Who_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Who_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Who_100_WhoId{
			WhoId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Who_100_WhoIndex{
			WhoIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Who_100_WhoRaw{
			WhoRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Who_100_WhoAddress32{
			WhoAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Who_100_WhoAddress20{
			WhoAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Who_310(in any) *pbgear.Balances_Who_310 {
	out := &pbgear.Balances_Who_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Balances_Who_310_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Who_310_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Who_310_WhoId{
			WhoId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Who_310_WhoIndex{
			WhoIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Who_310_WhoRaw{
			WhoRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Who_310_WhoAddress32{
			WhoAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Who_310_WhoAddress20{
			WhoAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Balances_Who_1030(in any) *pbgear.Balances_Who_1030 {
	out := &pbgear.Balances_Who_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Balances_Who_1030_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Balances_Who_1030_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Balances_Who_1030_WhoId{
			WhoId: To_Balances_Id(param),
		}
	case 1:
		return &pbgear.Balances_Who_1030_WhoIndex{
			WhoIndex: To_Balances_Index(param),
		}
	case 2:
		return &pbgear.Balances_Who_1030_WhoRaw{
			WhoRaw: To_Balances_Raw(param),
		}
	case 3:
		return &pbgear.Balances_Who_1030_WhoAddress32{
			WhoAddress32: To_Balances_Address32(param),
		}
	case 4:
		return &pbgear.Balances_Who_1030_WhoAddress20{
			WhoAddress20: To_Balances_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BelowMinimum_1030(in any) *pbgear.BelowMinimum_1030 {
	out := &pbgear.BelowMinimum_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_BigSpender_210(in any) *pbgear.BigSpender_210 {
	out := &pbgear.BigSpender_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_BigTipper_210(in any) *pbgear.BigTipper_210 {
	out := &pbgear.BigTipper_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Blocked_1030(in any) *pbgear.Blocked_1030 {
	out := &pbgear.Blocked_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Bounties_Address20_310(in any) *pbgear.Bounties_Address20_310 {
	out := &pbgear.Bounties_Address20_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Bounties_Address32_310(in any) *pbgear.Bounties_Address32_310 {
	out := &pbgear.Bounties_Address32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Bounties_Id_310(in any) *pbgear.Bounties_Id_310 {
	out := &pbgear.Bounties_Id_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Bounties_Index_310(in any) *pbgear.Bounties_Index_310 {
	out := &pbgear.Bounties_Index_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Bounties_TupleNull(w)
	out.Value0 = To_Bounties_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Bounties_Raw_310(in any) *pbgear.Bounties_Raw_310 {
	out := &pbgear.Bounties_Raw_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Bounties_TupleNull_310(in any) *pbgear.Bounties_TupleNull_310 {
	out := &pbgear.Bounties_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Bounties_TupleNull_1030(in any) *pbgear.Bounties_TupleNull_1030 {
	out := &pbgear.Bounties_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_BountiesPallet_310(in any) *pbgear.BountiesPallet_310 {
	out := &pbgear.BountiesPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BountiesPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BountiesPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BountiesPallet_310_CallProposeBountyCall{
			CallProposeBountyCall: To_Bounties_ProposeBountyCall(param),
		}
	case 1:
		return &pbgear.BountiesPallet_310_CallApproveBountyCall{
			CallApproveBountyCall: To_Bounties_ApproveBountyCall(param),
		}
	case 2:
		return &pbgear.BountiesPallet_310_CallProposeCuratorCall{
			CallProposeCuratorCall: To_Bounties_ProposeCuratorCall(param),
		}
	case 3:
		return &pbgear.BountiesPallet_310_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_Bounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.BountiesPallet_310_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_Bounties_AcceptCuratorCall(param),
		}
	case 5:
		return &pbgear.BountiesPallet_310_CallAwardBountyCall{
			CallAwardBountyCall: To_Bounties_AwardBountyCall(param),
		}
	case 6:
		return &pbgear.BountiesPallet_310_CallClaimBountyCall{
			CallClaimBountyCall: To_Bounties_ClaimBountyCall(param),
		}
	case 7:
		return &pbgear.BountiesPallet_310_CallCloseBountyCall{
			CallCloseBountyCall: To_Bounties_CloseBountyCall(param),
		}
	case 8:
		return &pbgear.BountiesPallet_310_CallExtendBountyExpiryCall{
			CallExtendBountyExpiryCall: To_Bounties_ExtendBountyExpiryCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BountiesPallet_1030(in any) *pbgear.BountiesPallet_1030 {
	out := &pbgear.BountiesPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BountiesPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BountiesPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BountiesPallet_1030_CallProposeBountyCall{
			CallProposeBountyCall: To_Bounties_ProposeBountyCall(param),
		}
	case 1:
		return &pbgear.BountiesPallet_1030_CallApproveBountyCall{
			CallApproveBountyCall: To_Bounties_ApproveBountyCall(param),
		}
	case 2:
		return &pbgear.BountiesPallet_1030_CallProposeCuratorCall{
			CallProposeCuratorCall: To_Bounties_ProposeCuratorCall(param),
		}
	case 3:
		return &pbgear.BountiesPallet_1030_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_Bounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.BountiesPallet_1030_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_Bounties_AcceptCuratorCall(param),
		}
	case 5:
		return &pbgear.BountiesPallet_1030_CallAwardBountyCall{
			CallAwardBountyCall: To_Bounties_AwardBountyCall(param),
		}
	case 6:
		return &pbgear.BountiesPallet_1030_CallClaimBountyCall{
			CallClaimBountyCall: To_Bounties_ClaimBountyCall(param),
		}
	case 7:
		return &pbgear.BountiesPallet_1030_CallCloseBountyCall{
			CallCloseBountyCall: To_Bounties_CloseBountyCall(param),
		}
	case 8:
		return &pbgear.BountiesPallet_1030_CallExtendBountyExpiryCall{
			CallExtendBountyExpiryCall: To_Bounties_ExtendBountyExpiryCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BountiesPallet_1040(in any) *pbgear.BountiesPallet_1040 {
	out := &pbgear.BountiesPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BountiesPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BountiesPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BountiesPallet_1040_CallProposeBountyCall{
			CallProposeBountyCall: To_Bounties_ProposeBountyCall(param),
		}
	case 1:
		return &pbgear.BountiesPallet_1040_CallApproveBountyCall{
			CallApproveBountyCall: To_Bounties_ApproveBountyCall(param),
		}
	case 2:
		return &pbgear.BountiesPallet_1040_CallProposeCuratorCall{
			CallProposeCuratorCall: To_Bounties_ProposeCuratorCall(param),
		}
	case 3:
		return &pbgear.BountiesPallet_1040_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_Bounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.BountiesPallet_1040_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_Bounties_AcceptCuratorCall(param),
		}
	case 5:
		return &pbgear.BountiesPallet_1040_CallAwardBountyCall{
			CallAwardBountyCall: To_Bounties_AwardBountyCall(param),
		}
	case 6:
		return &pbgear.BountiesPallet_1040_CallClaimBountyCall{
			CallClaimBountyCall: To_Bounties_ClaimBountyCall(param),
		}
	case 7:
		return &pbgear.BountiesPallet_1040_CallCloseBountyCall{
			CallCloseBountyCall: To_Bounties_CloseBountyCall(param),
		}
	case 8:
		return &pbgear.BountiesPallet_1040_CallExtendBountyExpiryCall{
			CallExtendBountyExpiryCall: To_Bounties_ExtendBountyExpiryCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_BountiesPallet_1400(in any) *pbgear.BountiesPallet_1400 {
	out := &pbgear.BountiesPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_BountiesPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_BountiesPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.BountiesPallet_1400_CallProposeBountyCall{
			CallProposeBountyCall: To_Bounties_ProposeBountyCall(param),
		}
	case 1:
		return &pbgear.BountiesPallet_1400_CallApproveBountyCall{
			CallApproveBountyCall: To_Bounties_ApproveBountyCall(param),
		}
	case 2:
		return &pbgear.BountiesPallet_1400_CallProposeCuratorCall{
			CallProposeCuratorCall: To_Bounties_ProposeCuratorCall(param),
		}
	case 3:
		return &pbgear.BountiesPallet_1400_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_Bounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.BountiesPallet_1400_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_Bounties_AcceptCuratorCall(param),
		}
	case 5:
		return &pbgear.BountiesPallet_1400_CallAwardBountyCall{
			CallAwardBountyCall: To_Bounties_AwardBountyCall(param),
		}
	case 6:
		return &pbgear.BountiesPallet_1400_CallClaimBountyCall{
			CallClaimBountyCall: To_Bounties_ClaimBountyCall(param),
		}
	case 7:
		return &pbgear.BountiesPallet_1400_CallCloseBountyCall{
			CallCloseBountyCall: To_Bounties_CloseBountyCall(param),
		}
	case 8:
		return &pbgear.BountiesPallet_1400_CallExtendBountyExpiryCall{
			CallExtendBountyExpiryCall: To_Bounties_ExtendBountyExpiryCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Bounties_AcceptCuratorCall_310(in any) *pbgear.Bounties_AcceptCuratorCall_310 {
	out := &pbgear.Bounties_AcceptCuratorCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Bounties_AcceptCuratorCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_AcceptCuratorCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesAcceptCuratorCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesAcceptCuratorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Bounties_ApproveBountyCall_310(in any) *pbgear.Bounties_ApproveBountyCall_310 {
	out := &pbgear.Bounties_ApproveBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Bounties_ApproveBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_ApproveBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesApproveBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesApproveBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Bounties_AwardBountyCall_310(in any) *pbgear.Bounties_AwardBountyCall_310 {
	out := &pbgear.Bounties_AwardBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))
	// oneOf field Beneficiary
	v1 := To_OneOf_Bounties_AwardBountyCall_310_beneficiary(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Bounties_AwardBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_AwardBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesAwardBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesAwardBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Bounties_AwardBountyCall_310_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Bounties_AwardBountyCall_310_BeneficiaryId{
			BeneficiaryId: To_Bounties_Id(param),
		}
	case 1:
		return &pbgear.Bounties_AwardBountyCall_310_BeneficiaryIndex{
			BeneficiaryIndex: To_Bounties_Index(param),
		}
	case 2:
		return &pbgear.Bounties_AwardBountyCall_310_BeneficiaryRaw{
			BeneficiaryRaw: To_Bounties_Raw(param),
		}
	case 3:
		return &pbgear.Bounties_AwardBountyCall_310_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Bounties_Address32(param),
		}
	case 4:
		return &pbgear.Bounties_AwardBountyCall_310_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Bounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Bounties_Beneficiary_310(in any) *pbgear.Bounties_Beneficiary_310 {
	out := &pbgear.Bounties_Beneficiary_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Beneficiary
	v0 := To_OneOf_Bounties_Beneficiary_310_beneficiary(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Bounties_Beneficiary_310_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Bounties_Beneficiary_310_BeneficiaryId{
			BeneficiaryId: To_Bounties_Id(param),
		}
	case 1:
		return &pbgear.Bounties_Beneficiary_310_BeneficiaryIndex{
			BeneficiaryIndex: To_Bounties_Index(param),
		}
	case 2:
		return &pbgear.Bounties_Beneficiary_310_BeneficiaryRaw{
			BeneficiaryRaw: To_Bounties_Raw(param),
		}
	case 3:
		return &pbgear.Bounties_Beneficiary_310_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Bounties_Address32(param),
		}
	case 4:
		return &pbgear.Bounties_Beneficiary_310_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Bounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Bounties_Beneficiary_1030(in any) *pbgear.Bounties_Beneficiary_1030 {
	out := &pbgear.Bounties_Beneficiary_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Beneficiary
	v0 := To_OneOf_Bounties_Beneficiary_1030_beneficiary(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Bounties_Beneficiary_1030_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Bounties_Beneficiary_1030_BeneficiaryId{
			BeneficiaryId: To_Bounties_Id(param),
		}
	case 1:
		return &pbgear.Bounties_Beneficiary_1030_BeneficiaryIndex{
			BeneficiaryIndex: To_Bounties_Index(param),
		}
	case 2:
		return &pbgear.Bounties_Beneficiary_1030_BeneficiaryRaw{
			BeneficiaryRaw: To_Bounties_Raw(param),
		}
	case 3:
		return &pbgear.Bounties_Beneficiary_1030_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Bounties_Address32(param),
		}
	case 4:
		return &pbgear.Bounties_Beneficiary_1030_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Bounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Bounties_ClaimBountyCall_310(in any) *pbgear.Bounties_ClaimBountyCall_310 {
	out := &pbgear.Bounties_ClaimBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Bounties_ClaimBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_ClaimBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesClaimBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesClaimBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Bounties_CloseBountyCall_310(in any) *pbgear.Bounties_CloseBountyCall_310 {
	out := &pbgear.Bounties_CloseBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Bounties_CloseBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_CloseBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesCloseBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesCloseBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Bounties_Curator_310(in any) *pbgear.Bounties_Curator_310 {
	out := &pbgear.Bounties_Curator_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Curator
	v0 := To_OneOf_Bounties_Curator_310_curator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Curator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Bounties_Curator_310_curator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Bounties_Curator_310_CuratorId{
			CuratorId: To_Bounties_Id(param),
		}
	case 1:
		return &pbgear.Bounties_Curator_310_CuratorIndex{
			CuratorIndex: To_Bounties_Index(param),
		}
	case 2:
		return &pbgear.Bounties_Curator_310_CuratorRaw{
			CuratorRaw: To_Bounties_Raw(param),
		}
	case 3:
		return &pbgear.Bounties_Curator_310_CuratorAddress32{
			CuratorAddress32: To_Bounties_Address32(param),
		}
	case 4:
		return &pbgear.Bounties_Curator_310_CuratorAddress20{
			CuratorAddress20: To_Bounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Bounties_Curator_1030(in any) *pbgear.Bounties_Curator_1030 {
	out := &pbgear.Bounties_Curator_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Curator
	v0 := To_OneOf_Bounties_Curator_1030_curator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Curator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Bounties_Curator_1030_curator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Bounties_Curator_1030_CuratorId{
			CuratorId: To_Bounties_Id(param),
		}
	case 1:
		return &pbgear.Bounties_Curator_1030_CuratorIndex{
			CuratorIndex: To_Bounties_Index(param),
		}
	case 2:
		return &pbgear.Bounties_Curator_1030_CuratorRaw{
			CuratorRaw: To_Bounties_Raw(param),
		}
	case 3:
		return &pbgear.Bounties_Curator_1030_CuratorAddress32{
			CuratorAddress32: To_Bounties_Address32(param),
		}
	case 4:
		return &pbgear.Bounties_Curator_1030_CuratorAddress20{
			CuratorAddress20: To_Bounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Bounties_ExtendBountyExpiryCall_310(in any) *pbgear.Bounties_ExtendBountyExpiryCall_310 {
	out := &pbgear.Bounties_ExtendBountyExpiryCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))
	// primitive field Remark
	out.Remark = To_bytes(v.ValueAt(1))

	return out //from message
}
func To_Bounties_ExtendBountyExpiryCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_ExtendBountyExpiryCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesExtendBountyExpiryCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesExtendBountyExpiryCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Bounties_ProposeBountyCall_310(in any) *pbgear.Bounties_ProposeBountyCall_310 {
	out := &pbgear.Bounties_ProposeBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value
	out.Value = To_string(v.ValueAt(0))
	// primitive field Description
	out.Description = To_bytes(v.ValueAt(1))

	return out //from message
}
func To_Bounties_ProposeBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_ProposeBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesProposeBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesProposeBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Bounties_ProposeCuratorCall_310(in any) *pbgear.Bounties_ProposeCuratorCall_310 {
	out := &pbgear.Bounties_ProposeCuratorCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))
	// oneOf field Curator
	v1 := To_OneOf_Bounties_ProposeCuratorCall_310_curator(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Curator").Set(reflect.ValueOf(v1))
	// primitive field Fee
	out.Fee = To_string(v.ValueAt(2))

	return out //from message
}
func To_Bounties_ProposeCuratorCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_ProposeCuratorCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesProposeCuratorCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesProposeCuratorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Bounties_ProposeCuratorCall_310_curator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Bounties_ProposeCuratorCall_310_CuratorId{
			CuratorId: To_Bounties_Id(param),
		}
	case 1:
		return &pbgear.Bounties_ProposeCuratorCall_310_CuratorIndex{
			CuratorIndex: To_Bounties_Index(param),
		}
	case 2:
		return &pbgear.Bounties_ProposeCuratorCall_310_CuratorRaw{
			CuratorRaw: To_Bounties_Raw(param),
		}
	case 3:
		return &pbgear.Bounties_ProposeCuratorCall_310_CuratorAddress32{
			CuratorAddress32: To_Bounties_Address32(param),
		}
	case 4:
		return &pbgear.Bounties_ProposeCuratorCall_310_CuratorAddress20{
			CuratorAddress20: To_Bounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Bounties_UnassignCuratorCall_310(in any) *pbgear.Bounties_UnassignCuratorCall_310 {
	out := &pbgear.Bounties_UnassignCuratorCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BountyId
	out.BountyId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Bounties_UnassignCuratorCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Bounties_UnassignCuratorCall_310(in)
	out := &pbgearextrinsic.Extrinsic_BountiesUnassignCuratorCall{}
	reflect.ValueOf(out).Elem().FieldByName("BountiesUnassignCuratorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_CancelProxy_1030(in any) *pbgear.CancelProxy_1030 {
	out := &pbgear.CancelProxy_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_CannotCreate_1030(in any) *pbgear.CannotCreate_1030 {
	out := &pbgear.CannotCreate_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_CannotCreateHold_1030(in any) *pbgear.CannotCreateHold_1030 {
	out := &pbgear.CannotCreateHold_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_CannotLookup_1030(in any) *pbgear.CannotLookup_1030 {
	out := &pbgear.CannotLookup_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ChildBounties_Address20_310(in any) *pbgear.ChildBounties_Address20_310 {
	out := &pbgear.ChildBounties_Address20_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_ChildBounties_Address32_310(in any) *pbgear.ChildBounties_Address32_310 {
	out := &pbgear.ChildBounties_Address32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_ChildBounties_Id_310(in any) *pbgear.ChildBounties_Id_310 {
	out := &pbgear.ChildBounties_Id_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_ChildBounties_Index_310(in any) *pbgear.ChildBounties_Index_310 {
	out := &pbgear.ChildBounties_Index_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_ChildBounties_TupleNull(w)
	out.Value0 = To_ChildBounties_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ChildBounties_Raw_310(in any) *pbgear.ChildBounties_Raw_310 {
	out := &pbgear.ChildBounties_Raw_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_ChildBounties_TupleNull_310(in any) *pbgear.ChildBounties_TupleNull_310 {
	out := &pbgear.ChildBounties_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ChildBounties_TupleNull_1030(in any) *pbgear.ChildBounties_TupleNull_1030 {
	out := &pbgear.ChildBounties_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ChildBountiesPallet_310(in any) *pbgear.ChildBountiesPallet_310 {
	out := &pbgear.ChildBountiesPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ChildBountiesPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBountiesPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBountiesPallet_310_CallAddChildBountyCall{
			CallAddChildBountyCall: To_ChildBounties_AddChildBountyCall(param),
		}
	case 1:
		return &pbgear.ChildBountiesPallet_310_CallProposeCuratorCall{
			CallProposeCuratorCall: To_ChildBounties_ProposeCuratorCall(param),
		}
	case 2:
		return &pbgear.ChildBountiesPallet_310_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_ChildBounties_AcceptCuratorCall(param),
		}
	case 3:
		return &pbgear.ChildBountiesPallet_310_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_ChildBounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.ChildBountiesPallet_310_CallAwardChildBountyCall{
			CallAwardChildBountyCall: To_ChildBounties_AwardChildBountyCall(param),
		}
	case 5:
		return &pbgear.ChildBountiesPallet_310_CallClaimChildBountyCall{
			CallClaimChildBountyCall: To_ChildBounties_ClaimChildBountyCall(param),
		}
	case 6:
		return &pbgear.ChildBountiesPallet_310_CallCloseChildBountyCall{
			CallCloseChildBountyCall: To_ChildBounties_CloseChildBountyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBountiesPallet_1030(in any) *pbgear.ChildBountiesPallet_1030 {
	out := &pbgear.ChildBountiesPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ChildBountiesPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBountiesPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBountiesPallet_1030_CallAddChildBountyCall{
			CallAddChildBountyCall: To_ChildBounties_AddChildBountyCall(param),
		}
	case 1:
		return &pbgear.ChildBountiesPallet_1030_CallProposeCuratorCall{
			CallProposeCuratorCall: To_ChildBounties_ProposeCuratorCall(param),
		}
	case 2:
		return &pbgear.ChildBountiesPallet_1030_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_ChildBounties_AcceptCuratorCall(param),
		}
	case 3:
		return &pbgear.ChildBountiesPallet_1030_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_ChildBounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.ChildBountiesPallet_1030_CallAwardChildBountyCall{
			CallAwardChildBountyCall: To_ChildBounties_AwardChildBountyCall(param),
		}
	case 5:
		return &pbgear.ChildBountiesPallet_1030_CallClaimChildBountyCall{
			CallClaimChildBountyCall: To_ChildBounties_ClaimChildBountyCall(param),
		}
	case 6:
		return &pbgear.ChildBountiesPallet_1030_CallCloseChildBountyCall{
			CallCloseChildBountyCall: To_ChildBounties_CloseChildBountyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBountiesPallet_1040(in any) *pbgear.ChildBountiesPallet_1040 {
	out := &pbgear.ChildBountiesPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ChildBountiesPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBountiesPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBountiesPallet_1040_CallAddChildBountyCall{
			CallAddChildBountyCall: To_ChildBounties_AddChildBountyCall(param),
		}
	case 1:
		return &pbgear.ChildBountiesPallet_1040_CallProposeCuratorCall{
			CallProposeCuratorCall: To_ChildBounties_ProposeCuratorCall(param),
		}
	case 2:
		return &pbgear.ChildBountiesPallet_1040_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_ChildBounties_AcceptCuratorCall(param),
		}
	case 3:
		return &pbgear.ChildBountiesPallet_1040_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_ChildBounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.ChildBountiesPallet_1040_CallAwardChildBountyCall{
			CallAwardChildBountyCall: To_ChildBounties_AwardChildBountyCall(param),
		}
	case 5:
		return &pbgear.ChildBountiesPallet_1040_CallClaimChildBountyCall{
			CallClaimChildBountyCall: To_ChildBounties_ClaimChildBountyCall(param),
		}
	case 6:
		return &pbgear.ChildBountiesPallet_1040_CallCloseChildBountyCall{
			CallCloseChildBountyCall: To_ChildBounties_CloseChildBountyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBountiesPallet_1400(in any) *pbgear.ChildBountiesPallet_1400 {
	out := &pbgear.ChildBountiesPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ChildBountiesPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBountiesPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBountiesPallet_1400_CallAddChildBountyCall{
			CallAddChildBountyCall: To_ChildBounties_AddChildBountyCall(param),
		}
	case 1:
		return &pbgear.ChildBountiesPallet_1400_CallProposeCuratorCall{
			CallProposeCuratorCall: To_ChildBounties_ProposeCuratorCall(param),
		}
	case 2:
		return &pbgear.ChildBountiesPallet_1400_CallAcceptCuratorCall{
			CallAcceptCuratorCall: To_ChildBounties_AcceptCuratorCall(param),
		}
	case 3:
		return &pbgear.ChildBountiesPallet_1400_CallUnassignCuratorCall{
			CallUnassignCuratorCall: To_ChildBounties_UnassignCuratorCall(param),
		}
	case 4:
		return &pbgear.ChildBountiesPallet_1400_CallAwardChildBountyCall{
			CallAwardChildBountyCall: To_ChildBounties_AwardChildBountyCall(param),
		}
	case 5:
		return &pbgear.ChildBountiesPallet_1400_CallClaimChildBountyCall{
			CallClaimChildBountyCall: To_ChildBounties_ClaimChildBountyCall(param),
		}
	case 6:
		return &pbgear.ChildBountiesPallet_1400_CallCloseChildBountyCall{
			CallCloseChildBountyCall: To_ChildBounties_CloseChildBountyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBounties_AcceptCuratorCall_310(in any) *pbgear.ChildBounties_AcceptCuratorCall_310 {
	out := &pbgear.ChildBounties_AcceptCuratorCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ParentBountyId
	out.ParentBountyId = To_uint32(v.ValueAt(0))
	// primitive field ChildBountyId
	out.ChildBountyId = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_ChildBounties_AcceptCuratorCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ChildBounties_AcceptCuratorCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ChildbountiesAcceptCuratorCall{}
	reflect.ValueOf(out).Elem().FieldByName("ChildbountiesAcceptCuratorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ChildBounties_AddChildBountyCall_310(in any) *pbgear.ChildBounties_AddChildBountyCall_310 {
	out := &pbgear.ChildBounties_AddChildBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ParentBountyId
	out.ParentBountyId = To_uint32(v.ValueAt(0))
	// primitive field Value
	out.Value = To_string(v.ValueAt(1))
	// primitive field Description
	out.Description = To_bytes(v.ValueAt(2))

	return out //from message
}
func To_ChildBounties_AddChildBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ChildBounties_AddChildBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ChildbountiesAddChildBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ChildbountiesAddChildBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ChildBounties_AwardChildBountyCall_310(in any) *pbgear.ChildBounties_AwardChildBountyCall_310 {
	out := &pbgear.ChildBounties_AwardChildBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ParentBountyId
	out.ParentBountyId = To_uint32(v.ValueAt(0))
	// primitive field ChildBountyId
	out.ChildBountyId = To_uint32(v.ValueAt(1))
	// oneOf field Beneficiary
	v2 := To_OneOf_ChildBounties_AwardChildBountyCall_310_beneficiary(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v2))

	return out //from message
}
func To_ChildBounties_AwardChildBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ChildBounties_AwardChildBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ChildbountiesAwardChildBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ChildbountiesAwardChildBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_ChildBounties_AwardChildBountyCall_310_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBounties_AwardChildBountyCall_310_BeneficiaryId{
			BeneficiaryId: To_ChildBounties_Id(param),
		}
	case 1:
		return &pbgear.ChildBounties_AwardChildBountyCall_310_BeneficiaryIndex{
			BeneficiaryIndex: To_ChildBounties_Index(param),
		}
	case 2:
		return &pbgear.ChildBounties_AwardChildBountyCall_310_BeneficiaryRaw{
			BeneficiaryRaw: To_ChildBounties_Raw(param),
		}
	case 3:
		return &pbgear.ChildBounties_AwardChildBountyCall_310_BeneficiaryAddress32{
			BeneficiaryAddress32: To_ChildBounties_Address32(param),
		}
	case 4:
		return &pbgear.ChildBounties_AwardChildBountyCall_310_BeneficiaryAddress20{
			BeneficiaryAddress20: To_ChildBounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBounties_Beneficiary_310(in any) *pbgear.ChildBounties_Beneficiary_310 {
	out := &pbgear.ChildBounties_Beneficiary_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Beneficiary
	v0 := To_OneOf_ChildBounties_Beneficiary_310_beneficiary(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBounties_Beneficiary_310_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBounties_Beneficiary_310_BeneficiaryId{
			BeneficiaryId: To_ChildBounties_Id(param),
		}
	case 1:
		return &pbgear.ChildBounties_Beneficiary_310_BeneficiaryIndex{
			BeneficiaryIndex: To_ChildBounties_Index(param),
		}
	case 2:
		return &pbgear.ChildBounties_Beneficiary_310_BeneficiaryRaw{
			BeneficiaryRaw: To_ChildBounties_Raw(param),
		}
	case 3:
		return &pbgear.ChildBounties_Beneficiary_310_BeneficiaryAddress32{
			BeneficiaryAddress32: To_ChildBounties_Address32(param),
		}
	case 4:
		return &pbgear.ChildBounties_Beneficiary_310_BeneficiaryAddress20{
			BeneficiaryAddress20: To_ChildBounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBounties_Beneficiary_1030(in any) *pbgear.ChildBounties_Beneficiary_1030 {
	out := &pbgear.ChildBounties_Beneficiary_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Beneficiary
	v0 := To_OneOf_ChildBounties_Beneficiary_1030_beneficiary(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBounties_Beneficiary_1030_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBounties_Beneficiary_1030_BeneficiaryId{
			BeneficiaryId: To_ChildBounties_Id(param),
		}
	case 1:
		return &pbgear.ChildBounties_Beneficiary_1030_BeneficiaryIndex{
			BeneficiaryIndex: To_ChildBounties_Index(param),
		}
	case 2:
		return &pbgear.ChildBounties_Beneficiary_1030_BeneficiaryRaw{
			BeneficiaryRaw: To_ChildBounties_Raw(param),
		}
	case 3:
		return &pbgear.ChildBounties_Beneficiary_1030_BeneficiaryAddress32{
			BeneficiaryAddress32: To_ChildBounties_Address32(param),
		}
	case 4:
		return &pbgear.ChildBounties_Beneficiary_1030_BeneficiaryAddress20{
			BeneficiaryAddress20: To_ChildBounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBounties_ClaimChildBountyCall_310(in any) *pbgear.ChildBounties_ClaimChildBountyCall_310 {
	out := &pbgear.ChildBounties_ClaimChildBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ParentBountyId
	out.ParentBountyId = To_uint32(v.ValueAt(0))
	// primitive field ChildBountyId
	out.ChildBountyId = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_ChildBounties_ClaimChildBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ChildBounties_ClaimChildBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ChildbountiesClaimChildBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ChildbountiesClaimChildBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ChildBounties_CloseChildBountyCall_310(in any) *pbgear.ChildBounties_CloseChildBountyCall_310 {
	out := &pbgear.ChildBounties_CloseChildBountyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ParentBountyId
	out.ParentBountyId = To_uint32(v.ValueAt(0))
	// primitive field ChildBountyId
	out.ChildBountyId = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_ChildBounties_CloseChildBountyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ChildBounties_CloseChildBountyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ChildbountiesCloseChildBountyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ChildbountiesCloseChildBountyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ChildBounties_Curator_310(in any) *pbgear.ChildBounties_Curator_310 {
	out := &pbgear.ChildBounties_Curator_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Curator
	v0 := To_OneOf_ChildBounties_Curator_310_curator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Curator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBounties_Curator_310_curator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBounties_Curator_310_CuratorId{
			CuratorId: To_ChildBounties_Id(param),
		}
	case 1:
		return &pbgear.ChildBounties_Curator_310_CuratorIndex{
			CuratorIndex: To_ChildBounties_Index(param),
		}
	case 2:
		return &pbgear.ChildBounties_Curator_310_CuratorRaw{
			CuratorRaw: To_ChildBounties_Raw(param),
		}
	case 3:
		return &pbgear.ChildBounties_Curator_310_CuratorAddress32{
			CuratorAddress32: To_ChildBounties_Address32(param),
		}
	case 4:
		return &pbgear.ChildBounties_Curator_310_CuratorAddress20{
			CuratorAddress20: To_ChildBounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBounties_Curator_1030(in any) *pbgear.ChildBounties_Curator_1030 {
	out := &pbgear.ChildBounties_Curator_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Curator
	v0 := To_OneOf_ChildBounties_Curator_1030_curator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Curator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ChildBounties_Curator_1030_curator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBounties_Curator_1030_CuratorId{
			CuratorId: To_ChildBounties_Id(param),
		}
	case 1:
		return &pbgear.ChildBounties_Curator_1030_CuratorIndex{
			CuratorIndex: To_ChildBounties_Index(param),
		}
	case 2:
		return &pbgear.ChildBounties_Curator_1030_CuratorRaw{
			CuratorRaw: To_ChildBounties_Raw(param),
		}
	case 3:
		return &pbgear.ChildBounties_Curator_1030_CuratorAddress32{
			CuratorAddress32: To_ChildBounties_Address32(param),
		}
	case 4:
		return &pbgear.ChildBounties_Curator_1030_CuratorAddress20{
			CuratorAddress20: To_ChildBounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBounties_ProposeCuratorCall_310(in any) *pbgear.ChildBounties_ProposeCuratorCall_310 {
	out := &pbgear.ChildBounties_ProposeCuratorCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ParentBountyId
	out.ParentBountyId = To_uint32(v.ValueAt(0))
	// primitive field ChildBountyId
	out.ChildBountyId = To_uint32(v.ValueAt(1))
	// oneOf field Curator
	v2 := To_OneOf_ChildBounties_ProposeCuratorCall_310_curator(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Curator").Set(reflect.ValueOf(v2))
	// primitive field Fee
	out.Fee = To_string(v.ValueAt(3))

	return out //from message
}
func To_ChildBounties_ProposeCuratorCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ChildBounties_ProposeCuratorCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ChildbountiesProposeCuratorCall{}
	reflect.ValueOf(out).Elem().FieldByName("ChildbountiesProposeCuratorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_ChildBounties_ProposeCuratorCall_310_curator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ChildBounties_ProposeCuratorCall_310_CuratorId{
			CuratorId: To_ChildBounties_Id(param),
		}
	case 1:
		return &pbgear.ChildBounties_ProposeCuratorCall_310_CuratorIndex{
			CuratorIndex: To_ChildBounties_Index(param),
		}
	case 2:
		return &pbgear.ChildBounties_ProposeCuratorCall_310_CuratorRaw{
			CuratorRaw: To_ChildBounties_Raw(param),
		}
	case 3:
		return &pbgear.ChildBounties_ProposeCuratorCall_310_CuratorAddress32{
			CuratorAddress32: To_ChildBounties_Address32(param),
		}
	case 4:
		return &pbgear.ChildBounties_ProposeCuratorCall_310_CuratorAddress20{
			CuratorAddress20: To_ChildBounties_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ChildBounties_UnassignCuratorCall_310(in any) *pbgear.ChildBounties_UnassignCuratorCall_310 {
	out := &pbgear.ChildBounties_UnassignCuratorCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ParentBountyId
	out.ParentBountyId = To_uint32(v.ValueAt(0))
	// primitive field ChildBountyId
	out.ChildBountyId = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_ChildBounties_UnassignCuratorCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ChildBounties_UnassignCuratorCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ChildbountiesUnassignCuratorCall{}
	reflect.ValueOf(out).Elem().FieldByName("ChildbountiesUnassignCuratorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_CodeNotExists_1030(in any) *pbgear.CodeNotExists_1030 {
	out := &pbgear.CodeNotExists_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConsumerRemaining_1030(in any) *pbgear.ConsumerRemaining_1030 {
	out := &pbgear.ConsumerRemaining_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_Address20_100(in any) *pbgear.ConvictionVoting_Address20_100 {
	out := &pbgear.ConvictionVoting_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_Address32_100(in any) *pbgear.ConvictionVoting_Address32_100 {
	out := &pbgear.ConvictionVoting_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_Id_100(in any) *pbgear.ConvictionVoting_Id_100 {
	out := &pbgear.ConvictionVoting_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_Index_100(in any) *pbgear.ConvictionVoting_Index_100 {
	out := &pbgear.ConvictionVoting_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_ConvictionVoting_TupleNull(w)
	out.Value0 = To_ConvictionVoting_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_Locked1X_100(in any) *pbgear.ConvictionVoting_Locked1X_100 {
	out := &pbgear.ConvictionVoting_Locked1X_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_Locked2X_100(in any) *pbgear.ConvictionVoting_Locked2X_100 {
	out := &pbgear.ConvictionVoting_Locked2X_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_Locked3X_100(in any) *pbgear.ConvictionVoting_Locked3X_100 {
	out := &pbgear.ConvictionVoting_Locked3X_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_Locked4X_100(in any) *pbgear.ConvictionVoting_Locked4X_100 {
	out := &pbgear.ConvictionVoting_Locked4X_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_Locked5X_100(in any) *pbgear.ConvictionVoting_Locked5X_100 {
	out := &pbgear.ConvictionVoting_Locked5X_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_Locked6X_100(in any) *pbgear.ConvictionVoting_Locked6X_100 {
	out := &pbgear.ConvictionVoting_Locked6X_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_None_100(in any) *pbgear.ConvictionVoting_None_100 {
	out := &pbgear.ConvictionVoting_None_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ConvictionVoting_Raw_100(in any) *pbgear.ConvictionVoting_Raw_100 {
	out := &pbgear.ConvictionVoting_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_Split_100(in any) *pbgear.ConvictionVoting_Split_100 {
	out := &pbgear.ConvictionVoting_Split_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Aye
	out.Aye = To_string(v.ValueAt(0))
	// primitive field Nay
	out.Nay = To_string(v.ValueAt(1))

	return out //from message
}

func To_ConvictionVoting_SplitAbstain_100(in any) *pbgear.ConvictionVoting_SplitAbstain_100 {
	out := &pbgear.ConvictionVoting_SplitAbstain_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Aye
	out.Aye = To_string(v.ValueAt(0))
	// primitive field Nay
	out.Nay = To_string(v.ValueAt(1))
	// primitive field Abstain
	out.Abstain = To_string(v.ValueAt(2))

	return out //from message
}

func To_ConvictionVoting_Standard_100(in any) *pbgear.ConvictionVoting_Standard_100 {
	out := &pbgear.ConvictionVoting_Standard_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Vote To_ConvictionVoting_PalletConvictionVotingVoteVote(w)
	out.Vote = To_ConvictionVoting_PalletConvictionVotingVoteVote(v.ValueAt(0))
	// primitive field Balance
	out.Balance = To_string(v.ValueAt(1))

	return out //from message
}

func To_ConvictionVoting_TupleNull_100(in any) *pbgear.ConvictionVoting_TupleNull_100 {
	out := &pbgear.ConvictionVoting_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_TupleNull_310(in any) *pbgear.ConvictionVoting_TupleNull_310 {
	out := &pbgear.ConvictionVoting_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_TupleNull_1030(in any) *pbgear.ConvictionVoting_TupleNull_1030 {
	out := &pbgear.ConvictionVoting_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVotingPallet_100(in any) *pbgear.ConvictionVotingPallet_100 {
	out := &pbgear.ConvictionVotingPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ConvictionVotingPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVotingPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVotingPallet_100_CallVoteCall{
			CallVoteCall: To_ConvictionVoting_VoteCall(param),
		}
	case 1:
		return &pbgear.ConvictionVotingPallet_100_CallDelegateCall{
			CallDelegateCall: To_ConvictionVoting_DelegateCall(param),
		}
	case 2:
		return &pbgear.ConvictionVotingPallet_100_CallUndelegateCall{
			CallUndelegateCall: To_ConvictionVoting_UndelegateCall(param),
		}
	case 3:
		return &pbgear.ConvictionVotingPallet_100_CallUnlockCall{
			CallUnlockCall: To_ConvictionVoting_UnlockCall(param),
		}
	case 4:
		return &pbgear.ConvictionVotingPallet_100_CallRemoveVoteCall{
			CallRemoveVoteCall: To_ConvictionVoting_RemoveVoteCall(param),
		}
	case 5:
		return &pbgear.ConvictionVotingPallet_100_CallRemoveOtherVoteCall{
			CallRemoveOtherVoteCall: To_ConvictionVoting_RemoveOtherVoteCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVotingPallet_310(in any) *pbgear.ConvictionVotingPallet_310 {
	out := &pbgear.ConvictionVotingPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ConvictionVotingPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVotingPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVotingPallet_310_CallVoteCall{
			CallVoteCall: To_ConvictionVoting_VoteCall(param),
		}
	case 1:
		return &pbgear.ConvictionVotingPallet_310_CallDelegateCall{
			CallDelegateCall: To_ConvictionVoting_DelegateCall(param),
		}
	case 2:
		return &pbgear.ConvictionVotingPallet_310_CallUndelegateCall{
			CallUndelegateCall: To_ConvictionVoting_UndelegateCall(param),
		}
	case 3:
		return &pbgear.ConvictionVotingPallet_310_CallUnlockCall{
			CallUnlockCall: To_ConvictionVoting_UnlockCall(param),
		}
	case 4:
		return &pbgear.ConvictionVotingPallet_310_CallRemoveVoteCall{
			CallRemoveVoteCall: To_ConvictionVoting_RemoveVoteCall(param),
		}
	case 5:
		return &pbgear.ConvictionVotingPallet_310_CallRemoveOtherVoteCall{
			CallRemoveOtherVoteCall: To_ConvictionVoting_RemoveOtherVoteCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVotingPallet_1030(in any) *pbgear.ConvictionVotingPallet_1030 {
	out := &pbgear.ConvictionVotingPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ConvictionVotingPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVotingPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVotingPallet_1030_CallVoteCall{
			CallVoteCall: To_ConvictionVoting_VoteCall(param),
		}
	case 1:
		return &pbgear.ConvictionVotingPallet_1030_CallDelegateCall{
			CallDelegateCall: To_ConvictionVoting_DelegateCall(param),
		}
	case 2:
		return &pbgear.ConvictionVotingPallet_1030_CallUndelegateCall{
			CallUndelegateCall: To_ConvictionVoting_UndelegateCall(param),
		}
	case 3:
		return &pbgear.ConvictionVotingPallet_1030_CallUnlockCall{
			CallUnlockCall: To_ConvictionVoting_UnlockCall(param),
		}
	case 4:
		return &pbgear.ConvictionVotingPallet_1030_CallRemoveVoteCall{
			CallRemoveVoteCall: To_ConvictionVoting_RemoveVoteCall(param),
		}
	case 5:
		return &pbgear.ConvictionVotingPallet_1030_CallRemoveOtherVoteCall{
			CallRemoveOtherVoteCall: To_ConvictionVoting_RemoveOtherVoteCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVotingPallet_1040(in any) *pbgear.ConvictionVotingPallet_1040 {
	out := &pbgear.ConvictionVotingPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ConvictionVotingPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVotingPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVotingPallet_1040_CallVoteCall{
			CallVoteCall: To_ConvictionVoting_VoteCall(param),
		}
	case 1:
		return &pbgear.ConvictionVotingPallet_1040_CallDelegateCall{
			CallDelegateCall: To_ConvictionVoting_DelegateCall(param),
		}
	case 2:
		return &pbgear.ConvictionVotingPallet_1040_CallUndelegateCall{
			CallUndelegateCall: To_ConvictionVoting_UndelegateCall(param),
		}
	case 3:
		return &pbgear.ConvictionVotingPallet_1040_CallUnlockCall{
			CallUnlockCall: To_ConvictionVoting_UnlockCall(param),
		}
	case 4:
		return &pbgear.ConvictionVotingPallet_1040_CallRemoveVoteCall{
			CallRemoveVoteCall: To_ConvictionVoting_RemoveVoteCall(param),
		}
	case 5:
		return &pbgear.ConvictionVotingPallet_1040_CallRemoveOtherVoteCall{
			CallRemoveOtherVoteCall: To_ConvictionVoting_RemoveOtherVoteCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVotingPallet_1410(in any) *pbgear.ConvictionVotingPallet_1410 {
	out := &pbgear.ConvictionVotingPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ConvictionVotingPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVotingPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVotingPallet_1410_CallVoteCall{
			CallVoteCall: To_ConvictionVoting_VoteCall(param),
		}
	case 1:
		return &pbgear.ConvictionVotingPallet_1410_CallDelegateCall{
			CallDelegateCall: To_ConvictionVoting_DelegateCall(param),
		}
	case 2:
		return &pbgear.ConvictionVotingPallet_1410_CallUndelegateCall{
			CallUndelegateCall: To_ConvictionVoting_UndelegateCall(param),
		}
	case 3:
		return &pbgear.ConvictionVotingPallet_1410_CallUnlockCall{
			CallUnlockCall: To_ConvictionVoting_UnlockCall(param),
		}
	case 4:
		return &pbgear.ConvictionVotingPallet_1410_CallRemoveVoteCall{
			CallRemoveVoteCall: To_ConvictionVoting_RemoveVoteCall(param),
		}
	case 5:
		return &pbgear.ConvictionVotingPallet_1410_CallRemoveOtherVoteCall{
			CallRemoveOtherVoteCall: To_ConvictionVoting_RemoveOtherVoteCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Conviction_100(in any) *pbgear.ConvictionVoting_Conviction_100 {
	out := &pbgear.ConvictionVoting_Conviction_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Conviction
	v0 := To_OneOf_ConvictionVoting_Conviction_100_conviction(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Conviction").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Conviction_100_conviction(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Conviction_100_ConvictionNone{
			ConvictionNone: To_ConvictionVoting_None(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Conviction_100_ConvictionLocked1X{
			ConvictionLocked1X: To_ConvictionVoting_Locked1X(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Conviction_100_ConvictionLocked2X{
			ConvictionLocked2X: To_ConvictionVoting_Locked2X(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Conviction_100_ConvictionLocked3X{
			ConvictionLocked3X: To_ConvictionVoting_Locked3X(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Conviction_100_ConvictionLocked4X{
			ConvictionLocked4X: To_ConvictionVoting_Locked4X(param),
		}
	case 5:
		return &pbgear.ConvictionVoting_Conviction_100_ConvictionLocked5X{
			ConvictionLocked5X: To_ConvictionVoting_Locked5X(param),
		}
	case 6:
		return &pbgear.ConvictionVoting_Conviction_100_ConvictionLocked6X{
			ConvictionLocked6X: To_ConvictionVoting_Locked6X(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Conviction_310(in any) *pbgear.ConvictionVoting_Conviction_310 {
	out := &pbgear.ConvictionVoting_Conviction_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Conviction
	v0 := To_OneOf_ConvictionVoting_Conviction_310_conviction(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Conviction").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Conviction_310_conviction(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Conviction_310_ConvictionNone{
			ConvictionNone: To_ConvictionVoting_None(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Conviction_310_ConvictionLocked1X{
			ConvictionLocked1X: To_ConvictionVoting_Locked1X(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Conviction_310_ConvictionLocked2X{
			ConvictionLocked2X: To_ConvictionVoting_Locked2X(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Conviction_310_ConvictionLocked3X{
			ConvictionLocked3X: To_ConvictionVoting_Locked3X(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Conviction_310_ConvictionLocked4X{
			ConvictionLocked4X: To_ConvictionVoting_Locked4X(param),
		}
	case 5:
		return &pbgear.ConvictionVoting_Conviction_310_ConvictionLocked5X{
			ConvictionLocked5X: To_ConvictionVoting_Locked5X(param),
		}
	case 6:
		return &pbgear.ConvictionVoting_Conviction_310_ConvictionLocked6X{
			ConvictionLocked6X: To_ConvictionVoting_Locked6X(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Conviction_1030(in any) *pbgear.ConvictionVoting_Conviction_1030 {
	out := &pbgear.ConvictionVoting_Conviction_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Conviction
	v0 := To_OneOf_ConvictionVoting_Conviction_1030_conviction(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Conviction").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Conviction_1030_conviction(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Conviction_1030_ConvictionNone{
			ConvictionNone: To_ConvictionVoting_None(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Conviction_1030_ConvictionLocked1X{
			ConvictionLocked1X: To_ConvictionVoting_Locked1X(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Conviction_1030_ConvictionLocked2X{
			ConvictionLocked2X: To_ConvictionVoting_Locked2X(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Conviction_1030_ConvictionLocked3X{
			ConvictionLocked3X: To_ConvictionVoting_Locked3X(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Conviction_1030_ConvictionLocked4X{
			ConvictionLocked4X: To_ConvictionVoting_Locked4X(param),
		}
	case 5:
		return &pbgear.ConvictionVoting_Conviction_1030_ConvictionLocked5X{
			ConvictionLocked5X: To_ConvictionVoting_Locked5X(param),
		}
	case 6:
		return &pbgear.ConvictionVoting_Conviction_1030_ConvictionLocked6X{
			ConvictionLocked6X: To_ConvictionVoting_Locked6X(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Conviction_1040(in any) *pbgear.ConvictionVoting_Conviction_1040 {
	out := &pbgear.ConvictionVoting_Conviction_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Conviction
	v0 := To_OneOf_ConvictionVoting_Conviction_1040_conviction(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Conviction").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Conviction_1040_conviction(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Conviction_1040_ConvictionNone{
			ConvictionNone: To_ConvictionVoting_None(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Conviction_1040_ConvictionLocked1X{
			ConvictionLocked1X: To_ConvictionVoting_Locked1X(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Conviction_1040_ConvictionLocked2X{
			ConvictionLocked2X: To_ConvictionVoting_Locked2X(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Conviction_1040_ConvictionLocked3X{
			ConvictionLocked3X: To_ConvictionVoting_Locked3X(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Conviction_1040_ConvictionLocked4X{
			ConvictionLocked4X: To_ConvictionVoting_Locked4X(param),
		}
	case 5:
		return &pbgear.ConvictionVoting_Conviction_1040_ConvictionLocked5X{
			ConvictionLocked5X: To_ConvictionVoting_Locked5X(param),
		}
	case 6:
		return &pbgear.ConvictionVoting_Conviction_1040_ConvictionLocked6X{
			ConvictionLocked6X: To_ConvictionVoting_Locked6X(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Conviction_1410(in any) *pbgear.ConvictionVoting_Conviction_1410 {
	out := &pbgear.ConvictionVoting_Conviction_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Conviction
	v0 := To_OneOf_ConvictionVoting_Conviction_1410_conviction(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Conviction").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Conviction_1410_conviction(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Conviction_1410_ConvictionNone{
			ConvictionNone: To_ConvictionVoting_None(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Conviction_1410_ConvictionLocked1X{
			ConvictionLocked1X: To_ConvictionVoting_Locked1X(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Conviction_1410_ConvictionLocked2X{
			ConvictionLocked2X: To_ConvictionVoting_Locked2X(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Conviction_1410_ConvictionLocked3X{
			ConvictionLocked3X: To_ConvictionVoting_Locked3X(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Conviction_1410_ConvictionLocked4X{
			ConvictionLocked4X: To_ConvictionVoting_Locked4X(param),
		}
	case 5:
		return &pbgear.ConvictionVoting_Conviction_1410_ConvictionLocked5X{
			ConvictionLocked5X: To_ConvictionVoting_Locked5X(param),
		}
	case 6:
		return &pbgear.ConvictionVoting_Conviction_1410_ConvictionLocked6X{
			ConvictionLocked6X: To_ConvictionVoting_Locked6X(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_DelegateCall_100(in any) *pbgear.ConvictionVoting_DelegateCall_100 {
	out := &pbgear.ConvictionVoting_DelegateCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Class
	out.Class = To_uint32(v.ValueAt(0))
	// oneOf field To
	v1 := To_OneOf_ConvictionVoting_DelegateCall_100_to(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v1))
	// oneOf field Conviction
	v2 := To_OneOf_ConvictionVoting_DelegateCall_100_conviction(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Conviction").Set(reflect.ValueOf(v2))
	// primitive field Balance
	out.Balance = To_string(v.ValueAt(3))

	return out //from message
}
func To_ConvictionVoting_DelegateCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ConvictionVoting_DelegateCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ConvictionvotingDelegateCall{}
	reflect.ValueOf(out).Elem().FieldByName("ConvictionvotingDelegateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_ConvictionVoting_DelegateCall_100_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_DelegateCall_100_ToId{
			ToId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_DelegateCall_100_ToIndex{
			ToIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_DelegateCall_100_ToRaw{
			ToRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_DelegateCall_100_ToAddress32{
			ToAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_DelegateCall_100_ToAddress20{
			ToAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_ConvictionVoting_DelegateCall_100_conviction(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_DelegateCall_100_ConvictionNone{
			ConvictionNone: To_ConvictionVoting_None(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_DelegateCall_100_ConvictionLocked1X{
			ConvictionLocked1X: To_ConvictionVoting_Locked1X(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_DelegateCall_100_ConvictionLocked2X{
			ConvictionLocked2X: To_ConvictionVoting_Locked2X(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_DelegateCall_100_ConvictionLocked3X{
			ConvictionLocked3X: To_ConvictionVoting_Locked3X(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_DelegateCall_100_ConvictionLocked4X{
			ConvictionLocked4X: To_ConvictionVoting_Locked4X(param),
		}
	case 5:
		return &pbgear.ConvictionVoting_DelegateCall_100_ConvictionLocked5X{
			ConvictionLocked5X: To_ConvictionVoting_Locked5X(param),
		}
	case 6:
		return &pbgear.ConvictionVoting_DelegateCall_100_ConvictionLocked6X{
			ConvictionLocked6X: To_ConvictionVoting_Locked6X(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_RemoveOtherVoteCall_100(in any) *pbgear.ConvictionVoting_RemoveOtherVoteCall_100 {
	out := &pbgear.ConvictionVoting_RemoveOtherVoteCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_ConvictionVoting_RemoveOtherVoteCall_100_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))
	// primitive field Class
	out.Class = To_uint32(v.ValueAt(1))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(2))

	return out //from message
}
func To_ConvictionVoting_RemoveOtherVoteCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ConvictionVoting_RemoveOtherVoteCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ConvictionvotingRemoveOtherVoteCall{}
	reflect.ValueOf(out).Elem().FieldByName("ConvictionvotingRemoveOtherVoteCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_ConvictionVoting_RemoveOtherVoteCall_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_RemoveOtherVoteCall_100_TargetId{
			TargetId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_RemoveOtherVoteCall_100_TargetIndex{
			TargetIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_RemoveOtherVoteCall_100_TargetRaw{
			TargetRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_RemoveOtherVoteCall_100_TargetAddress32{
			TargetAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_RemoveOtherVoteCall_100_TargetAddress20{
			TargetAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_RemoveVoteCall_100(in any) *pbgear.ConvictionVoting_RemoveVoteCall_100 {
	out := &pbgear.ConvictionVoting_RemoveVoteCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Class
	if v.HasValue() {
		out.Class = To_Optional_uint32(v.ValueAt(0))
	}
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_ConvictionVoting_RemoveVoteCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ConvictionVoting_RemoveVoteCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ConvictionvotingRemoveVoteCall{}
	reflect.ValueOf(out).Elem().FieldByName("ConvictionvotingRemoveVoteCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ConvictionVoting_Target_100(in any) *pbgear.ConvictionVoting_Target_100 {
	out := &pbgear.ConvictionVoting_Target_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_ConvictionVoting_Target_100_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Target_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Target_100_TargetId{
			TargetId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Target_100_TargetIndex{
			TargetIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Target_100_TargetRaw{
			TargetRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Target_100_TargetAddress32{
			TargetAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Target_100_TargetAddress20{
			TargetAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Target_310(in any) *pbgear.ConvictionVoting_Target_310 {
	out := &pbgear.ConvictionVoting_Target_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_ConvictionVoting_Target_310_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Target_310_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Target_310_TargetId{
			TargetId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Target_310_TargetIndex{
			TargetIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Target_310_TargetRaw{
			TargetRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Target_310_TargetAddress32{
			TargetAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Target_310_TargetAddress20{
			TargetAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Target_1030(in any) *pbgear.ConvictionVoting_Target_1030 {
	out := &pbgear.ConvictionVoting_Target_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_ConvictionVoting_Target_1030_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Target_1030_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Target_1030_TargetId{
			TargetId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Target_1030_TargetIndex{
			TargetIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Target_1030_TargetRaw{
			TargetRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_Target_1030_TargetAddress32{
			TargetAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_Target_1030_TargetAddress20{
			TargetAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_To_100(in any) *pbgear.ConvictionVoting_To_100 {
	out := &pbgear.ConvictionVoting_To_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_ConvictionVoting_To_100_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_To_100_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_To_100_ToId{
			ToId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_To_100_ToIndex{
			ToIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_To_100_ToRaw{
			ToRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_To_100_ToAddress32{
			ToAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_To_100_ToAddress20{
			ToAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_To_310(in any) *pbgear.ConvictionVoting_To_310 {
	out := &pbgear.ConvictionVoting_To_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_ConvictionVoting_To_310_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_To_310_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_To_310_ToId{
			ToId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_To_310_ToIndex{
			ToIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_To_310_ToRaw{
			ToRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_To_310_ToAddress32{
			ToAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_To_310_ToAddress20{
			ToAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_To_1030(in any) *pbgear.ConvictionVoting_To_1030 {
	out := &pbgear.ConvictionVoting_To_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_ConvictionVoting_To_1030_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_To_1030_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_To_1030_ToId{
			ToId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_To_1030_ToIndex{
			ToIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_To_1030_ToRaw{
			ToRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_To_1030_ToAddress32{
			ToAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_To_1030_ToAddress20{
			ToAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_UndelegateCall_100(in any) *pbgear.ConvictionVoting_UndelegateCall_100 {
	out := &pbgear.ConvictionVoting_UndelegateCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Class
	out.Class = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_ConvictionVoting_UndelegateCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ConvictionVoting_UndelegateCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ConvictionvotingUndelegateCall{}
	reflect.ValueOf(out).Elem().FieldByName("ConvictionvotingUndelegateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ConvictionVoting_UnlockCall_100(in any) *pbgear.ConvictionVoting_UnlockCall_100 {
	out := &pbgear.ConvictionVoting_UnlockCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Class
	out.Class = To_uint32(v.ValueAt(0))
	// oneOf field Target
	v1 := To_OneOf_ConvictionVoting_UnlockCall_100_target(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_ConvictionVoting_UnlockCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ConvictionVoting_UnlockCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ConvictionvotingUnlockCall{}
	reflect.ValueOf(out).Elem().FieldByName("ConvictionvotingUnlockCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_ConvictionVoting_UnlockCall_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_UnlockCall_100_TargetId{
			TargetId: To_ConvictionVoting_Id(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_UnlockCall_100_TargetIndex{
			TargetIndex: To_ConvictionVoting_Index(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_UnlockCall_100_TargetRaw{
			TargetRaw: To_ConvictionVoting_Raw(param),
		}
	case 3:
		return &pbgear.ConvictionVoting_UnlockCall_100_TargetAddress32{
			TargetAddress32: To_ConvictionVoting_Address32(param),
		}
	case 4:
		return &pbgear.ConvictionVoting_UnlockCall_100_TargetAddress20{
			TargetAddress20: To_ConvictionVoting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Vote_100(in any) *pbgear.ConvictionVoting_Vote_100 {
	out := &pbgear.ConvictionVoting_Vote_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_ConvictionVoting_Vote_100_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Vote_100_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Vote_100_VoteStandard{
			VoteStandard: To_ConvictionVoting_Standard(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Vote_100_VoteSplit{
			VoteSplit: To_ConvictionVoting_Split(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Vote_100_VoteSplitAbstain{
			VoteSplitAbstain: To_ConvictionVoting_SplitAbstain(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Vote_310(in any) *pbgear.ConvictionVoting_Vote_310 {
	out := &pbgear.ConvictionVoting_Vote_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_ConvictionVoting_Vote_310_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Vote_310_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Vote_310_VoteStandard{
			VoteStandard: To_ConvictionVoting_Standard(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Vote_310_VoteSplit{
			VoteSplit: To_ConvictionVoting_Split(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Vote_310_VoteSplitAbstain{
			VoteSplitAbstain: To_ConvictionVoting_SplitAbstain(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Vote_1030(in any) *pbgear.ConvictionVoting_Vote_1030 {
	out := &pbgear.ConvictionVoting_Vote_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_ConvictionVoting_Vote_1030_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Vote_1030_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Vote_1030_VoteStandard{
			VoteStandard: To_ConvictionVoting_Standard(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Vote_1030_VoteSplit{
			VoteSplit: To_ConvictionVoting_Split(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Vote_1030_VoteSplitAbstain{
			VoteSplitAbstain: To_ConvictionVoting_SplitAbstain(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Vote_1040(in any) *pbgear.ConvictionVoting_Vote_1040 {
	out := &pbgear.ConvictionVoting_Vote_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_ConvictionVoting_Vote_1040_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Vote_1040_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Vote_1040_VoteStandard{
			VoteStandard: To_ConvictionVoting_Standard(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Vote_1040_VoteSplit{
			VoteSplit: To_ConvictionVoting_Split(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Vote_1040_VoteSplitAbstain{
			VoteSplitAbstain: To_ConvictionVoting_SplitAbstain(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_Vote_1410(in any) *pbgear.ConvictionVoting_Vote_1410 {
	out := &pbgear.ConvictionVoting_Vote_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_ConvictionVoting_Vote_1410_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ConvictionVoting_Vote_1410_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_Vote_1410_VoteStandard{
			VoteStandard: To_ConvictionVoting_Standard(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_Vote_1410_VoteSplit{
			VoteSplit: To_ConvictionVoting_Split(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_Vote_1410_VoteSplitAbstain{
			VoteSplitAbstain: To_ConvictionVoting_SplitAbstain(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_VoteCall_100(in any) *pbgear.ConvictionVoting_VoteCall_100 {
	out := &pbgear.ConvictionVoting_VoteCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PollIndex
	out.PollIndex = To_uint32(v.ValueAt(0))
	// oneOf field Vote
	v1 := To_OneOf_ConvictionVoting_VoteCall_100_vote(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_ConvictionVoting_VoteCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ConvictionVoting_VoteCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ConvictionvotingVoteCall{}
	reflect.ValueOf(out).Elem().FieldByName("ConvictionvotingVoteCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_ConvictionVoting_VoteCall_100_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ConvictionVoting_VoteCall_100_VoteStandard{
			VoteStandard: To_ConvictionVoting_Standard(param),
		}
	case 1:
		return &pbgear.ConvictionVoting_VoteCall_100_VoteSplit{
			VoteSplit: To_ConvictionVoting_Split(param),
		}
	case 2:
		return &pbgear.ConvictionVoting_VoteCall_100_VoteSplitAbstain{
			VoteSplitAbstain: To_ConvictionVoting_SplitAbstain(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Corruption_1030(in any) *pbgear.Corruption_1030 {
	out := &pbgear.Corruption_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_DivisionByZero_1030(in any) *pbgear.DivisionByZero_1030 {
	out := &pbgear.DivisionByZero_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_310(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Value1 To_SpNposElectionsSupport(w)
	out.Value1 = To_SpNposElectionsSupport(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Value1 To_SpNposElectionsSupport(w)
	out.Value1 = To_SpNposElectionsSupport(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Value1 To_SpNposElectionsSupport(w)
	out.Value1 = To_SpNposElectionsSupport(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Value1 To_SpNposElectionsSupport(w)
	out.Value1 = To_SpNposElectionsSupport(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport_1410{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field Value1 To_SpNposElectionsSupport(w)
	out.Value1 = To_SpNposElectionsSupport(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_310(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_string(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_string(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_string(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_string(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String_1410{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_string(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_310_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_310_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1030_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1030_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1040_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1040_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1400_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1400_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// repeated field Value1
	out.Value1 = To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1410_value1(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32_1410_value1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16(v.ValueAt(1))
	// primitive field Value2
	out.Value2 = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_SpArithmeticPerThingsPerU16(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_SpArithmeticPerThingsPerU16(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_SpArithmeticPerThingsPerU16(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_SpArithmeticPerThingsPerU16(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32SpArithmeticPerThingsPerU16_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// field Value1 To_SpArithmeticPerThingsPerU16(w)
	out.Value1 = To_SpArithmeticPerThingsPerU16(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32Uint32_310(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_310 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32Uint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32Uint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32Uint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleUint32Uint32_1410(in any) *pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1410 {
	out := &pbgear.ElectionProviderMultiPhase_TupleUint32Uint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhasePallet_310(in any) *pbgear.ElectionProviderMultiPhasePallet_310 {
	out := &pbgear.ElectionProviderMultiPhasePallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ElectionProviderMultiPhasePallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhasePallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhasePallet_310_CallSubmitUnsignedCall{
			CallSubmitUnsignedCall: To_ElectionProviderMultiPhase_SubmitUnsignedCall(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhasePallet_310_CallSetMinimumUntrustedScoreCall{
			CallSetMinimumUntrustedScoreCall: To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhasePallet_310_CallSetEmergencyElectionResultCall{
			CallSetEmergencyElectionResultCall: To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhasePallet_310_CallSubmitCall{
			CallSubmitCall: To_ElectionProviderMultiPhase_SubmitCall(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhasePallet_310_CallGovernanceFallbackCall{
			CallGovernanceFallbackCall: To_ElectionProviderMultiPhase_GovernanceFallbackCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhasePallet_1030(in any) *pbgear.ElectionProviderMultiPhasePallet_1030 {
	out := &pbgear.ElectionProviderMultiPhasePallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ElectionProviderMultiPhasePallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhasePallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhasePallet_1030_CallSubmitUnsignedCall{
			CallSubmitUnsignedCall: To_ElectionProviderMultiPhase_SubmitUnsignedCall(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhasePallet_1030_CallSetMinimumUntrustedScoreCall{
			CallSetMinimumUntrustedScoreCall: To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhasePallet_1030_CallSetEmergencyElectionResultCall{
			CallSetEmergencyElectionResultCall: To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhasePallet_1030_CallSubmitCall{
			CallSubmitCall: To_ElectionProviderMultiPhase_SubmitCall(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhasePallet_1030_CallGovernanceFallbackCall{
			CallGovernanceFallbackCall: To_ElectionProviderMultiPhase_GovernanceFallbackCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhasePallet_1040(in any) *pbgear.ElectionProviderMultiPhasePallet_1040 {
	out := &pbgear.ElectionProviderMultiPhasePallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ElectionProviderMultiPhasePallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhasePallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhasePallet_1040_CallSubmitUnsignedCall{
			CallSubmitUnsignedCall: To_ElectionProviderMultiPhase_SubmitUnsignedCall(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhasePallet_1040_CallSetMinimumUntrustedScoreCall{
			CallSetMinimumUntrustedScoreCall: To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhasePallet_1040_CallSetEmergencyElectionResultCall{
			CallSetEmergencyElectionResultCall: To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhasePallet_1040_CallSubmitCall{
			CallSubmitCall: To_ElectionProviderMultiPhase_SubmitCall(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhasePallet_1040_CallGovernanceFallbackCall{
			CallGovernanceFallbackCall: To_ElectionProviderMultiPhase_GovernanceFallbackCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhasePallet_1400(in any) *pbgear.ElectionProviderMultiPhasePallet_1400 {
	out := &pbgear.ElectionProviderMultiPhasePallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ElectionProviderMultiPhasePallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhasePallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhasePallet_1400_CallSubmitUnsignedCall{
			CallSubmitUnsignedCall: To_ElectionProviderMultiPhase_SubmitUnsignedCall(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhasePallet_1400_CallSetMinimumUntrustedScoreCall{
			CallSetMinimumUntrustedScoreCall: To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhasePallet_1400_CallSetEmergencyElectionResultCall{
			CallSetEmergencyElectionResultCall: To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhasePallet_1400_CallSubmitCall{
			CallSubmitCall: To_ElectionProviderMultiPhase_SubmitCall(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhasePallet_1400_CallGovernanceFallbackCall{
			CallGovernanceFallbackCall: To_ElectionProviderMultiPhase_GovernanceFallbackCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhasePallet_1410(in any) *pbgear.ElectionProviderMultiPhasePallet_1410 {
	out := &pbgear.ElectionProviderMultiPhasePallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ElectionProviderMultiPhasePallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhasePallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhasePallet_1410_CallSubmitUnsignedCall{
			CallSubmitUnsignedCall: To_ElectionProviderMultiPhase_SubmitUnsignedCall(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhasePallet_1410_CallSetMinimumUntrustedScoreCall{
			CallSetMinimumUntrustedScoreCall: To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhasePallet_1410_CallSetEmergencyElectionResultCall{
			CallSetEmergencyElectionResultCall: To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhasePallet_1410_CallSubmitCall{
			CallSubmitCall: To_ElectionProviderMultiPhase_SubmitCall(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhasePallet_1410_CallGovernanceFallbackCall{
			CallGovernanceFallbackCall: To_ElectionProviderMultiPhase_GovernanceFallbackCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_GovernanceFallbackCall_310(in any) *pbgear.ElectionProviderMultiPhase_GovernanceFallbackCall_310 {
	out := &pbgear.ElectionProviderMultiPhase_GovernanceFallbackCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MaybeMaxVoters
	if v.HasValue() {
		out.MaybeMaxVoters = To_Optional_uint32(v.ValueAt(0))
	}
	// primitive field MaybeMaxTargets
	if v.HasValue() {
		out.MaybeMaxTargets = To_Optional_uint32(v.ValueAt(1))
	}

	return out //from message
}
func To_ElectionProviderMultiPhase_GovernanceFallbackCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ElectionProviderMultiPhase_GovernanceFallbackCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ElectionprovidermultiphaseGovernanceFallbackCall{}
	reflect.ValueOf(out).Elem().FieldByName("ElectionprovidermultiphaseGovernanceFallbackCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310(in any) *pbgear.ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310 {
	out := &pbgear.ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Supports
	out.Supports = To_Repeated_ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310_supports(v.ValueAt(0))

	return out //from message
}
func To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ElectionprovidermultiphaseSetEmergencyElectionResultCall{}
	reflect.ValueOf(out).Elem().FieldByName("ElectionprovidermultiphaseSetEmergencyElectionResultCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310_supports(in any) []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32SpNposElectionsSupport(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310(in any) *pbgear.ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310 {
	out := &pbgear.ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// optional field MaybeNextScore true
	if v.HasValue() {
		out.MaybeNextScore = To_Optional_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310_maybe_next_score(v.ValueAt(0))
	}

	return out //from message
}
func To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ElectionprovidermultiphaseSetMinimumUntrustedScoreCall{}
	reflect.ValueOf(out).Elem().FieldByName("ElectionprovidermultiphaseSetMinimumUntrustedScoreCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310_maybe_next_score(in any) *pbgear.SpNposElectionsElectionScore {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_ElectionProviderMultiPhase_SubmitCall_310(in any) *pbgear.ElectionProviderMultiPhase_SubmitCall_310 {
	out := &pbgear.ElectionProviderMultiPhase_SubmitCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// field RawSolution To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution(w)
	out.RawSolution = To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution(v.ValueAt(0))

	return out //from message
}
func To_ElectionProviderMultiPhase_SubmitCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ElectionProviderMultiPhase_SubmitCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ElectionprovidermultiphaseSubmitCall{}
	reflect.ValueOf(out).Elem().FieldByName("ElectionprovidermultiphaseSubmitCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ElectionProviderMultiPhase_SubmitUnsignedCall_310(in any) *pbgear.ElectionProviderMultiPhase_SubmitUnsignedCall_310 {
	out := &pbgear.ElectionProviderMultiPhase_SubmitUnsignedCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// field RawSolution To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution(w)
	out.RawSolution = To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution(v.ValueAt(0))
	// field Witness To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize(w)
	out.Witness = To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize(v.ValueAt(1))

	return out //from message
}
func To_ElectionProviderMultiPhase_SubmitUnsignedCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ElectionProviderMultiPhase_SubmitUnsignedCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ElectionprovidermultiphaseSubmitUnsignedCall{}
	reflect.ValueOf(out).Elem().FieldByName("ElectionprovidermultiphaseSubmitUnsignedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Err_1030(in any) *pbgear.Err_1030 {
	out := &pbgear.Err_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Err_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Err_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Err_1030_Value0Other{
			Value0Other: To_Other(param),
		}
	case 1:
		return &pbgear.Err_1030_Value0CannotLookup{
			Value0CannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.Err_1030_Value0BadOrigin{
			Value0BadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.Err_1030_Value0Module{
			Value0Module: To_Module(param),
		}
	case 4:
		return &pbgear.Err_1030_Value0ConsumerRemaining{
			Value0ConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.Err_1030_Value0NoProviders{
			Value0NoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.Err_1030_Value0TooManyConsumers{
			Value0TooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.Err_1030_Value0Token{
			Value0Token: To_Token(param),
		}
	case 8:
		return &pbgear.Err_1030_Value0Arithmetic{
			Value0Arithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.Err_1030_Value0Transactional{
			Value0Transactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.Err_1030_Value0Exhausted{
			Value0Exhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.Err_1030_Value0Corruption{
			Value0Corruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.Err_1030_Value0Unavailable{
			Value0Unavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.Err_1030_Value0RootNotAllowed{
			Value0RootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Error_1030(in any) *pbgear.Error_1030 {
	out := &pbgear.Error_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Error_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Error_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Error_1030_Value0Execution{
			Value0Execution: To_Execution(param),
		}
	case 1:
		return &pbgear.Error_1030_Value0FailedToCreateProgram{
			Value0FailedToCreateProgram: To_FailedToCreateProgram(param),
		}
	case 2:
		return &pbgear.Error_1030_Value0InactiveProgram{
			Value0InactiveProgram: To_InactiveProgram(param),
		}
	case 3:
		return &pbgear.Error_1030_Value0RemovedFromWaitlist{
			Value0RemovedFromWaitlist: To_RemovedFromWaitlist(param),
		}
	case 255:
		return &pbgear.Error_1030_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Error_1110(in any) *pbgear.Error_1110 {
	out := &pbgear.Error_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Error_1110_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Error_1110_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Error_1110_Value0Execution{
			Value0Execution: To_Execution(param),
		}
	case 1:
		return &pbgear.Error_1110_Value0FailedToCreateProgram{
			Value0FailedToCreateProgram: To_FailedToCreateProgram(param),
		}
	case 2:
		return &pbgear.Error_1110_Value0InactiveProgram{
			Value0InactiveProgram: To_InactiveProgram(param),
		}
	case 3:
		return &pbgear.Error_1110_Value0RemovedFromWaitlist{
			Value0RemovedFromWaitlist: To_RemovedFromWaitlist(param),
		}
	case 4:
		return &pbgear.Error_1110_Value0ReinstrumentationFailure{
			Value0ReinstrumentationFailure: To_ReinstrumentationFailure(param),
		}
	case 255:
		return &pbgear.Error_1110_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Error_1400(in any) *pbgear.Error_1400 {
	out := &pbgear.Error_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Error_1400_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Error_1400_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Error_1400_Value0Execution{
			Value0Execution: To_Execution(param),
		}
	case 1:
		return &pbgear.Error_1400_Value0FailedToCreateProgram{
			Value0FailedToCreateProgram: To_FailedToCreateProgram(param),
		}
	case 2:
		return &pbgear.Error_1400_Value0InactiveActor{
			Value0InactiveActor: To_InactiveActor(param),
		}
	case 3:
		return &pbgear.Error_1400_Value0RemovedFromWaitlist{
			Value0RemovedFromWaitlist: To_RemovedFromWaitlist(param),
		}
	case 4:
		return &pbgear.Error_1400_Value0ReinstrumentationFailure{
			Value0ReinstrumentationFailure: To_ReinstrumentationFailure(param),
		}
	case 255:
		return &pbgear.Error_1400_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Execution_1030(in any) *pbgear.Execution_1030 {
	out := &pbgear.Execution_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Execution_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Execution_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Execution_1030_Value0RanOutOfGas{
			Value0RanOutOfGas: To_RanOutOfGas(param),
		}
	case 1:
		return &pbgear.Execution_1030_Value0MemoryOverflow{
			Value0MemoryOverflow: To_MemoryOverflow(param),
		}
	case 2:
		return &pbgear.Execution_1030_Value0BackendError{
			Value0BackendError: To_BackendError(param),
		}
	case 3:
		return &pbgear.Execution_1030_Value0UserspacePanic{
			Value0UserspacePanic: To_UserspacePanic(param),
		}
	case 4:
		return &pbgear.Execution_1030_Value0UnreachableInstruction{
			Value0UnreachableInstruction: To_UnreachableInstruction(param),
		}
	case 255:
		return &pbgear.Execution_1030_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Execution_1110(in any) *pbgear.Execution_1110 {
	out := &pbgear.Execution_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Execution_1110_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Execution_1110_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Execution_1110_Value0RanOutOfGas{
			Value0RanOutOfGas: To_RanOutOfGas(param),
		}
	case 1:
		return &pbgear.Execution_1110_Value0MemoryOverflow{
			Value0MemoryOverflow: To_MemoryOverflow(param),
		}
	case 2:
		return &pbgear.Execution_1110_Value0BackendError{
			Value0BackendError: To_BackendError(param),
		}
	case 3:
		return &pbgear.Execution_1110_Value0UserspacePanic{
			Value0UserspacePanic: To_UserspacePanic(param),
		}
	case 4:
		return &pbgear.Execution_1110_Value0UnreachableInstruction{
			Value0UnreachableInstruction: To_UnreachableInstruction(param),
		}
	case 5:
		return &pbgear.Execution_1110_Value0StackLimitExceeded{
			Value0StackLimitExceeded: To_StackLimitExceeded(param),
		}
	case 255:
		return &pbgear.Execution_1110_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Exhausted_1030(in any) *pbgear.Exhausted_1030 {
	out := &pbgear.Exhausted_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ExpirationChanged_1030(in any) *pbgear.ExpirationChanged_1030 {
	out := &pbgear.ExpirationChanged_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Expiration
	out.Expiration = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Failed_1030(in any) *pbgear.Failed_1030 {
	out := &pbgear.Failed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FailedToCreateProgram_1030(in any) *pbgear.FailedToCreateProgram_1030 {
	out := &pbgear.FailedToCreateProgram_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_FailedToCreateProgram_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FailedToCreateProgram_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FailedToCreateProgram_1030_Value0CodeNotExists{
			Value0CodeNotExists: To_CodeNotExists(param),
		}
	case 255:
		return &pbgear.FailedToCreateProgram_1030_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Fellows_100(in any) *pbgear.Fellows_100 {
	out := &pbgear.Fellows_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship1Dan_130(in any) *pbgear.Fellowship1Dan_130 {
	out := &pbgear.Fellowship1Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship2Dan_130(in any) *pbgear.Fellowship2Dan_130 {
	out := &pbgear.Fellowship2Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship3Dan_130(in any) *pbgear.Fellowship3Dan_130 {
	out := &pbgear.Fellowship3Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship4Dan_130(in any) *pbgear.Fellowship4Dan_130 {
	out := &pbgear.Fellowship4Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship5Dan_130(in any) *pbgear.Fellowship5Dan_130 {
	out := &pbgear.Fellowship5Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship6Dan_130(in any) *pbgear.Fellowship6Dan_130 {
	out := &pbgear.Fellowship6Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship7Dan_130(in any) *pbgear.Fellowship7Dan_130 {
	out := &pbgear.Fellowship7Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship8Dan_130(in any) *pbgear.Fellowship8Dan_130 {
	out := &pbgear.Fellowship8Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Fellowship9Dan_130(in any) *pbgear.Fellowship9Dan_130 {
	out := &pbgear.Fellowship9Dan_130{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FellowshipAdmin_100(in any) *pbgear.FellowshipAdmin_100 {
	out := &pbgear.FellowshipAdmin_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FellowshipCollective_Address20_100(in any) *pbgear.FellowshipCollective_Address20_100 {
	out := &pbgear.FellowshipCollective_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollective_Address32_100(in any) *pbgear.FellowshipCollective_Address32_100 {
	out := &pbgear.FellowshipCollective_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollective_Id_100(in any) *pbgear.FellowshipCollective_Id_100 {
	out := &pbgear.FellowshipCollective_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollective_Index_100(in any) *pbgear.FellowshipCollective_Index_100 {
	out := &pbgear.FellowshipCollective_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_FellowshipCollective_TupleNull(w)
	out.Value0 = To_FellowshipCollective_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollective_Raw_100(in any) *pbgear.FellowshipCollective_Raw_100 {
	out := &pbgear.FellowshipCollective_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollective_TupleNull_100(in any) *pbgear.FellowshipCollective_TupleNull_100 {
	out := &pbgear.FellowshipCollective_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollective_TupleNull_310(in any) *pbgear.FellowshipCollective_TupleNull_310 {
	out := &pbgear.FellowshipCollective_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollective_TupleNull_1030(in any) *pbgear.FellowshipCollective_TupleNull_1030 {
	out := &pbgear.FellowshipCollective_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_FellowshipCollectivePallet_100(in any) *pbgear.FellowshipCollectivePallet_100 {
	out := &pbgear.FellowshipCollectivePallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipCollectivePallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollectivePallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollectivePallet_100_CallAddMemberCall{
			CallAddMemberCall: To_FellowshipCollective_AddMemberCall(param),
		}
	case 1:
		return &pbgear.FellowshipCollectivePallet_100_CallPromoteMemberCall{
			CallPromoteMemberCall: To_FellowshipCollective_PromoteMemberCall(param),
		}
	case 2:
		return &pbgear.FellowshipCollectivePallet_100_CallDemoteMemberCall{
			CallDemoteMemberCall: To_FellowshipCollective_DemoteMemberCall(param),
		}
	case 3:
		return &pbgear.FellowshipCollectivePallet_100_CallRemoveMemberCall{
			CallRemoveMemberCall: To_FellowshipCollective_RemoveMemberCall(param),
		}
	case 4:
		return &pbgear.FellowshipCollectivePallet_100_CallVoteCall{
			CallVoteCall: To_FellowshipCollective_VoteCall(param),
		}
	case 5:
		return &pbgear.FellowshipCollectivePallet_100_CallCleanupPollCall{
			CallCleanupPollCall: To_FellowshipCollective_CleanupPollCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollectivePallet_140(in any) *pbgear.FellowshipCollectivePallet_140 {
	out := &pbgear.FellowshipCollectivePallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipCollectivePallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollectivePallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollectivePallet_140_CallAddMemberCall{
			CallAddMemberCall: To_FellowshipCollective_AddMemberCall(param),
		}
	case 1:
		return &pbgear.FellowshipCollectivePallet_140_CallPromoteMemberCall{
			CallPromoteMemberCall: To_FellowshipCollective_PromoteMemberCall(param),
		}
	case 2:
		return &pbgear.FellowshipCollectivePallet_140_CallDemoteMemberCall{
			CallDemoteMemberCall: To_FellowshipCollective_DemoteMemberCall(param),
		}
	case 3:
		return &pbgear.FellowshipCollectivePallet_140_CallRemoveMemberCall{
			CallRemoveMemberCall: To_FellowshipCollective_RemoveMemberCall(param),
		}
	case 4:
		return &pbgear.FellowshipCollectivePallet_140_CallVoteCall{
			CallVoteCall: To_FellowshipCollective_VoteCall(param),
		}
	case 5:
		return &pbgear.FellowshipCollectivePallet_140_CallCleanupPollCall{
			CallCleanupPollCall: To_FellowshipCollective_CleanupPollCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollectivePallet_310(in any) *pbgear.FellowshipCollectivePallet_310 {
	out := &pbgear.FellowshipCollectivePallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipCollectivePallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollectivePallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollectivePallet_310_CallAddMemberCall{
			CallAddMemberCall: To_FellowshipCollective_AddMemberCall(param),
		}
	case 1:
		return &pbgear.FellowshipCollectivePallet_310_CallPromoteMemberCall{
			CallPromoteMemberCall: To_FellowshipCollective_PromoteMemberCall(param),
		}
	case 2:
		return &pbgear.FellowshipCollectivePallet_310_CallDemoteMemberCall{
			CallDemoteMemberCall: To_FellowshipCollective_DemoteMemberCall(param),
		}
	case 3:
		return &pbgear.FellowshipCollectivePallet_310_CallRemoveMemberCall{
			CallRemoveMemberCall: To_FellowshipCollective_RemoveMemberCall(param),
		}
	case 4:
		return &pbgear.FellowshipCollectivePallet_310_CallVoteCall{
			CallVoteCall: To_FellowshipCollective_VoteCall(param),
		}
	case 5:
		return &pbgear.FellowshipCollectivePallet_310_CallCleanupPollCall{
			CallCleanupPollCall: To_FellowshipCollective_CleanupPollCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollectivePallet_1030(in any) *pbgear.FellowshipCollectivePallet_1030 {
	out := &pbgear.FellowshipCollectivePallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipCollectivePallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollectivePallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollectivePallet_1030_CallAddMemberCall{
			CallAddMemberCall: To_FellowshipCollective_AddMemberCall(param),
		}
	case 1:
		return &pbgear.FellowshipCollectivePallet_1030_CallPromoteMemberCall{
			CallPromoteMemberCall: To_FellowshipCollective_PromoteMemberCall(param),
		}
	case 2:
		return &pbgear.FellowshipCollectivePallet_1030_CallDemoteMemberCall{
			CallDemoteMemberCall: To_FellowshipCollective_DemoteMemberCall(param),
		}
	case 3:
		return &pbgear.FellowshipCollectivePallet_1030_CallRemoveMemberCall{
			CallRemoveMemberCall: To_FellowshipCollective_RemoveMemberCall(param),
		}
	case 4:
		return &pbgear.FellowshipCollectivePallet_1030_CallVoteCall{
			CallVoteCall: To_FellowshipCollective_VoteCall(param),
		}
	case 5:
		return &pbgear.FellowshipCollectivePallet_1030_CallCleanupPollCall{
			CallCleanupPollCall: To_FellowshipCollective_CleanupPollCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollectivePallet_1410(in any) *pbgear.FellowshipCollectivePallet_1410 {
	out := &pbgear.FellowshipCollectivePallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipCollectivePallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollectivePallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollectivePallet_1410_CallAddMemberCall{
			CallAddMemberCall: To_FellowshipCollective_AddMemberCall(param),
		}
	case 1:
		return &pbgear.FellowshipCollectivePallet_1410_CallPromoteMemberCall{
			CallPromoteMemberCall: To_FellowshipCollective_PromoteMemberCall(param),
		}
	case 2:
		return &pbgear.FellowshipCollectivePallet_1410_CallDemoteMemberCall{
			CallDemoteMemberCall: To_FellowshipCollective_DemoteMemberCall(param),
		}
	case 3:
		return &pbgear.FellowshipCollectivePallet_1410_CallRemoveMemberCall{
			CallRemoveMemberCall: To_FellowshipCollective_RemoveMemberCall(param),
		}
	case 4:
		return &pbgear.FellowshipCollectivePallet_1410_CallVoteCall{
			CallVoteCall: To_FellowshipCollective_VoteCall(param),
		}
	case 5:
		return &pbgear.FellowshipCollectivePallet_1410_CallCleanupPollCall{
			CallCleanupPollCall: To_FellowshipCollective_CleanupPollCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollective_AddMemberCall_100(in any) *pbgear.FellowshipCollective_AddMemberCall_100 {
	out := &pbgear.FellowshipCollective_AddMemberCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_FellowshipCollective_AddMemberCall_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_FellowshipCollective_AddMemberCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipCollective_AddMemberCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipcollectiveAddMemberCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipcollectiveAddMemberCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_FellowshipCollective_AddMemberCall_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollective_AddMemberCall_100_WhoId{
			WhoId: To_FellowshipCollective_Id(param),
		}
	case 1:
		return &pbgear.FellowshipCollective_AddMemberCall_100_WhoIndex{
			WhoIndex: To_FellowshipCollective_Index(param),
		}
	case 2:
		return &pbgear.FellowshipCollective_AddMemberCall_100_WhoRaw{
			WhoRaw: To_FellowshipCollective_Raw(param),
		}
	case 3:
		return &pbgear.FellowshipCollective_AddMemberCall_100_WhoAddress32{
			WhoAddress32: To_FellowshipCollective_Address32(param),
		}
	case 4:
		return &pbgear.FellowshipCollective_AddMemberCall_100_WhoAddress20{
			WhoAddress20: To_FellowshipCollective_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollective_CleanupPollCall_100(in any) *pbgear.FellowshipCollective_CleanupPollCall_100 {
	out := &pbgear.FellowshipCollective_CleanupPollCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PollIndex
	out.PollIndex = To_uint32(v.ValueAt(0))
	// primitive field Max
	out.Max = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_FellowshipCollective_CleanupPollCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipCollective_CleanupPollCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipcollectiveCleanupPollCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipcollectiveCleanupPollCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipCollective_DemoteMemberCall_100(in any) *pbgear.FellowshipCollective_DemoteMemberCall_100 {
	out := &pbgear.FellowshipCollective_DemoteMemberCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_FellowshipCollective_DemoteMemberCall_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_FellowshipCollective_DemoteMemberCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipCollective_DemoteMemberCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipcollectiveDemoteMemberCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipcollectiveDemoteMemberCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_FellowshipCollective_DemoteMemberCall_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollective_DemoteMemberCall_100_WhoId{
			WhoId: To_FellowshipCollective_Id(param),
		}
	case 1:
		return &pbgear.FellowshipCollective_DemoteMemberCall_100_WhoIndex{
			WhoIndex: To_FellowshipCollective_Index(param),
		}
	case 2:
		return &pbgear.FellowshipCollective_DemoteMemberCall_100_WhoRaw{
			WhoRaw: To_FellowshipCollective_Raw(param),
		}
	case 3:
		return &pbgear.FellowshipCollective_DemoteMemberCall_100_WhoAddress32{
			WhoAddress32: To_FellowshipCollective_Address32(param),
		}
	case 4:
		return &pbgear.FellowshipCollective_DemoteMemberCall_100_WhoAddress20{
			WhoAddress20: To_FellowshipCollective_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollective_PromoteMemberCall_100(in any) *pbgear.FellowshipCollective_PromoteMemberCall_100 {
	out := &pbgear.FellowshipCollective_PromoteMemberCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_FellowshipCollective_PromoteMemberCall_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_FellowshipCollective_PromoteMemberCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipCollective_PromoteMemberCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipcollectivePromoteMemberCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipcollectivePromoteMemberCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_FellowshipCollective_PromoteMemberCall_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollective_PromoteMemberCall_100_WhoId{
			WhoId: To_FellowshipCollective_Id(param),
		}
	case 1:
		return &pbgear.FellowshipCollective_PromoteMemberCall_100_WhoIndex{
			WhoIndex: To_FellowshipCollective_Index(param),
		}
	case 2:
		return &pbgear.FellowshipCollective_PromoteMemberCall_100_WhoRaw{
			WhoRaw: To_FellowshipCollective_Raw(param),
		}
	case 3:
		return &pbgear.FellowshipCollective_PromoteMemberCall_100_WhoAddress32{
			WhoAddress32: To_FellowshipCollective_Address32(param),
		}
	case 4:
		return &pbgear.FellowshipCollective_PromoteMemberCall_100_WhoAddress20{
			WhoAddress20: To_FellowshipCollective_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollective_RemoveMemberCall_100(in any) *pbgear.FellowshipCollective_RemoveMemberCall_100 {
	out := &pbgear.FellowshipCollective_RemoveMemberCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_FellowshipCollective_RemoveMemberCall_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// primitive field MinRank
	out.MinRank = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_FellowshipCollective_RemoveMemberCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipCollective_RemoveMemberCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipcollectiveRemoveMemberCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipcollectiveRemoveMemberCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_FellowshipCollective_RemoveMemberCall_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollective_RemoveMemberCall_100_WhoId{
			WhoId: To_FellowshipCollective_Id(param),
		}
	case 1:
		return &pbgear.FellowshipCollective_RemoveMemberCall_100_WhoIndex{
			WhoIndex: To_FellowshipCollective_Index(param),
		}
	case 2:
		return &pbgear.FellowshipCollective_RemoveMemberCall_100_WhoRaw{
			WhoRaw: To_FellowshipCollective_Raw(param),
		}
	case 3:
		return &pbgear.FellowshipCollective_RemoveMemberCall_100_WhoAddress32{
			WhoAddress32: To_FellowshipCollective_Address32(param),
		}
	case 4:
		return &pbgear.FellowshipCollective_RemoveMemberCall_100_WhoAddress20{
			WhoAddress20: To_FellowshipCollective_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollective_VoteCall_100(in any) *pbgear.FellowshipCollective_VoteCall_100 {
	out := &pbgear.FellowshipCollective_VoteCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Poll
	out.Poll = To_uint32(v.ValueAt(0))
	// primitive field Aye
	out.Aye = To_bool(v.ValueAt(1))

	return out //from message
}
func To_FellowshipCollective_VoteCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipCollective_VoteCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipcollectiveVoteCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipcollectiveVoteCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipCollective_Who_100(in any) *pbgear.FellowshipCollective_Who_100 {
	out := &pbgear.FellowshipCollective_Who_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_FellowshipCollective_Who_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollective_Who_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollective_Who_100_WhoId{
			WhoId: To_FellowshipCollective_Id(param),
		}
	case 1:
		return &pbgear.FellowshipCollective_Who_100_WhoIndex{
			WhoIndex: To_FellowshipCollective_Index(param),
		}
	case 2:
		return &pbgear.FellowshipCollective_Who_100_WhoRaw{
			WhoRaw: To_FellowshipCollective_Raw(param),
		}
	case 3:
		return &pbgear.FellowshipCollective_Who_100_WhoAddress32{
			WhoAddress32: To_FellowshipCollective_Address32(param),
		}
	case 4:
		return &pbgear.FellowshipCollective_Who_100_WhoAddress20{
			WhoAddress20: To_FellowshipCollective_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollective_Who_310(in any) *pbgear.FellowshipCollective_Who_310 {
	out := &pbgear.FellowshipCollective_Who_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_FellowshipCollective_Who_310_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollective_Who_310_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollective_Who_310_WhoId{
			WhoId: To_FellowshipCollective_Id(param),
		}
	case 1:
		return &pbgear.FellowshipCollective_Who_310_WhoIndex{
			WhoIndex: To_FellowshipCollective_Index(param),
		}
	case 2:
		return &pbgear.FellowshipCollective_Who_310_WhoRaw{
			WhoRaw: To_FellowshipCollective_Raw(param),
		}
	case 3:
		return &pbgear.FellowshipCollective_Who_310_WhoAddress32{
			WhoAddress32: To_FellowshipCollective_Address32(param),
		}
	case 4:
		return &pbgear.FellowshipCollective_Who_310_WhoAddress20{
			WhoAddress20: To_FellowshipCollective_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipCollective_Who_1030(in any) *pbgear.FellowshipCollective_Who_1030 {
	out := &pbgear.FellowshipCollective_Who_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_FellowshipCollective_Who_1030_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipCollective_Who_1030_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipCollective_Who_1030_WhoId{
			WhoId: To_FellowshipCollective_Id(param),
		}
	case 1:
		return &pbgear.FellowshipCollective_Who_1030_WhoIndex{
			WhoIndex: To_FellowshipCollective_Index(param),
		}
	case 2:
		return &pbgear.FellowshipCollective_Who_1030_WhoRaw{
			WhoRaw: To_FellowshipCollective_Raw(param),
		}
	case 3:
		return &pbgear.FellowshipCollective_Who_1030_WhoAddress32{
			WhoAddress32: To_FellowshipCollective_Address32(param),
		}
	case 4:
		return &pbgear.FellowshipCollective_Who_1030_WhoAddress20{
			WhoAddress20: To_FellowshipCollective_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipExperts_100(in any) *pbgear.FellowshipExperts_100 {
	out := &pbgear.FellowshipExperts_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FellowshipInitiates_100(in any) *pbgear.FellowshipInitiates_100 {
	out := &pbgear.FellowshipInitiates_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FellowshipMasters_100(in any) *pbgear.FellowshipMasters_100 {
	out := &pbgear.FellowshipMasters_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FellowshipReferenda_After_100(in any) *pbgear.FellowshipReferenda_After_100 {
	out := &pbgear.FellowshipReferenda_After_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_FellowshipReferenda_At_100(in any) *pbgear.FellowshipReferenda_At_100 {
	out := &pbgear.FellowshipReferenda_At_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_FellowshipReferenda_ConsensusEvent_140(in any) *pbgear.FellowshipReferenda_ConsensusEvent_140 {
	out := &pbgear.FellowshipReferenda_ConsensusEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_FellowshipReferenda_Inline_100(in any) *pbgear.FellowshipReferenda_Inline_100 {
	out := &pbgear.FellowshipReferenda_Inline_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreBoundedBoundedVecBoundedVec(w)
	out.Value0 = To_SpCoreBoundedBoundedVecBoundedVec(v.ValueAt(0))

	return out //from message
}

func To_FellowshipReferenda_Inline_140(in any) *pbgear.FellowshipReferenda_Inline_140 {
	out := &pbgear.FellowshipReferenda_Inline_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Value0 = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))

	return out //from message
}

func To_FellowshipReferenda_Legacy_100(in any) *pbgear.FellowshipReferenda_Legacy_100 {
	out := &pbgear.FellowshipReferenda_Legacy_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_FellowshipReferenda_Lookup_100(in any) *pbgear.FellowshipReferenda_Lookup_100 {
	out := &pbgear.FellowshipReferenda_Lookup_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field Len
	out.Len = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_FellowshipReferenda_Origins_100(in any) *pbgear.FellowshipReferenda_Origins_100 {
	out := &pbgear.FellowshipReferenda_Origins_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_FellowshipReferenda_Origins_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Origins_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_Origins_100_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_Origins_100_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_Origins_100_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.FellowshipReferenda_Origins_100_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.FellowshipReferenda_Origins_100_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.FellowshipReferenda_Origins_100_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.FellowshipReferenda_Origins_100_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.FellowshipReferenda_Origins_100_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.FellowshipReferenda_Origins_100_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.FellowshipReferenda_Origins_100_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.FellowshipReferenda_Origins_100_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_Origins_130(in any) *pbgear.FellowshipReferenda_Origins_130 {
	out := &pbgear.FellowshipReferenda_Origins_130{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_FellowshipReferenda_Origins_130_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Origins_130_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_Origins_130_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_Origins_130_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.FellowshipReferenda_Origins_130_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.FellowshipReferenda_Origins_130_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.FellowshipReferenda_Origins_130_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.FellowshipReferenda_Origins_130_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.FellowshipReferenda_Origins_130_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.FellowshipReferenda_Origins_130_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.FellowshipReferenda_Origins_130_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 11:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 12:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 13:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 14:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 15:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 16:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 17:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 18:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 19:
		return &pbgear.FellowshipReferenda_Origins_130_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_Origins_210(in any) *pbgear.FellowshipReferenda_Origins_210 {
	out := &pbgear.FellowshipReferenda_Origins_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_FellowshipReferenda_Origins_210_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Origins_210_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_Origins_210_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_Origins_210_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.FellowshipReferenda_Origins_210_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.FellowshipReferenda_Origins_210_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.FellowshipReferenda_Origins_210_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.FellowshipReferenda_Origins_210_Value0SmallTipper{
			Value0SmallTipper: To_SmallTipper(param),
		}
	case 7:
		return &pbgear.FellowshipReferenda_Origins_210_Value0BigTipper{
			Value0BigTipper: To_BigTipper(param),
		}
	case 8:
		return &pbgear.FellowshipReferenda_Origins_210_Value0SmallSpender{
			Value0SmallSpender: To_SmallSpender(param),
		}
	case 9:
		return &pbgear.FellowshipReferenda_Origins_210_Value0MediumSpender{
			Value0MediumSpender: To_MediumSpender(param),
		}
	case 10:
		return &pbgear.FellowshipReferenda_Origins_210_Value0BigSpender{
			Value0BigSpender: To_BigSpender(param),
		}
	case 11:
		return &pbgear.FellowshipReferenda_Origins_210_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 12:
		return &pbgear.FellowshipReferenda_Origins_210_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 13:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 14:
		return &pbgear.FellowshipReferenda_Origins_210_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 15:
		return &pbgear.FellowshipReferenda_Origins_210_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 16:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 17:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 18:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 19:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 20:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 21:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 22:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 23:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 24:
		return &pbgear.FellowshipReferenda_Origins_210_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_OtherEvent_140(in any) *pbgear.FellowshipReferenda_OtherEvent_140 {
	out := &pbgear.FellowshipReferenda_OtherEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_FellowshipReferenda_PreRuntimeEvent_140(in any) *pbgear.FellowshipReferenda_PreRuntimeEvent_140 {
	out := &pbgear.FellowshipReferenda_PreRuntimeEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_FellowshipReferenda_RuntimeEnvironmentUpdatedEvent_140(in any) *pbgear.FellowshipReferenda_RuntimeEnvironmentUpdatedEvent_140 {
	out := &pbgear.FellowshipReferenda_RuntimeEnvironmentUpdatedEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FellowshipReferenda_SealEvent_140(in any) *pbgear.FellowshipReferenda_SealEvent_140 {
	out := &pbgear.FellowshipReferenda_SealEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_FellowshipReferenda_Void_100(in any) *pbgear.FellowshipReferenda_Void_100 {
	out := &pbgear.FellowshipReferenda_Void_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_FellowshipReferenda_Void_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Void_100_value0(in any) any {
	return nil
}
func To_FellowshipReferendaPallet_100(in any) *pbgear.FellowshipReferendaPallet_100 {
	out := &pbgear.FellowshipReferendaPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipReferendaPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferendaPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferendaPallet_100_CallSubmitCall{
			CallSubmitCall: To_FellowshipReferenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.FellowshipReferendaPallet_100_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_FellowshipReferenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.FellowshipReferendaPallet_100_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_FellowshipReferenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.FellowshipReferendaPallet_100_CallCancelCall{
			CallCancelCall: To_FellowshipReferenda_CancelCall(param),
		}
	case 4:
		return &pbgear.FellowshipReferendaPallet_100_CallKillCall{
			CallKillCall: To_FellowshipReferenda_KillCall(param),
		}
	case 5:
		return &pbgear.FellowshipReferendaPallet_100_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_FellowshipReferenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.FellowshipReferendaPallet_100_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_FellowshipReferenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.FellowshipReferendaPallet_100_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_FellowshipReferenda_RefundSubmissionDepositCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferendaPallet_140(in any) *pbgear.FellowshipReferendaPallet_140 {
	out := &pbgear.FellowshipReferendaPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipReferendaPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferendaPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferendaPallet_140_CallSubmitCall{
			CallSubmitCall: To_FellowshipReferenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.FellowshipReferendaPallet_140_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_FellowshipReferenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.FellowshipReferendaPallet_140_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_FellowshipReferenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.FellowshipReferendaPallet_140_CallCancelCall{
			CallCancelCall: To_FellowshipReferenda_CancelCall(param),
		}
	case 4:
		return &pbgear.FellowshipReferendaPallet_140_CallKillCall{
			CallKillCall: To_FellowshipReferenda_KillCall(param),
		}
	case 5:
		return &pbgear.FellowshipReferendaPallet_140_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_FellowshipReferenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.FellowshipReferendaPallet_140_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_FellowshipReferenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.FellowshipReferendaPallet_140_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_FellowshipReferenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.FellowshipReferendaPallet_140_CallSetMetadataCall{
			CallSetMetadataCall: To_FellowshipReferenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferendaPallet_310(in any) *pbgear.FellowshipReferendaPallet_310 {
	out := &pbgear.FellowshipReferendaPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipReferendaPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferendaPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferendaPallet_310_CallSubmitCall{
			CallSubmitCall: To_FellowshipReferenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.FellowshipReferendaPallet_310_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_FellowshipReferenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.FellowshipReferendaPallet_310_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_FellowshipReferenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.FellowshipReferendaPallet_310_CallCancelCall{
			CallCancelCall: To_FellowshipReferenda_CancelCall(param),
		}
	case 4:
		return &pbgear.FellowshipReferendaPallet_310_CallKillCall{
			CallKillCall: To_FellowshipReferenda_KillCall(param),
		}
	case 5:
		return &pbgear.FellowshipReferendaPallet_310_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_FellowshipReferenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.FellowshipReferendaPallet_310_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_FellowshipReferenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.FellowshipReferendaPallet_310_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_FellowshipReferenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.FellowshipReferendaPallet_310_CallSetMetadataCall{
			CallSetMetadataCall: To_FellowshipReferenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferendaPallet_1030(in any) *pbgear.FellowshipReferendaPallet_1030 {
	out := &pbgear.FellowshipReferendaPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipReferendaPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferendaPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferendaPallet_1030_CallSubmitCall{
			CallSubmitCall: To_FellowshipReferenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.FellowshipReferendaPallet_1030_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_FellowshipReferenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.FellowshipReferendaPallet_1030_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_FellowshipReferenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.FellowshipReferendaPallet_1030_CallCancelCall{
			CallCancelCall: To_FellowshipReferenda_CancelCall(param),
		}
	case 4:
		return &pbgear.FellowshipReferendaPallet_1030_CallKillCall{
			CallKillCall: To_FellowshipReferenda_KillCall(param),
		}
	case 5:
		return &pbgear.FellowshipReferendaPallet_1030_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_FellowshipReferenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.FellowshipReferendaPallet_1030_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_FellowshipReferenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.FellowshipReferendaPallet_1030_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_FellowshipReferenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.FellowshipReferendaPallet_1030_CallSetMetadataCall{
			CallSetMetadataCall: To_FellowshipReferenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferendaPallet_1410(in any) *pbgear.FellowshipReferendaPallet_1410 {
	out := &pbgear.FellowshipReferendaPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_FellowshipReferendaPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferendaPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferendaPallet_1410_CallSubmitCall{
			CallSubmitCall: To_FellowshipReferenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.FellowshipReferendaPallet_1410_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_FellowshipReferenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.FellowshipReferendaPallet_1410_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_FellowshipReferenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.FellowshipReferendaPallet_1410_CallCancelCall{
			CallCancelCall: To_FellowshipReferenda_CancelCall(param),
		}
	case 4:
		return &pbgear.FellowshipReferendaPallet_1410_CallKillCall{
			CallKillCall: To_FellowshipReferenda_KillCall(param),
		}
	case 5:
		return &pbgear.FellowshipReferendaPallet_1410_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_FellowshipReferenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.FellowshipReferendaPallet_1410_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_FellowshipReferenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.FellowshipReferendaPallet_1410_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_FellowshipReferenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.FellowshipReferendaPallet_1410_CallSetMetadataCall{
			CallSetMetadataCall: To_FellowshipReferenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_CancelCall_100(in any) *pbgear.FellowshipReferenda_CancelCall_100 {
	out := &pbgear.FellowshipReferenda_CancelCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_FellowshipReferenda_CancelCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_CancelCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaCancelCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaCancelCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipReferenda_EnactmentMoment_100(in any) *pbgear.FellowshipReferenda_EnactmentMoment_100 {
	out := &pbgear.FellowshipReferenda_EnactmentMoment_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_FellowshipReferenda_EnactmentMoment_100_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_EnactmentMoment_100_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_EnactmentMoment_100_EnactmentMomentAt{
			EnactmentMomentAt: To_FellowshipReferenda_At(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_EnactmentMoment_100_EnactmentMomentAfter{
			EnactmentMomentAfter: To_FellowshipReferenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_EnactmentMoment_310(in any) *pbgear.FellowshipReferenda_EnactmentMoment_310 {
	out := &pbgear.FellowshipReferenda_EnactmentMoment_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_FellowshipReferenda_EnactmentMoment_310_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_EnactmentMoment_310_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_EnactmentMoment_310_EnactmentMomentAt{
			EnactmentMomentAt: To_FellowshipReferenda_At(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_EnactmentMoment_310_EnactmentMomentAfter{
			EnactmentMomentAfter: To_FellowshipReferenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_EnactmentMoment_1030(in any) *pbgear.FellowshipReferenda_EnactmentMoment_1030 {
	out := &pbgear.FellowshipReferenda_EnactmentMoment_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_FellowshipReferenda_EnactmentMoment_1030_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_EnactmentMoment_1030_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_EnactmentMoment_1030_EnactmentMomentAt{
			EnactmentMomentAt: To_FellowshipReferenda_At(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_EnactmentMoment_1030_EnactmentMomentAfter{
			EnactmentMomentAfter: To_FellowshipReferenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_EnactmentMoment_1410(in any) *pbgear.FellowshipReferenda_EnactmentMoment_1410 {
	out := &pbgear.FellowshipReferenda_EnactmentMoment_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_FellowshipReferenda_EnactmentMoment_1410_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_EnactmentMoment_1410_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_EnactmentMoment_1410_EnactmentMomentAt{
			EnactmentMomentAt: To_FellowshipReferenda_At(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_EnactmentMoment_1410_EnactmentMomentAfter{
			EnactmentMomentAfter: To_FellowshipReferenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_KillCall_100(in any) *pbgear.FellowshipReferenda_KillCall_100 {
	out := &pbgear.FellowshipReferenda_KillCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_FellowshipReferenda_KillCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_KillCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaKillCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaKillCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipReferenda_NudgeReferendumCall_100(in any) *pbgear.FellowshipReferenda_NudgeReferendumCall_100 {
	out := &pbgear.FellowshipReferenda_NudgeReferendumCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_FellowshipReferenda_NudgeReferendumCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_NudgeReferendumCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaNudgeReferendumCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaNudgeReferendumCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipReferenda_OneFewerDecidingCall_100(in any) *pbgear.FellowshipReferenda_OneFewerDecidingCall_100 {
	out := &pbgear.FellowshipReferenda_OneFewerDecidingCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Track
	out.Track = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_FellowshipReferenda_OneFewerDecidingCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_OneFewerDecidingCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaOneFewerDecidingCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaOneFewerDecidingCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipReferenda_PlaceDecisionDepositCall_100(in any) *pbgear.FellowshipReferenda_PlaceDecisionDepositCall_100 {
	out := &pbgear.FellowshipReferenda_PlaceDecisionDepositCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_FellowshipReferenda_PlaceDecisionDepositCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_PlaceDecisionDepositCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaPlaceDecisionDepositCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaPlaceDecisionDepositCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipReferenda_Proposal_100(in any) *pbgear.FellowshipReferenda_Proposal_100 {
	out := &pbgear.FellowshipReferenda_Proposal_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_FellowshipReferenda_Proposal_100_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Proposal_100_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_Proposal_100_ProposalLegacy{
			ProposalLegacy: To_FellowshipReferenda_Legacy(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_Proposal_100_ProposalInline{
			ProposalInline: To_FellowshipReferenda_Inline(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_Proposal_100_ProposalLookup{
			ProposalLookup: To_FellowshipReferenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_Proposal_310(in any) *pbgear.FellowshipReferenda_Proposal_310 {
	out := &pbgear.FellowshipReferenda_Proposal_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_FellowshipReferenda_Proposal_310_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Proposal_310_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_Proposal_310_ProposalLegacy{
			ProposalLegacy: To_FellowshipReferenda_Legacy(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_Proposal_310_ProposalInline{
			ProposalInline: To_FellowshipReferenda_Inline(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_Proposal_310_ProposalLookup{
			ProposalLookup: To_FellowshipReferenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_Proposal_1030(in any) *pbgear.FellowshipReferenda_Proposal_1030 {
	out := &pbgear.FellowshipReferenda_Proposal_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_FellowshipReferenda_Proposal_1030_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Proposal_1030_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_Proposal_1030_ProposalLegacy{
			ProposalLegacy: To_FellowshipReferenda_Legacy(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_Proposal_1030_ProposalInline{
			ProposalInline: To_FellowshipReferenda_Inline(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_Proposal_1030_ProposalLookup{
			ProposalLookup: To_FellowshipReferenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_Proposal_1400(in any) *pbgear.FellowshipReferenda_Proposal_1400 {
	out := &pbgear.FellowshipReferenda_Proposal_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_FellowshipReferenda_Proposal_1400_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_Proposal_1400_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_Proposal_1400_ProposalLegacy{
			ProposalLegacy: To_FellowshipReferenda_Legacy(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_Proposal_1400_ProposalInline{
			ProposalInline: To_FellowshipReferenda_Inline(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_Proposal_1400_ProposalLookup{
			ProposalLookup: To_FellowshipReferenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_ProposalOrigin_100(in any) *pbgear.FellowshipReferenda_ProposalOrigin_100 {
	out := &pbgear.FellowshipReferenda_ProposalOrigin_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_FellowshipReferenda_ProposalOrigin_100_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_ProposalOrigin_100_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_ProposalOrigin_100_ProposalOriginSystem{
			ProposalOriginSystem: To_FellowshipReferenda_System(param),
		}
	case 20:
		return &pbgear.FellowshipReferenda_ProposalOrigin_100_ProposalOriginOrigins{
			ProposalOriginOrigins: To_FellowshipReferenda_Origins(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_ProposalOrigin_100_ProposalOriginVoid{
			ProposalOriginVoid: To_FellowshipReferenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_ProposalOrigin_310(in any) *pbgear.FellowshipReferenda_ProposalOrigin_310 {
	out := &pbgear.FellowshipReferenda_ProposalOrigin_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_FellowshipReferenda_ProposalOrigin_310_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_ProposalOrigin_310_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_ProposalOrigin_310_ProposalOriginSystem{
			ProposalOriginSystem: To_FellowshipReferenda_System(param),
		}
	case 20:
		return &pbgear.FellowshipReferenda_ProposalOrigin_310_ProposalOriginOrigins{
			ProposalOriginOrigins: To_FellowshipReferenda_Origins(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_ProposalOrigin_310_ProposalOriginVoid{
			ProposalOriginVoid: To_FellowshipReferenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_ProposalOrigin_1030(in any) *pbgear.FellowshipReferenda_ProposalOrigin_1030 {
	out := &pbgear.FellowshipReferenda_ProposalOrigin_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_FellowshipReferenda_ProposalOrigin_1030_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_ProposalOrigin_1030_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1030_ProposalOriginSystem{
			ProposalOriginSystem: To_FellowshipReferenda_System(param),
		}
	case 20:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1030_ProposalOriginOrigins{
			ProposalOriginOrigins: To_FellowshipReferenda_Origins(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1030_ProposalOriginVoid{
			ProposalOriginVoid: To_FellowshipReferenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_ProposalOrigin_1040(in any) *pbgear.FellowshipReferenda_ProposalOrigin_1040 {
	out := &pbgear.FellowshipReferenda_ProposalOrigin_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_FellowshipReferenda_ProposalOrigin_1040_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_ProposalOrigin_1040_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1040_ProposalOriginSystem{
			ProposalOriginSystem: To_FellowshipReferenda_System(param),
		}
	case 20:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1040_ProposalOriginOrigins{
			ProposalOriginOrigins: To_FellowshipReferenda_Origins(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1040_ProposalOriginVoid{
			ProposalOriginVoid: To_FellowshipReferenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_ProposalOrigin_1410(in any) *pbgear.FellowshipReferenda_ProposalOrigin_1410 {
	out := &pbgear.FellowshipReferenda_ProposalOrigin_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_FellowshipReferenda_ProposalOrigin_1410_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_ProposalOrigin_1410_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1410_ProposalOriginSystem{
			ProposalOriginSystem: To_FellowshipReferenda_System(param),
		}
	case 20:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1410_ProposalOriginOrigins{
			ProposalOriginOrigins: To_FellowshipReferenda_Origins(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_ProposalOrigin_1410_ProposalOriginVoid{
			ProposalOriginVoid: To_FellowshipReferenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_RefundDecisionDepositCall_100(in any) *pbgear.FellowshipReferenda_RefundDecisionDepositCall_100 {
	out := &pbgear.FellowshipReferenda_RefundDecisionDepositCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_FellowshipReferenda_RefundDecisionDepositCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_RefundDecisionDepositCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaRefundDecisionDepositCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaRefundDecisionDepositCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipReferenda_RefundSubmissionDepositCall_100(in any) *pbgear.FellowshipReferenda_RefundSubmissionDepositCall_100 {
	out := &pbgear.FellowshipReferenda_RefundSubmissionDepositCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_FellowshipReferenda_RefundSubmissionDepositCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_RefundSubmissionDepositCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaRefundSubmissionDepositCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaRefundSubmissionDepositCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_FellowshipReferenda_SetMetadataCall_140(in any) *pbgear.FellowshipReferenda_SetMetadataCall_140 {
	out := &pbgear.FellowshipReferenda_SetMetadataCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// optional field MaybeHash true
	if v.HasValue() {
		out.MaybeHash = To_Optional_FellowshipReferenda_SetMetadataCall_140_maybe_hash(v.ValueAt(1))
	}

	return out //from message
}
func To_FellowshipReferenda_SetMetadataCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_SetMetadataCall_140(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaSetMetadataCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaSetMetadataCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_FellowshipReferenda_SetMetadataCall_140_maybe_hash(in any) *pbgear.PrimitiveTypesH256 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_FellowshipReferenda_SubmitCall_100(in any) *pbgear.FellowshipReferenda_SubmitCall_100 {
	out := &pbgear.FellowshipReferenda_SubmitCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_FellowshipReferenda_SubmitCall_100_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))
	// oneOf field Proposal
	v1 := To_OneOf_FellowshipReferenda_SubmitCall_100_proposal(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v1))
	// oneOf field EnactmentMoment
	v2 := To_OneOf_FellowshipReferenda_SubmitCall_100_enactment_moment(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v2))

	return out //from message
}
func To_FellowshipReferenda_SubmitCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_FellowshipReferenda_SubmitCall_100(in)
	out := &pbgearextrinsic.Extrinsic_FellowshipreferendaSubmitCall{}
	reflect.ValueOf(out).Elem().FieldByName("FellowshipreferendaSubmitCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_FellowshipReferenda_SubmitCall_100_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_SubmitCall_100_ProposalOriginSystem{
			ProposalOriginSystem: To_FellowshipReferenda_System(param),
		}
	case 20:
		return &pbgear.FellowshipReferenda_SubmitCall_100_ProposalOriginOrigins{
			ProposalOriginOrigins: To_FellowshipReferenda_Origins(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_SubmitCall_100_ProposalOriginVoid{
			ProposalOriginVoid: To_FellowshipReferenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_FellowshipReferenda_SubmitCall_100_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_SubmitCall_100_ProposalLegacy{
			ProposalLegacy: To_FellowshipReferenda_Legacy(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_SubmitCall_100_ProposalInline{
			ProposalInline: To_FellowshipReferenda_Inline(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_SubmitCall_100_ProposalLookup{
			ProposalLookup: To_FellowshipReferenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_FellowshipReferenda_SubmitCall_100_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_SubmitCall_100_EnactmentMomentAt{
			EnactmentMomentAt: To_FellowshipReferenda_At(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_SubmitCall_100_EnactmentMomentAfter{
			EnactmentMomentAfter: To_FellowshipReferenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FellowshipReferenda_System_100(in any) *pbgear.FellowshipReferenda_System_100 {
	out := &pbgear.FellowshipReferenda_System_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_FellowshipReferenda_System_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_FellowshipReferenda_System_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FellowshipReferenda_System_100_Value0Root{
			Value0Root: To_Root(param),
		}
	case 1:
		return &pbgear.FellowshipReferenda_System_100_Value0Signed{
			Value0Signed: To_Signed(param),
		}
	case 2:
		return &pbgear.FellowshipReferenda_System_100_Value0None{
			Value0None: To_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Free_1030(in any) *pbgear.Free_1030 {
	out := &pbgear.Free_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Frozen_1030(in any) *pbgear.Frozen_1030 {
	out := &pbgear.Frozen_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_FundsUnavailable_1030(in any) *pbgear.FundsUnavailable_1030 {
	out := &pbgear.FundsUnavailable_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearBankPallet_320(in any) *pbgear.GearBankPallet_320 {
	out := &pbgear.GearBankPallet_320{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearBuiltinPallet_1200(in any) *pbgear.GearBuiltinPallet_1200 {
	out := &pbgear.GearBuiltinPallet_1200{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearGasPallet_100(in any) *pbgear.GearGasPallet_100 {
	out := &pbgear.GearGasPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearMessengerPallet_100(in any) *pbgear.GearMessengerPallet_100 {
	out := &pbgear.GearMessengerPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearPaymentPallet_100(in any) *pbgear.GearPaymentPallet_100 {
	out := &pbgear.GearPaymentPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearProgramPallet_100(in any) *pbgear.GearProgramPallet_100 {
	out := &pbgear.GearProgramPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearSchedulerPallet_100(in any) *pbgear.GearSchedulerPallet_100 {
	out := &pbgear.GearSchedulerPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Gear_TupleGearCoreMemoryGearPagegearCoreMemoryPageBuf_210(in any) *pbgear.Gear_TupleGearCoreMemoryGearPagegearCoreMemoryPageBuf_210 {
	out := &pbgear.Gear_TupleGearCoreMemoryGearPagegearCoreMemoryPageBuf_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCoreMemoryGearPage(w)
	out.Value0 = To_Gear_GearCoreMemoryGearPage(v.ValueAt(0))
	// field Value1 To_Gear_GearCoreMemoryPageBuf(w)
	out.Value1 = To_Gear_GearCoreMemoryPageBuf(v.ValueAt(1))

	return out //from message
}

func To_Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_310(in any) *pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_310 {
	out := &pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCorePagesGearPage(w)
	out.Value0 = To_Gear_GearCorePagesGearPage(v.ValueAt(0))
	// field Value1 To_Gear_GearCoreMemoryPageBuf(w)
	out.Value1 = To_Gear_GearCoreMemoryPageBuf(v.ValueAt(1))

	return out //from message
}

func To_Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_1030(in any) *pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_1030 {
	out := &pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCorePagesGearPage(w)
	out.Value0 = To_Gear_GearCorePagesGearPage(v.ValueAt(0))
	// field Value1 To_Gear_GearCoreMemoryPageBuf(w)
	out.Value1 = To_Gear_GearCoreMemoryPageBuf(v.ValueAt(1))

	return out //from message
}

func To_Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_1040(in any) *pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_1040 {
	out := &pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCorePagesGearPage(w)
	out.Value0 = To_Gear_GearCorePagesGearPage(v.ValueAt(0))
	// field Value1 To_Gear_GearCoreMemoryPageBuf(w)
	out.Value1 = To_Gear_GearCoreMemoryPageBuf(v.ValueAt(1))

	return out //from message
}

func To_GearVoucher_Address20_210(in any) *pbgear.GearVoucher_Address20_210 {
	out := &pbgear.GearVoucher_Address20_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_Address32_210(in any) *pbgear.GearVoucher_Address32_210 {
	out := &pbgear.GearVoucher_Address32_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_DeclineVoucher_1110(in any) *pbgear.GearVoucher_DeclineVoucher_1110 {
	out := &pbgear.GearVoucher_DeclineVoucher_1110{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearVoucher_Id_210(in any) *pbgear.GearVoucher_Id_210 {
	out := &pbgear.GearVoucher_Id_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_Index_210(in any) *pbgear.GearVoucher_Index_210 {
	out := &pbgear.GearVoucher_Index_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearVoucher_TupleNull(w)
	out.Value0 = To_GearVoucher_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_None_1110(in any) *pbgear.GearVoucher_None_1110 {
	out := &pbgear.GearVoucher_None_1110{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_GearVoucher_Raw_210(in any) *pbgear.GearVoucher_Raw_210 {
	out := &pbgear.GearVoucher_Raw_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_SendMessage_1010(in any) *pbgear.GearVoucher_SendMessage_1010 {
	out := &pbgear.GearVoucher_SendMessage_1010{}
	v := in.(registry.Valuable)
	_ = v

	// field Destination To_GearCoreIdsProgramId(w)
	out.Destination = To_GearCoreIdsProgramId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}

func To_GearVoucher_SendMessage_1420(in any) *pbgear.GearVoucher_SendMessage_1420 {
	out := &pbgear.GearVoucher_SendMessage_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Destination To_GprimitivesActorId(w)
	out.Destination = To_GprimitivesActorId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}

func To_GearVoucher_SendReply_1010(in any) *pbgear.GearVoucher_SendReply_1010 {
	out := &pbgear.GearVoucher_SendReply_1010{}
	v := in.(registry.Valuable)
	_ = v

	// field ReplyToId To_GearCoreIdsMessageId(w)
	out.ReplyToId = To_GearCoreIdsMessageId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}

func To_GearVoucher_SendReply_1420(in any) *pbgear.GearVoucher_SendReply_1420 {
	out := &pbgear.GearVoucher_SendReply_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field ReplyToId To_GprimitivesMessageId(w)
	out.ReplyToId = To_GprimitivesMessageId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}

func To_GearVoucher_Some_1110(in any) *pbgear.GearVoucher_Some_1110 {
	out := &pbgear.GearVoucher_Some_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_BTreeSet(w)
	out.Value0 = To_BTreeSet(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_TupleNull_210(in any) *pbgear.GearVoucher_TupleNull_210 {
	out := &pbgear.GearVoucher_TupleNull_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_TupleNull_310(in any) *pbgear.GearVoucher_TupleNull_310 {
	out := &pbgear.GearVoucher_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_TupleNull_1030(in any) *pbgear.GearVoucher_TupleNull_1030 {
	out := &pbgear.GearVoucher_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_UploadCode_1110(in any) *pbgear.GearVoucher_UploadCode_1110 {
	out := &pbgear.GearVoucher_UploadCode_1110{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Code
	out.Code = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearVoucherPallet_210(in any) *pbgear.GearVoucherPallet_210 {
	out := &pbgear.GearVoucherPallet_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucherPallet_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucherPallet_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucherPallet_210_CallIssueCall{
			CallIssueCall: To_GearVoucher_IssueCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucherPallet_310(in any) *pbgear.GearVoucherPallet_310 {
	out := &pbgear.GearVoucherPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucherPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucherPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucherPallet_310_CallIssueCall{
			CallIssueCall: To_GearVoucher_IssueCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucherPallet_1010(in any) *pbgear.GearVoucherPallet_1010 {
	out := &pbgear.GearVoucherPallet_1010{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucherPallet_1010_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucherPallet_1010_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucherPallet_1010_CallIssueCall{
			CallIssueCall: To_GearVoucher_IssueCall(param),
		}
	case 1:
		return &pbgear.GearVoucherPallet_1010_CallCallCall{
			CallCallCall: To_GearVoucher_CallCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucherPallet_1030(in any) *pbgear.GearVoucherPallet_1030 {
	out := &pbgear.GearVoucherPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucherPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucherPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucherPallet_1030_CallIssueCall{
			CallIssueCall: To_GearVoucher_IssueCall(param),
		}
	case 1:
		return &pbgear.GearVoucherPallet_1030_CallCallCall{
			CallCallCall: To_GearVoucher_CallCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucherPallet_1040(in any) *pbgear.GearVoucherPallet_1040 {
	out := &pbgear.GearVoucherPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucherPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucherPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucherPallet_1040_CallIssueCall{
			CallIssueCall: To_GearVoucher_IssueCall(param),
		}
	case 1:
		return &pbgear.GearVoucherPallet_1040_CallCallCall{
			CallCallCall: To_GearVoucher_CallCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucherPallet_1110(in any) *pbgear.GearVoucherPallet_1110 {
	out := &pbgear.GearVoucherPallet_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucherPallet_1110_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucherPallet_1110_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucherPallet_1110_CallIssueCall{
			CallIssueCall: To_GearVoucher_IssueCall(param),
		}
	case 1:
		return &pbgear.GearVoucherPallet_1110_CallCallCall{
			CallCallCall: To_GearVoucher_CallCall(param),
		}
	case 2:
		return &pbgear.GearVoucherPallet_1110_CallRevokeCall{
			CallRevokeCall: To_GearVoucher_RevokeCall(param),
		}
	case 3:
		return &pbgear.GearVoucherPallet_1110_CallUpdateCall{
			CallUpdateCall: To_GearVoucher_UpdateCall(param),
		}
	case 4:
		return &pbgear.GearVoucherPallet_1110_CallCallDeprecatedCall{
			CallCallDeprecatedCall: To_GearVoucher_CallDeprecatedCall(param),
		}
	case 5:
		return &pbgear.GearVoucherPallet_1110_CallDeclineCall{
			CallDeclineCall: To_GearVoucher_DeclineCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucherPallet_1400(in any) *pbgear.GearVoucherPallet_1400 {
	out := &pbgear.GearVoucherPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucherPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucherPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucherPallet_1400_CallIssueCall{
			CallIssueCall: To_GearVoucher_IssueCall(param),
		}
	case 1:
		return &pbgear.GearVoucherPallet_1400_CallCallCall{
			CallCallCall: To_GearVoucher_CallCall(param),
		}
	case 2:
		return &pbgear.GearVoucherPallet_1400_CallRevokeCall{
			CallRevokeCall: To_GearVoucher_RevokeCall(param),
		}
	case 3:
		return &pbgear.GearVoucherPallet_1400_CallUpdateCall{
			CallUpdateCall: To_GearVoucher_UpdateCall(param),
		}
	case 4:
		return &pbgear.GearVoucherPallet_1400_CallCallDeprecatedCall{
			CallCallDeprecatedCall: To_GearVoucher_CallDeprecatedCall(param),
		}
	case 5:
		return &pbgear.GearVoucherPallet_1400_CallDeclineCall{
			CallDeclineCall: To_GearVoucher_DeclineCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_AppendPrograms_1110(in any) *pbgear.GearVoucher_AppendPrograms_1110 {
	out := &pbgear.GearVoucher_AppendPrograms_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AppendPrograms
	v0 := To_OneOf_GearVoucher_AppendPrograms_1110_append_programs(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AppendPrograms").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_AppendPrograms_1110_append_programs(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_AppendPrograms_1110_AppendProgramsNone{
			AppendProgramsNone: To_GearVoucher_None(param),
		}
	case 1:
		return &pbgear.GearVoucher_AppendPrograms_1110_AppendProgramsSome{
			AppendProgramsSome: To_GearVoucher_Some(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_AppendPrograms_1400(in any) *pbgear.GearVoucher_AppendPrograms_1400 {
	out := &pbgear.GearVoucher_AppendPrograms_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AppendPrograms
	v0 := To_OneOf_GearVoucher_AppendPrograms_1400_append_programs(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AppendPrograms").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_AppendPrograms_1400_append_programs(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_AppendPrograms_1400_AppendProgramsNone{
			AppendProgramsNone: To_GearVoucher_None(param),
		}
	case 1:
		return &pbgear.GearVoucher_AppendPrograms_1400_AppendProgramsSome{
			AppendProgramsSome: To_GearVoucher_Some(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_Call_1010(in any) *pbgear.GearVoucher_Call_1010 {
	out := &pbgear.GearVoucher_Call_1010{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucher_Call_1010_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_Call_1010_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_Call_1010_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_Call_1010_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_Call_1030(in any) *pbgear.GearVoucher_Call_1030 {
	out := &pbgear.GearVoucher_Call_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucher_Call_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_Call_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_Call_1030_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_Call_1030_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_Call_1040(in any) *pbgear.GearVoucher_Call_1040 {
	out := &pbgear.GearVoucher_Call_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucher_Call_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_Call_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_Call_1040_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_Call_1040_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_Call_1110(in any) *pbgear.GearVoucher_Call_1110 {
	out := &pbgear.GearVoucher_Call_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucher_Call_1110_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_Call_1110_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_Call_1110_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_Call_1110_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	case 2:
		return &pbgear.GearVoucher_Call_1110_CallUploadCode{
			CallUploadCode: To_GearVoucher_UploadCode(param),
		}
	case 3:
		return &pbgear.GearVoucher_Call_1110_CallDeclineVoucher{
			CallDeclineVoucher: To_GearVoucher_DeclineVoucher(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_Call_1400(in any) *pbgear.GearVoucher_Call_1400 {
	out := &pbgear.GearVoucher_Call_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucher_Call_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_Call_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_Call_1400_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_Call_1400_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	case 2:
		return &pbgear.GearVoucher_Call_1400_CallUploadCode{
			CallUploadCode: To_GearVoucher_UploadCode(param),
		}
	case 3:
		return &pbgear.GearVoucher_Call_1400_CallDeclineVoucher{
			CallDeclineVoucher: To_GearVoucher_DeclineVoucher(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_CallCall_1010(in any) *pbgear.GearVoucher_CallCall_1010 {
	out := &pbgear.GearVoucher_CallCall_1010{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucher_CallCall_1010_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_GearVoucher_CallCall_1010_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_CallCall_1010(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherCallCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherCallCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_GearVoucher_CallCall_1010_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_CallCall_1010_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_CallCall_1010_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_CallCall_1110(in any) *pbgear.GearVoucher_CallCall_1110 {
	out := &pbgear.GearVoucher_CallCall_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_GearVoucher_CallCall_1110_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_GearVoucher_CallCall_1110_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_CallCall_1110(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherCallCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherCallCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_GearVoucher_CallCall_1110_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_CallCall_1110_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_CallCall_1110_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	case 2:
		return &pbgear.GearVoucher_CallCall_1110_CallUploadCode{
			CallUploadCode: To_GearVoucher_UploadCode(param),
		}
	case 3:
		return &pbgear.GearVoucher_CallCall_1110_CallDeclineVoucher{
			CallDeclineVoucher: To_GearVoucher_DeclineVoucher(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_CallDeprecatedCall_1110(in any) *pbgear.GearVoucher_CallDeprecatedCall_1110 {
	out := &pbgear.GearVoucher_CallDeprecatedCall_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearVoucher_CallDeprecatedCall_1110_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_GearVoucher_CallDeprecatedCall_1110_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_CallDeprecatedCall_1110(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherCallDeprecatedCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherCallDeprecatedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_GearVoucher_CallDeprecatedCall_1110_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_CallDeprecatedCall_1110_CallSendMessage{
			CallSendMessage: To_GearVoucher_SendMessage(param),
		}
	case 1:
		return &pbgear.GearVoucher_CallDeprecatedCall_1110_CallSendReply{
			CallSendReply: To_GearVoucher_SendReply(param),
		}
	case 2:
		return &pbgear.GearVoucher_CallDeprecatedCall_1110_CallUploadCode{
			CallUploadCode: To_GearVoucher_UploadCode(param),
		}
	case 3:
		return &pbgear.GearVoucher_CallDeprecatedCall_1110_CallDeclineVoucher{
			CallDeclineVoucher: To_GearVoucher_DeclineVoucher(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_DeclineCall_1110(in any) *pbgear.GearVoucher_DeclineCall_1110 {
	out := &pbgear.GearVoucher_DeclineCall_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(0))

	return out //from message
}
func To_GearVoucher_DeclineCall_1110_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_DeclineCall_1110(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherDeclineCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherDeclineCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_GearVoucher_IssueCall_210(in any) *pbgear.GearVoucher_IssueCall_210 {
	out := &pbgear.GearVoucher_IssueCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_GearVoucher_IssueCall_210_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))
	// field Program To_GearCoreIdsProgramId(w)
	out.Program = To_GearCoreIdsProgramId(v.ValueAt(1))
	// primitive field Value
	out.Value = To_string(v.ValueAt(2))

	return out //from message
}
func To_GearVoucher_IssueCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_IssueCall_210(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherIssueCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherIssueCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_GearVoucher_IssueCall_210_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_IssueCall_210_ToId{
			ToId: To_GearVoucher_Id(param),
		}
	case 1:
		return &pbgear.GearVoucher_IssueCall_210_ToIndex{
			ToIndex: To_GearVoucher_Index(param),
		}
	case 2:
		return &pbgear.GearVoucher_IssueCall_210_ToRaw{
			ToRaw: To_GearVoucher_Raw(param),
		}
	case 3:
		return &pbgear.GearVoucher_IssueCall_210_ToAddress32{
			ToAddress32: To_GearVoucher_Address32(param),
		}
	case 4:
		return &pbgear.GearVoucher_IssueCall_210_ToAddress20{
			ToAddress20: To_GearVoucher_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_GearVoucher_IssueCall_1110(in any) *pbgear.GearVoucher_IssueCall_1110 {
	out := &pbgear.GearVoucher_IssueCall_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Spender To_SpCoreCryptoAccountId32(w)
	out.Spender = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Balance
	out.Balance = To_string(v.ValueAt(1))
	// optional field Programs true
	if v.HasValue() {
		out.Programs = To_Optional_GearVoucher_IssueCall_1110_programs(v.ValueAt(2))
	}
	// primitive field CodeUploading
	out.CodeUploading = To_bool(v.ValueAt(3))
	// primitive field Duration
	out.Duration = To_uint32(v.ValueAt(4))

	return out //from message
}
func To_GearVoucher_IssueCall_1110_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_IssueCall_1110(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherIssueCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherIssueCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_GearVoucher_IssueCall_1110_programs(in any) *pbgear.BTreeSet {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_GearVoucher_RevokeCall_1110(in any) *pbgear.GearVoucher_RevokeCall_1110 {
	out := &pbgear.GearVoucher_RevokeCall_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Spender To_SpCoreCryptoAccountId32(w)
	out.Spender = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(1))

	return out //from message
}
func To_GearVoucher_RevokeCall_1110_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_RevokeCall_1110(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherRevokeCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherRevokeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_GearVoucher_To_210(in any) *pbgear.GearVoucher_To_210 {
	out := &pbgear.GearVoucher_To_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_GearVoucher_To_210_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_To_210_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_To_210_ToId{
			ToId: To_GearVoucher_Id(param),
		}
	case 1:
		return &pbgear.GearVoucher_To_210_ToIndex{
			ToIndex: To_GearVoucher_Index(param),
		}
	case 2:
		return &pbgear.GearVoucher_To_210_ToRaw{
			ToRaw: To_GearVoucher_Raw(param),
		}
	case 3:
		return &pbgear.GearVoucher_To_210_ToAddress32{
			ToAddress32: To_GearVoucher_Address32(param),
		}
	case 4:
		return &pbgear.GearVoucher_To_210_ToAddress20{
			ToAddress20: To_GearVoucher_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_To_310(in any) *pbgear.GearVoucher_To_310 {
	out := &pbgear.GearVoucher_To_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_GearVoucher_To_310_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_To_310_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_To_310_ToId{
			ToId: To_GearVoucher_Id(param),
		}
	case 1:
		return &pbgear.GearVoucher_To_310_ToIndex{
			ToIndex: To_GearVoucher_Index(param),
		}
	case 2:
		return &pbgear.GearVoucher_To_310_ToRaw{
			ToRaw: To_GearVoucher_Raw(param),
		}
	case 3:
		return &pbgear.GearVoucher_To_310_ToAddress32{
			ToAddress32: To_GearVoucher_Address32(param),
		}
	case 4:
		return &pbgear.GearVoucher_To_310_ToAddress20{
			ToAddress20: To_GearVoucher_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_To_1030(in any) *pbgear.GearVoucher_To_1030 {
	out := &pbgear.GearVoucher_To_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_GearVoucher_To_1030_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearVoucher_To_1030_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_To_1030_ToId{
			ToId: To_GearVoucher_Id(param),
		}
	case 1:
		return &pbgear.GearVoucher_To_1030_ToIndex{
			ToIndex: To_GearVoucher_Index(param),
		}
	case 2:
		return &pbgear.GearVoucher_To_1030_ToRaw{
			ToRaw: To_GearVoucher_Raw(param),
		}
	case 3:
		return &pbgear.GearVoucher_To_1030_ToAddress32{
			ToAddress32: To_GearVoucher_Address32(param),
		}
	case 4:
		return &pbgear.GearVoucher_To_1030_ToAddress20{
			ToAddress20: To_GearVoucher_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearVoucher_UpdateCall_1110(in any) *pbgear.GearVoucher_UpdateCall_1110 {
	out := &pbgear.GearVoucher_UpdateCall_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Spender To_SpCoreCryptoAccountId32(w)
	out.Spender = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// field VoucherId To_GearVoucher_PalletGearVoucherInternalVoucherId(w)
	out.VoucherId = To_GearVoucher_PalletGearVoucherInternalVoucherId(v.ValueAt(1))
	// optional field MoveOwnership true
	if v.HasValue() {
		out.MoveOwnership = To_Optional_GearVoucher_UpdateCall_1110_move_ownership(v.ValueAt(2))
	}
	// primitive field BalanceTopUp
	if v.HasValue() {
		out.BalanceTopUp = To_Optional_string(v.ValueAt(3))
	}
	// oneOf field AppendPrograms
	v4 := To_OneOf_GearVoucher_UpdateCall_1110_append_programs(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("AppendPrograms").Set(reflect.ValueOf(v4))
	// primitive field CodeUploading
	if v.HasValue() {
		out.CodeUploading = To_Optional_bool(v.ValueAt(5))
	}
	// primitive field ProlongDuration
	if v.HasValue() {
		out.ProlongDuration = To_Optional_uint32(v.ValueAt(6))
	}

	return out //from message
}
func To_GearVoucher_UpdateCall_1110_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_GearVoucher_UpdateCall_1110(in)
	out := &pbgearextrinsic.Extrinsic_GearvoucherUpdateCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearvoucherUpdateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_GearVoucher_UpdateCall_1110_move_ownership(in any) *pbgear.SpCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_GearVoucher_UpdateCall_1110_append_programs(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearVoucher_UpdateCall_1110_AppendProgramsNone{
			AppendProgramsNone: To_GearVoucher_None(param),
		}
	case 1:
		return &pbgear.GearVoucher_UpdateCall_1110_AppendProgramsSome{
			AppendProgramsSome: To_GearVoucher_Some(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_100(in any) *pbgear.GearPallet_100 {
	out := &pbgear.GearPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_100_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_100_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_100_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_100_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_100_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_100_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_100_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_100_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_140(in any) *pbgear.GearPallet_140 {
	out := &pbgear.GearPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_140_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_140_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_140_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_140_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_140_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_140_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_140_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_140_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_210(in any) *pbgear.GearPallet_210 {
	out := &pbgear.GearPallet_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_210_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_210_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_210_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_210_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_210_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_210_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_210_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_210_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	case 8:
		return &pbgear.GearPallet_210_CallPayProgramRentCall{
			CallPayProgramRentCall: To_Gear_PayProgramRentCall(param),
		}
	case 9:
		return &pbgear.GearPallet_210_CallResumeSessionInitCall{
			CallResumeSessionInitCall: To_Gear_ResumeSessionInitCall(param),
		}
	case 10:
		return &pbgear.GearPallet_210_CallResumeSessionPushCall{
			CallResumeSessionPushCall: To_Gear_ResumeSessionPushCall(param),
		}
	case 11:
		return &pbgear.GearPallet_210_CallResumeSessionCommitCall{
			CallResumeSessionCommitCall: To_Gear_ResumeSessionCommitCall(param),
		}
	case 12:
		return &pbgear.GearPallet_210_CallSendMessageWithVoucherCall{
			CallSendMessageWithVoucherCall: To_Gear_SendMessageWithVoucherCall(param),
		}
	case 13:
		return &pbgear.GearPallet_210_CallSendReplyWithVoucherCall{
			CallSendReplyWithVoucherCall: To_Gear_SendReplyWithVoucherCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_310(in any) *pbgear.GearPallet_310 {
	out := &pbgear.GearPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_310_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_310_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_310_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_310_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_310_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_310_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_310_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_310_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	case 8:
		return &pbgear.GearPallet_310_CallPayProgramRentCall{
			CallPayProgramRentCall: To_Gear_PayProgramRentCall(param),
		}
	case 9:
		return &pbgear.GearPallet_310_CallResumeSessionInitCall{
			CallResumeSessionInitCall: To_Gear_ResumeSessionInitCall(param),
		}
	case 10:
		return &pbgear.GearPallet_310_CallResumeSessionPushCall{
			CallResumeSessionPushCall: To_Gear_ResumeSessionPushCall(param),
		}
	case 11:
		return &pbgear.GearPallet_310_CallResumeSessionCommitCall{
			CallResumeSessionCommitCall: To_Gear_ResumeSessionCommitCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_1030(in any) *pbgear.GearPallet_1030 {
	out := &pbgear.GearPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_1030_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_1030_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_1030_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_1030_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_1030_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_1030_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_1030_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_1030_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	case 8:
		return &pbgear.GearPallet_1030_CallPayProgramRentCall{
			CallPayProgramRentCall: To_Gear_PayProgramRentCall(param),
		}
	case 9:
		return &pbgear.GearPallet_1030_CallResumeSessionInitCall{
			CallResumeSessionInitCall: To_Gear_ResumeSessionInitCall(param),
		}
	case 10:
		return &pbgear.GearPallet_1030_CallResumeSessionPushCall{
			CallResumeSessionPushCall: To_Gear_ResumeSessionPushCall(param),
		}
	case 11:
		return &pbgear.GearPallet_1030_CallResumeSessionCommitCall{
			CallResumeSessionCommitCall: To_Gear_ResumeSessionCommitCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_1040(in any) *pbgear.GearPallet_1040 {
	out := &pbgear.GearPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_1040_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_1040_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_1040_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_1040_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_1040_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_1040_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_1040_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_1040_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	case 8:
		return &pbgear.GearPallet_1040_CallPayProgramRentCall{
			CallPayProgramRentCall: To_Gear_PayProgramRentCall(param),
		}
	case 9:
		return &pbgear.GearPallet_1040_CallResumeSessionInitCall{
			CallResumeSessionInitCall: To_Gear_ResumeSessionInitCall(param),
		}
	case 10:
		return &pbgear.GearPallet_1040_CallResumeSessionPushCall{
			CallResumeSessionPushCall: To_Gear_ResumeSessionPushCall(param),
		}
	case 11:
		return &pbgear.GearPallet_1040_CallResumeSessionCommitCall{
			CallResumeSessionCommitCall: To_Gear_ResumeSessionCommitCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_1110(in any) *pbgear.GearPallet_1110 {
	out := &pbgear.GearPallet_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_1110_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_1110_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_1110_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_1110_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_1110_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_1110_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_1110_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_1110_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_1110_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_1110_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearPallet_1400(in any) *pbgear.GearPallet_1400 {
	out := &pbgear.GearPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GearPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GearPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearPallet_1400_CallUploadCodeCall{
			CallUploadCodeCall: To_Gear_UploadCodeCall(param),
		}
	case 1:
		return &pbgear.GearPallet_1400_CallUploadProgramCall{
			CallUploadProgramCall: To_Gear_UploadProgramCall(param),
		}
	case 2:
		return &pbgear.GearPallet_1400_CallCreateProgramCall{
			CallCreateProgramCall: To_Gear_CreateProgramCall(param),
		}
	case 3:
		return &pbgear.GearPallet_1400_CallSendMessageCall{
			CallSendMessageCall: To_Gear_SendMessageCall(param),
		}
	case 4:
		return &pbgear.GearPallet_1400_CallSendReplyCall{
			CallSendReplyCall: To_Gear_SendReplyCall(param),
		}
	case 5:
		return &pbgear.GearPallet_1400_CallClaimValueCall{
			CallClaimValueCall: To_Gear_ClaimValueCall(param),
		}
	case 6:
		return &pbgear.GearPallet_1400_CallRunCall{
			CallRunCall: To_Gear_RunCall(param),
		}
	case 7:
		return &pbgear.GearPallet_1400_CallSetExecuteInherentCall{
			CallSetExecuteInherentCall: To_Gear_SetExecuteInherentCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Gear_ClaimValueCall_100(in any) *pbgear.Gear_ClaimValueCall_100 {
	out := &pbgear.Gear_ClaimValueCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field MessageId To_Gear_GearCoreIdsMessageId(w)
	out.MessageId = To_Gear_GearCoreIdsMessageId(v.ValueAt(0))

	return out //from message
}
func To_Gear_ClaimValueCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_ClaimValueCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GearClaimValueCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearClaimValueCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_ClaimValueCall_1420(in any) *pbgear.Gear_ClaimValueCall_1420 {
	out := &pbgear.Gear_ClaimValueCall_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field MessageId To_GprimitivesMessageId(w)
	out.MessageId = To_GprimitivesMessageId(v.ValueAt(0))

	return out //from message
}
func To_Gear_ClaimValueCall_1420_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_ClaimValueCall_1420(in)
	out := &pbgearextrinsic.Extrinsic_GearClaimValueCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearClaimValueCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_CreateProgramCall_100(in any) *pbgear.Gear_CreateProgramCall_100 {
	out := &pbgear.Gear_CreateProgramCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field CodeId To_Gear_GearCoreIdsCodeId(w)
	out.CodeId = To_Gear_GearCoreIdsCodeId(v.ValueAt(0))
	// primitive field Salt
	out.Salt = To_bytes(v.ValueAt(1))
	// primitive field InitPayload
	out.InitPayload = To_bytes(v.ValueAt(2))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))

	return out //from message
}
func To_Gear_CreateProgramCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_CreateProgramCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GearCreateProgramCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearCreateProgramCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_CreateProgramCall_1010(in any) *pbgear.Gear_CreateProgramCall_1010 {
	out := &pbgear.Gear_CreateProgramCall_1010{}
	v := in.(registry.Valuable)
	_ = v

	// field CodeId To_Gear_GearCoreIdsCodeId(w)
	out.CodeId = To_Gear_GearCoreIdsCodeId(v.ValueAt(0))
	// primitive field Salt
	out.Salt = To_bytes(v.ValueAt(1))
	// primitive field InitPayload
	out.InitPayload = To_bytes(v.ValueAt(2))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(5))

	return out //from message
}
func To_Gear_CreateProgramCall_1010_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_CreateProgramCall_1010(in)
	out := &pbgearextrinsic.Extrinsic_GearCreateProgramCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearCreateProgramCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_CreateProgramCall_1420(in any) *pbgear.Gear_CreateProgramCall_1420 {
	out := &pbgear.Gear_CreateProgramCall_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field CodeId To_GprimitivesCodeId(w)
	out.CodeId = To_GprimitivesCodeId(v.ValueAt(0))
	// primitive field Salt
	out.Salt = To_bytes(v.ValueAt(1))
	// primitive field InitPayload
	out.InitPayload = To_bytes(v.ValueAt(2))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(5))

	return out //from message
}
func To_Gear_CreateProgramCall_1420_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_CreateProgramCall_1420(in)
	out := &pbgearextrinsic.Extrinsic_GearCreateProgramCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearCreateProgramCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_GearCoreBufferLimitedVec_210(in any) *pbgear.Gear_GearCoreBufferLimitedVec_210 {
	out := &pbgear.Gear_GearCoreBufferLimitedVec_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreBufferLimitedVec_310(in any) *pbgear.Gear_GearCoreBufferLimitedVec_310 {
	out := &pbgear.Gear_GearCoreBufferLimitedVec_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreBufferLimitedVec_1030(in any) *pbgear.Gear_GearCoreBufferLimitedVec_1030 {
	out := &pbgear.Gear_GearCoreBufferLimitedVec_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreBufferLimitedVec_1040(in any) *pbgear.Gear_GearCoreBufferLimitedVec_1040 {
	out := &pbgear.Gear_GearCoreBufferLimitedVec_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsCodeId_100(in any) *pbgear.Gear_GearCoreIdsCodeId_100 {
	out := &pbgear.Gear_GearCoreIdsCodeId_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsCodeId_140(in any) *pbgear.Gear_GearCoreIdsCodeId_140 {
	out := &pbgear.Gear_GearCoreIdsCodeId_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsCodeId_210(in any) *pbgear.Gear_GearCoreIdsCodeId_210 {
	out := &pbgear.Gear_GearCoreIdsCodeId_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsCodeId_310(in any) *pbgear.Gear_GearCoreIdsCodeId_310 {
	out := &pbgear.Gear_GearCoreIdsCodeId_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsCodeId_1030(in any) *pbgear.Gear_GearCoreIdsCodeId_1030 {
	out := &pbgear.Gear_GearCoreIdsCodeId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsCodeId_1040(in any) *pbgear.Gear_GearCoreIdsCodeId_1040 {
	out := &pbgear.Gear_GearCoreIdsCodeId_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsCodeId_1400(in any) *pbgear.Gear_GearCoreIdsCodeId_1400 {
	out := &pbgear.Gear_GearCoreIdsCodeId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsMessageId_100(in any) *pbgear.Gear_GearCoreIdsMessageId_100 {
	out := &pbgear.Gear_GearCoreIdsMessageId_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsMessageId_140(in any) *pbgear.Gear_GearCoreIdsMessageId_140 {
	out := &pbgear.Gear_GearCoreIdsMessageId_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsMessageId_210(in any) *pbgear.Gear_GearCoreIdsMessageId_210 {
	out := &pbgear.Gear_GearCoreIdsMessageId_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsMessageId_310(in any) *pbgear.Gear_GearCoreIdsMessageId_310 {
	out := &pbgear.Gear_GearCoreIdsMessageId_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsMessageId_1030(in any) *pbgear.Gear_GearCoreIdsMessageId_1030 {
	out := &pbgear.Gear_GearCoreIdsMessageId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsMessageId_1040(in any) *pbgear.Gear_GearCoreIdsMessageId_1040 {
	out := &pbgear.Gear_GearCoreIdsMessageId_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsMessageId_1400(in any) *pbgear.Gear_GearCoreIdsMessageId_1400 {
	out := &pbgear.Gear_GearCoreIdsMessageId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsProgramId_100(in any) *pbgear.Gear_GearCoreIdsProgramId_100 {
	out := &pbgear.Gear_GearCoreIdsProgramId_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsProgramId_140(in any) *pbgear.Gear_GearCoreIdsProgramId_140 {
	out := &pbgear.Gear_GearCoreIdsProgramId_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsProgramId_210(in any) *pbgear.Gear_GearCoreIdsProgramId_210 {
	out := &pbgear.Gear_GearCoreIdsProgramId_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsProgramId_310(in any) *pbgear.Gear_GearCoreIdsProgramId_310 {
	out := &pbgear.Gear_GearCoreIdsProgramId_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsProgramId_1030(in any) *pbgear.Gear_GearCoreIdsProgramId_1030 {
	out := &pbgear.Gear_GearCoreIdsProgramId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsProgramId_1040(in any) *pbgear.Gear_GearCoreIdsProgramId_1040 {
	out := &pbgear.Gear_GearCoreIdsProgramId_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreIdsProgramId_1400(in any) *pbgear.Gear_GearCoreIdsProgramId_1400 {
	out := &pbgear.Gear_GearCoreIdsProgramId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreMemoryGearPage_210(in any) *pbgear.Gear_GearCoreMemoryGearPage_210 {
	out := &pbgear.Gear_GearCoreMemoryGearPage_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreMemoryPageBuf_210(in any) *pbgear.Gear_GearCoreMemoryPageBuf_210 {
	out := &pbgear.Gear_GearCoreMemoryPageBuf_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCoreBufferLimitedVec(w)
	out.Value0 = To_Gear_GearCoreBufferLimitedVec(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreMemoryPageBuf_310(in any) *pbgear.Gear_GearCoreMemoryPageBuf_310 {
	out := &pbgear.Gear_GearCoreMemoryPageBuf_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCoreBufferLimitedVec(w)
	out.Value0 = To_Gear_GearCoreBufferLimitedVec(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreMemoryPageBuf_1030(in any) *pbgear.Gear_GearCoreMemoryPageBuf_1030 {
	out := &pbgear.Gear_GearCoreMemoryPageBuf_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCoreBufferLimitedVec(w)
	out.Value0 = To_Gear_GearCoreBufferLimitedVec(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreMemoryPageBuf_1040(in any) *pbgear.Gear_GearCoreMemoryPageBuf_1040 {
	out := &pbgear.Gear_GearCoreMemoryPageBuf_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCoreBufferLimitedVec(w)
	out.Value0 = To_Gear_GearCoreBufferLimitedVec(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCoreMemoryWasmPage_210(in any) *pbgear.Gear_GearCoreMemoryWasmPage_210 {
	out := &pbgear.Gear_GearCoreMemoryWasmPage_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCorePagesGearPage_310(in any) *pbgear.Gear_GearCorePagesGearPage_310 {
	out := &pbgear.Gear_GearCorePagesGearPage_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCorePagesGearPage_1030(in any) *pbgear.Gear_GearCorePagesGearPage_1030 {
	out := &pbgear.Gear_GearCorePagesGearPage_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCorePagesGearPage_1040(in any) *pbgear.Gear_GearCorePagesGearPage_1040 {
	out := &pbgear.Gear_GearCorePagesGearPage_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCorePagesWasmPage_310(in any) *pbgear.Gear_GearCorePagesWasmPage_310 {
	out := &pbgear.Gear_GearCorePagesWasmPage_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCorePagesWasmPage_1030(in any) *pbgear.Gear_GearCorePagesWasmPage_1030 {
	out := &pbgear.Gear_GearCorePagesWasmPage_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Gear_GearCorePagesWasmPage_1040(in any) *pbgear.Gear_GearCorePagesWasmPage_1040 {
	out := &pbgear.Gear_GearCorePagesWasmPage_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Gear_GearCorePagesWasmPage(w)
	out.Value0 = To_Gear_GearCorePagesWasmPage(v.ValueAt(0))

	return out //from message
}

func To_Gear_PayProgramRentCall_210(in any) *pbgear.Gear_PayProgramRentCall_210 {
	out := &pbgear.Gear_PayProgramRentCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// field ProgramId To_Gear_GearCoreIdsProgramId(w)
	out.ProgramId = To_Gear_GearCoreIdsProgramId(v.ValueAt(0))
	// primitive field BlockCount
	out.BlockCount = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Gear_PayProgramRentCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_PayProgramRentCall_210(in)
	out := &pbgearextrinsic.Extrinsic_GearPayProgramRentCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearPayProgramRentCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_ResumeSessionCommitCall_210(in any) *pbgear.Gear_ResumeSessionCommitCall_210 {
	out := &pbgear.Gear_ResumeSessionCommitCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SessionId
	out.SessionId = To_string(v.ValueAt(0))
	// primitive field BlockCount
	out.BlockCount = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Gear_ResumeSessionCommitCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_ResumeSessionCommitCall_210(in)
	out := &pbgearextrinsic.Extrinsic_GearResumeSessionCommitCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearResumeSessionCommitCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_ResumeSessionInitCall_210(in any) *pbgear.Gear_ResumeSessionInitCall_210 {
	out := &pbgear.Gear_ResumeSessionInitCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// field ProgramId To_Gear_GearCoreIdsProgramId(w)
	out.ProgramId = To_Gear_GearCoreIdsProgramId(v.ValueAt(0))
	// field Allocations To_BTreeSet(w)
	out.Allocations = To_BTreeSet(v.ValueAt(1))
	// field CodeHash To_Gear_GearCoreIdsCodeId(w)
	out.CodeHash = To_Gear_GearCoreIdsCodeId(v.ValueAt(2))

	return out //from message
}
func To_Gear_ResumeSessionInitCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_ResumeSessionInitCall_210(in)
	out := &pbgearextrinsic.Extrinsic_GearResumeSessionInitCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearResumeSessionInitCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_ResumeSessionPushCall_210(in any) *pbgear.Gear_ResumeSessionPushCall_210 {
	out := &pbgear.Gear_ResumeSessionPushCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SessionId
	out.SessionId = To_string(v.ValueAt(0))
	// repeated field MemoryPages
	out.MemoryPages = To_Repeated_Gear_ResumeSessionPushCall_210_memory_pages(v.ValueAt(1))

	return out //from message
}
func To_Gear_ResumeSessionPushCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_ResumeSessionPushCall_210(in)
	out := &pbgearextrinsic.Extrinsic_GearResumeSessionPushCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearResumeSessionPushCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Gear_ResumeSessionPushCall_210_memory_pages(in any) []*pbgear.Gear_TupleGearCoreMemoryGearPagegearCoreMemoryPageBuf {
	items := in.([]interface{})

	var out []*pbgear.Gear_TupleGearCoreMemoryGearPagegearCoreMemoryPageBuf
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Gear_TupleGearCoreMemoryGearPagegearCoreMemoryPageBuf(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Gear_ResumeSessionPushCall_310(in any) *pbgear.Gear_ResumeSessionPushCall_310 {
	out := &pbgear.Gear_ResumeSessionPushCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SessionId
	out.SessionId = To_string(v.ValueAt(0))
	// repeated field MemoryPages
	out.MemoryPages = To_Repeated_Gear_ResumeSessionPushCall_310_memory_pages(v.ValueAt(1))

	return out //from message
}
func To_Gear_ResumeSessionPushCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_ResumeSessionPushCall_310(in)
	out := &pbgearextrinsic.Extrinsic_GearResumeSessionPushCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearResumeSessionPushCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Gear_ResumeSessionPushCall_310_memory_pages(in any) []*pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf {
	items := in.([]interface{})

	var out []*pbgear.Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Gear_TupleGearCorePagesGearPagegearCoreMemoryPageBuf(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Gear_RunCall_100(in any) *pbgear.Gear_RunCall_100 {
	out := &pbgear.Gear_RunCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Gear_RunCall_310(in any) *pbgear.Gear_RunCall_310 {
	out := &pbgear.Gear_RunCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MaxGas
	if v.HasValue() {
		out.MaxGas = To_Optional_uint64(v.ValueAt(0))
	}

	return out //from message
}
func To_Gear_RunCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_RunCall_310(in)
	out := &pbgearextrinsic.Extrinsic_GearRunCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearRunCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendMessageCall_100(in any) *pbgear.Gear_SendMessageCall_100 {
	out := &pbgear.Gear_SendMessageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Destination To_Gear_GearCoreIdsProgramId(w)
	out.Destination = To_Gear_GearCoreIdsProgramId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))

	return out //from message
}
func To_Gear_SendMessageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendMessageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GearSendMessageCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendMessageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendMessageCall_310(in any) *pbgear.Gear_SendMessageCall_310 {
	out := &pbgear.Gear_SendMessageCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Destination To_Gear_GearCoreIdsProgramId(w)
	out.Destination = To_Gear_GearCoreIdsProgramId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field Prepaid
	out.Prepaid = To_bool(v.ValueAt(4))

	return out //from message
}
func To_Gear_SendMessageCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendMessageCall_310(in)
	out := &pbgearextrinsic.Extrinsic_GearSendMessageCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendMessageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendMessageCall_1010(in any) *pbgear.Gear_SendMessageCall_1010 {
	out := &pbgear.Gear_SendMessageCall_1010{}
	v := in.(registry.Valuable)
	_ = v

	// field Destination To_Gear_GearCoreIdsProgramId(w)
	out.Destination = To_Gear_GearCoreIdsProgramId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}
func To_Gear_SendMessageCall_1010_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendMessageCall_1010(in)
	out := &pbgearextrinsic.Extrinsic_GearSendMessageCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendMessageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendMessageCall_1420(in any) *pbgear.Gear_SendMessageCall_1420 {
	out := &pbgear.Gear_SendMessageCall_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Destination To_GprimitivesActorId(w)
	out.Destination = To_GprimitivesActorId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}
func To_Gear_SendMessageCall_1420_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendMessageCall_1420(in)
	out := &pbgearextrinsic.Extrinsic_GearSendMessageCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendMessageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendMessageWithVoucherCall_210(in any) *pbgear.Gear_SendMessageWithVoucherCall_210 {
	out := &pbgear.Gear_SendMessageWithVoucherCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Destination To_Gear_GearCoreIdsProgramId(w)
	out.Destination = To_Gear_GearCoreIdsProgramId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))

	return out //from message
}
func To_Gear_SendMessageWithVoucherCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendMessageWithVoucherCall_210(in)
	out := &pbgearextrinsic.Extrinsic_GearSendMessageWithVoucherCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendMessageWithVoucherCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendReplyCall_100(in any) *pbgear.Gear_SendReplyCall_100 {
	out := &pbgear.Gear_SendReplyCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field ReplyToId To_Gear_GearCoreIdsMessageId(w)
	out.ReplyToId = To_Gear_GearCoreIdsMessageId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))

	return out //from message
}
func To_Gear_SendReplyCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendReplyCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GearSendReplyCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendReplyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendReplyCall_310(in any) *pbgear.Gear_SendReplyCall_310 {
	out := &pbgear.Gear_SendReplyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// field ReplyToId To_Gear_GearCoreIdsMessageId(w)
	out.ReplyToId = To_Gear_GearCoreIdsMessageId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field Prepaid
	out.Prepaid = To_bool(v.ValueAt(4))

	return out //from message
}
func To_Gear_SendReplyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendReplyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_GearSendReplyCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendReplyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendReplyCall_1010(in any) *pbgear.Gear_SendReplyCall_1010 {
	out := &pbgear.Gear_SendReplyCall_1010{}
	v := in.(registry.Valuable)
	_ = v

	// field ReplyToId To_Gear_GearCoreIdsMessageId(w)
	out.ReplyToId = To_Gear_GearCoreIdsMessageId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}
func To_Gear_SendReplyCall_1010_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendReplyCall_1010(in)
	out := &pbgearextrinsic.Extrinsic_GearSendReplyCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendReplyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendReplyCall_1420(in any) *pbgear.Gear_SendReplyCall_1420 {
	out := &pbgear.Gear_SendReplyCall_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field ReplyToId To_GprimitivesMessageId(w)
	out.ReplyToId = To_GprimitivesMessageId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(4))

	return out //from message
}
func To_Gear_SendReplyCall_1420_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendReplyCall_1420(in)
	out := &pbgearextrinsic.Extrinsic_GearSendReplyCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendReplyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SendReplyWithVoucherCall_210(in any) *pbgear.Gear_SendReplyWithVoucherCall_210 {
	out := &pbgear.Gear_SendReplyWithVoucherCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// field ReplyToId To_Gear_GearCoreIdsMessageId(w)
	out.ReplyToId = To_Gear_GearCoreIdsMessageId(v.ValueAt(0))
	// primitive field Payload
	out.Payload = To_bytes(v.ValueAt(1))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(2))
	// primitive field Value
	out.Value = To_string(v.ValueAt(3))

	return out //from message
}
func To_Gear_SendReplyWithVoucherCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SendReplyWithVoucherCall_210(in)
	out := &pbgearextrinsic.Extrinsic_GearSendReplyWithVoucherCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSendReplyWithVoucherCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_SetExecuteInherentCall_100(in any) *pbgear.Gear_SetExecuteInherentCall_100 {
	out := &pbgear.Gear_SetExecuteInherentCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value
	out.Value = To_bool(v.ValueAt(0))

	return out //from message
}
func To_Gear_SetExecuteInherentCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_SetExecuteInherentCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GearSetExecuteInherentCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearSetExecuteInherentCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_UploadCodeCall_100(in any) *pbgear.Gear_UploadCodeCall_100 {
	out := &pbgear.Gear_UploadCodeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Code
	out.Code = To_bytes(v.ValueAt(0))

	return out //from message
}
func To_Gear_UploadCodeCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_UploadCodeCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GearUploadCodeCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearUploadCodeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_UploadProgramCall_100(in any) *pbgear.Gear_UploadProgramCall_100 {
	out := &pbgear.Gear_UploadProgramCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Code
	out.Code = To_bytes(v.ValueAt(0))
	// primitive field Salt
	out.Salt = To_bytes(v.ValueAt(1))
	// primitive field InitPayload
	out.InitPayload = To_bytes(v.ValueAt(2))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))

	return out //from message
}
func To_Gear_UploadProgramCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_UploadProgramCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GearUploadProgramCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearUploadProgramCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Gear_UploadProgramCall_1010(in any) *pbgear.Gear_UploadProgramCall_1010 {
	out := &pbgear.Gear_UploadProgramCall_1010{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Code
	out.Code = To_bytes(v.ValueAt(0))
	// primitive field Salt
	out.Salt = To_bytes(v.ValueAt(1))
	// primitive field InitPayload
	out.InitPayload = To_bytes(v.ValueAt(2))
	// primitive field GasLimit
	out.GasLimit = To_uint64(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// primitive field KeepAlive
	out.KeepAlive = To_bool(v.ValueAt(5))

	return out //from message
}
func To_Gear_UploadProgramCall_1010_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Gear_UploadProgramCall_1010(in)
	out := &pbgearextrinsic.Extrinsic_GearUploadProgramCall{}
	reflect.ValueOf(out).Elem().FieldByName("GearUploadProgramCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_GeneralAdmin_100(in any) *pbgear.GeneralAdmin_100 {
	out := &pbgear.GeneralAdmin_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Governance_1030(in any) *pbgear.Governance_1030 {
	out := &pbgear.Governance_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Grandpa_GrandpaTrieNodesList_100(in any) *pbgear.Grandpa_GrandpaTrieNodesList_100 {
	out := &pbgear.Grandpa_GrandpaTrieNodesList_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_GrandpaTrieNodesList_310(in any) *pbgear.Grandpa_GrandpaTrieNodesList_310 {
	out := &pbgear.Grandpa_GrandpaTrieNodesList_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_GrandpaTrieNodesList_1030(in any) *pbgear.Grandpa_GrandpaTrieNodesList_1030 {
	out := &pbgear.Grandpa_GrandpaTrieNodesList_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_GrandpaTrieNodesList_1400(in any) *pbgear.Grandpa_GrandpaTrieNodesList_1400 {
	out := &pbgear.Grandpa_GrandpaTrieNodesList_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field TrieNodes
	out.TrieNodes = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_Precommit_100(in any) *pbgear.Grandpa_Precommit_100 {
	out := &pbgear.Grandpa_Precommit_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaEquivocation(w)
	out.Value0 = To_Grandpa_FinalityGrandpaEquivocation(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_Prevote_100(in any) *pbgear.Grandpa_Prevote_100 {
	out := &pbgear.Grandpa_Prevote_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaEquivocation(w)
	out.Value0 = To_Grandpa_FinalityGrandpaEquivocation(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_140(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_140 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrecommit(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrecommit(v.ValueAt(0))
	// field Value1 To_Grandpa_SpConsensusGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpConsensusGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_310(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_310 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrecommit(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrecommit(v.ValueAt(0))
	// field Value1 To_Grandpa_SpConsensusGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpConsensusGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_1030(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_1030 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrecommit(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrecommit(v.ValueAt(0))
	// field Value1 To_Grandpa_SpConsensusGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpConsensusGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrecommitspFinalityGrandpaAppSignature_100(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrecommitspFinalityGrandpaAppSignature_100 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrecommitspFinalityGrandpaAppSignature_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrecommit(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrecommit(v.ValueAt(0))
	// field Value1 To_Grandpa_SpFinalityGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpFinalityGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_140(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_140 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrevote(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrevote(v.ValueAt(0))
	// field Value1 To_Grandpa_SpConsensusGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpConsensusGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_310(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_310 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrevote(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrevote(v.ValueAt(0))
	// field Value1 To_Grandpa_SpConsensusGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpConsensusGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_1030(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_1030 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrevote(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrevote(v.ValueAt(0))
	// field Value1 To_Grandpa_SpConsensusGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpConsensusGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_TupleFinalityGrandpaPrevotespFinalityGrandpaAppSignature_100(in any) *pbgear.Grandpa_TupleFinalityGrandpaPrevotespFinalityGrandpaAppSignature_100 {
	out := &pbgear.Grandpa_TupleFinalityGrandpaPrevotespFinalityGrandpaAppSignature_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Grandpa_FinalityGrandpaPrevote(w)
	out.Value0 = To_Grandpa_FinalityGrandpaPrevote(v.ValueAt(0))
	// field Value1 To_Grandpa_SpFinalityGrandpaAppSignature(w)
	out.Value1 = To_Grandpa_SpFinalityGrandpaAppSignature(v.ValueAt(1))

	return out //from message
}

func To_GrandpaPallet_100(in any) *pbgear.GrandpaPallet_100 {
	out := &pbgear.GrandpaPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GrandpaPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GrandpaPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GrandpaPallet_100_CallReportEquivocationCall{
			CallReportEquivocationCall: To_Grandpa_ReportEquivocationCall(param),
		}
	case 1:
		return &pbgear.GrandpaPallet_100_CallReportEquivocationUnsignedCall{
			CallReportEquivocationUnsignedCall: To_Grandpa_ReportEquivocationUnsignedCall(param),
		}
	case 2:
		return &pbgear.GrandpaPallet_100_CallNoteStalledCall{
			CallNoteStalledCall: To_Grandpa_NoteStalledCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GrandpaPallet_310(in any) *pbgear.GrandpaPallet_310 {
	out := &pbgear.GrandpaPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GrandpaPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GrandpaPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GrandpaPallet_310_CallReportEquivocationCall{
			CallReportEquivocationCall: To_Grandpa_ReportEquivocationCall(param),
		}
	case 1:
		return &pbgear.GrandpaPallet_310_CallReportEquivocationUnsignedCall{
			CallReportEquivocationUnsignedCall: To_Grandpa_ReportEquivocationUnsignedCall(param),
		}
	case 2:
		return &pbgear.GrandpaPallet_310_CallNoteStalledCall{
			CallNoteStalledCall: To_Grandpa_NoteStalledCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GrandpaPallet_1030(in any) *pbgear.GrandpaPallet_1030 {
	out := &pbgear.GrandpaPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_GrandpaPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_GrandpaPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GrandpaPallet_1030_CallReportEquivocationCall{
			CallReportEquivocationCall: To_Grandpa_ReportEquivocationCall(param),
		}
	case 1:
		return &pbgear.GrandpaPallet_1030_CallReportEquivocationUnsignedCall{
			CallReportEquivocationUnsignedCall: To_Grandpa_ReportEquivocationUnsignedCall(param),
		}
	case 2:
		return &pbgear.GrandpaPallet_1030_CallNoteStalledCall{
			CallNoteStalledCall: To_Grandpa_NoteStalledCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_Equivocation_100(in any) *pbgear.Grandpa_Equivocation_100 {
	out := &pbgear.Grandpa_Equivocation_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Equivocation
	v0 := To_OneOf_Grandpa_Equivocation_100_equivocation(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Equivocation").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Grandpa_Equivocation_100_equivocation(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Grandpa_Equivocation_100_EquivocationPrevote{
			EquivocationPrevote: To_Grandpa_Prevote(param),
		}
	case 1:
		return &pbgear.Grandpa_Equivocation_100_EquivocationPrecommit{
			EquivocationPrecommit: To_Grandpa_Precommit(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_Equivocation_310(in any) *pbgear.Grandpa_Equivocation_310 {
	out := &pbgear.Grandpa_Equivocation_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Equivocation
	v0 := To_OneOf_Grandpa_Equivocation_310_equivocation(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Equivocation").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Grandpa_Equivocation_310_equivocation(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Grandpa_Equivocation_310_EquivocationPrevote{
			EquivocationPrevote: To_Grandpa_Prevote(param),
		}
	case 1:
		return &pbgear.Grandpa_Equivocation_310_EquivocationPrecommit{
			EquivocationPrecommit: To_Grandpa_Precommit(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_Equivocation_1030(in any) *pbgear.Grandpa_Equivocation_1030 {
	out := &pbgear.Grandpa_Equivocation_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Equivocation
	v0 := To_OneOf_Grandpa_Equivocation_1030_equivocation(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Equivocation").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Grandpa_Equivocation_1030_equivocation(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Grandpa_Equivocation_1030_EquivocationPrevote{
			EquivocationPrevote: To_Grandpa_Prevote(param),
		}
	case 1:
		return &pbgear.Grandpa_Equivocation_1030_EquivocationPrecommit{
			EquivocationPrecommit: To_Grandpa_Precommit(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_FinalityGrandpaEquivocation_100(in any) *pbgear.Grandpa_FinalityGrandpaEquivocation_100 {
	out := &pbgear.Grandpa_FinalityGrandpaEquivocation_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RoundNumber
	out.RoundNumber = To_uint64(v.ValueAt(0))
	// field Identity To_Grandpa_SpFinalityGrandpaAppPublic(w)
	out.Identity = To_Grandpa_SpFinalityGrandpaAppPublic(v.ValueAt(1))
	// field First To_Grandpa_TupleFinalityGrandpaPrevotespFinalityGrandpaAppSignature(w)
	out.First = To_Grandpa_TupleFinalityGrandpaPrevotespFinalityGrandpaAppSignature(v.ValueAt(2))
	// field Second To_Grandpa_TupleFinalityGrandpaPrevotespFinalityGrandpaAppSignature(w)
	out.Second = To_Grandpa_TupleFinalityGrandpaPrevotespFinalityGrandpaAppSignature(v.ValueAt(3))

	return out //from message
}

func To_Grandpa_FinalityGrandpaEquivocation_140(in any) *pbgear.Grandpa_FinalityGrandpaEquivocation_140 {
	out := &pbgear.Grandpa_FinalityGrandpaEquivocation_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RoundNumber
	out.RoundNumber = To_uint64(v.ValueAt(0))
	// field Identity To_Grandpa_SpConsensusGrandpaAppPublic(w)
	out.Identity = To_Grandpa_SpConsensusGrandpaAppPublic(v.ValueAt(1))
	// field First To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(w)
	out.First = To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(v.ValueAt(2))
	// field Second To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(w)
	out.Second = To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(v.ValueAt(3))

	return out //from message
}

func To_Grandpa_FinalityGrandpaEquivocation_310(in any) *pbgear.Grandpa_FinalityGrandpaEquivocation_310 {
	out := &pbgear.Grandpa_FinalityGrandpaEquivocation_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RoundNumber
	out.RoundNumber = To_uint64(v.ValueAt(0))
	// field Identity To_Grandpa_SpConsensusGrandpaAppPublic(w)
	out.Identity = To_Grandpa_SpConsensusGrandpaAppPublic(v.ValueAt(1))
	// field First To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(w)
	out.First = To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(v.ValueAt(2))
	// field Second To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(w)
	out.Second = To_Grandpa_TupleFinalityGrandpaPrevotespConsensusGrandpaAppSignature(v.ValueAt(3))

	return out //from message
}

func To_Grandpa_FinalityGrandpaEquivocation_1030(in any) *pbgear.Grandpa_FinalityGrandpaEquivocation_1030 {
	out := &pbgear.Grandpa_FinalityGrandpaEquivocation_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RoundNumber
	out.RoundNumber = To_uint64(v.ValueAt(0))
	// field Identity To_Grandpa_SpConsensusGrandpaAppPublic(w)
	out.Identity = To_Grandpa_SpConsensusGrandpaAppPublic(v.ValueAt(1))
	// field First To_Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature(w)
	out.First = To_Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature(v.ValueAt(2))
	// field Second To_Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature(w)
	out.Second = To_Grandpa_TupleFinalityGrandpaPrecommitspConsensusGrandpaAppSignature(v.ValueAt(3))

	return out //from message
}

func To_Grandpa_FinalityGrandpaPrecommit_100(in any) *pbgear.Grandpa_FinalityGrandpaPrecommit_100 {
	out := &pbgear.Grandpa_FinalityGrandpaPrecommit_100{}
	v := in.(registry.Valuable)
	_ = v

	// field TargetHash To_PrimitiveTypesH256(w)
	out.TargetHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field TargetNumber
	out.TargetNumber = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_FinalityGrandpaPrecommit_310(in any) *pbgear.Grandpa_FinalityGrandpaPrecommit_310 {
	out := &pbgear.Grandpa_FinalityGrandpaPrecommit_310{}
	v := in.(registry.Valuable)
	_ = v

	// field TargetHash To_PrimitiveTypesH256(w)
	out.TargetHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field TargetNumber
	out.TargetNumber = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_FinalityGrandpaPrecommit_1030(in any) *pbgear.Grandpa_FinalityGrandpaPrecommit_1030 {
	out := &pbgear.Grandpa_FinalityGrandpaPrecommit_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field TargetHash To_PrimitiveTypesH256(w)
	out.TargetHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field TargetNumber
	out.TargetNumber = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_FinalityGrandpaPrevote_100(in any) *pbgear.Grandpa_FinalityGrandpaPrevote_100 {
	out := &pbgear.Grandpa_FinalityGrandpaPrevote_100{}
	v := in.(registry.Valuable)
	_ = v

	// field TargetHash To_PrimitiveTypesH256(w)
	out.TargetHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field TargetNumber
	out.TargetNumber = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_FinalityGrandpaPrevote_310(in any) *pbgear.Grandpa_FinalityGrandpaPrevote_310 {
	out := &pbgear.Grandpa_FinalityGrandpaPrevote_310{}
	v := in.(registry.Valuable)
	_ = v

	// field TargetHash To_PrimitiveTypesH256(w)
	out.TargetHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field TargetNumber
	out.TargetNumber = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_FinalityGrandpaPrevote_1030(in any) *pbgear.Grandpa_FinalityGrandpaPrevote_1030 {
	out := &pbgear.Grandpa_FinalityGrandpaPrevote_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field TargetHash To_PrimitiveTypesH256(w)
	out.TargetHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field TargetNumber
	out.TargetNumber = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Grandpa_NoteStalledCall_100(in any) *pbgear.Grandpa_NoteStalledCall_100 {
	out := &pbgear.Grandpa_NoteStalledCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Delay
	out.Delay = To_uint32(v.ValueAt(0))
	// primitive field BestFinalizedBlockNumber
	out.BestFinalizedBlockNumber = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Grandpa_NoteStalledCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Grandpa_NoteStalledCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GrandpaNoteStalledCall{}
	reflect.ValueOf(out).Elem().FieldByName("GrandpaNoteStalledCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Grandpa_ReportEquivocationCall_100(in any) *pbgear.Grandpa_ReportEquivocationCall_100 {
	out := &pbgear.Grandpa_ReportEquivocationCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field EquivocationProof To_Grandpa_SpFinalityGrandpaEquivocationProof(w)
	out.EquivocationProof = To_Grandpa_SpFinalityGrandpaEquivocationProof(v.ValueAt(0))
	// field KeyOwnerProof To_SpSessionMembershipProof(w)
	out.KeyOwnerProof = To_SpSessionMembershipProof(v.ValueAt(1))

	return out //from message
}
func To_Grandpa_ReportEquivocationCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Grandpa_ReportEquivocationCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GrandpaReportEquivocationCall{}
	reflect.ValueOf(out).Elem().FieldByName("GrandpaReportEquivocationCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Grandpa_ReportEquivocationCall_140(in any) *pbgear.Grandpa_ReportEquivocationCall_140 {
	out := &pbgear.Grandpa_ReportEquivocationCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// field EquivocationProof To_Grandpa_SpConsensusGrandpaEquivocationProof(w)
	out.EquivocationProof = To_Grandpa_SpConsensusGrandpaEquivocationProof(v.ValueAt(0))
	// field KeyOwnerProof To_SpSessionMembershipProof(w)
	out.KeyOwnerProof = To_SpSessionMembershipProof(v.ValueAt(1))

	return out //from message
}
func To_Grandpa_ReportEquivocationCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Grandpa_ReportEquivocationCall_140(in)
	out := &pbgearextrinsic.Extrinsic_GrandpaReportEquivocationCall{}
	reflect.ValueOf(out).Elem().FieldByName("GrandpaReportEquivocationCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Grandpa_ReportEquivocationUnsignedCall_100(in any) *pbgear.Grandpa_ReportEquivocationUnsignedCall_100 {
	out := &pbgear.Grandpa_ReportEquivocationUnsignedCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field EquivocationProof To_Grandpa_SpFinalityGrandpaEquivocationProof(w)
	out.EquivocationProof = To_Grandpa_SpFinalityGrandpaEquivocationProof(v.ValueAt(0))
	// field KeyOwnerProof To_SpSessionMembershipProof(w)
	out.KeyOwnerProof = To_SpSessionMembershipProof(v.ValueAt(1))

	return out //from message
}
func To_Grandpa_ReportEquivocationUnsignedCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Grandpa_ReportEquivocationUnsignedCall_100(in)
	out := &pbgearextrinsic.Extrinsic_GrandpaReportEquivocationUnsignedCall{}
	reflect.ValueOf(out).Elem().FieldByName("GrandpaReportEquivocationUnsignedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Grandpa_ReportEquivocationUnsignedCall_140(in any) *pbgear.Grandpa_ReportEquivocationUnsignedCall_140 {
	out := &pbgear.Grandpa_ReportEquivocationUnsignedCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// field EquivocationProof To_Grandpa_SpConsensusGrandpaEquivocationProof(w)
	out.EquivocationProof = To_Grandpa_SpConsensusGrandpaEquivocationProof(v.ValueAt(0))
	// field KeyOwnerProof To_SpSessionMembershipProof(w)
	out.KeyOwnerProof = To_SpSessionMembershipProof(v.ValueAt(1))

	return out //from message
}
func To_Grandpa_ReportEquivocationUnsignedCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Grandpa_ReportEquivocationUnsignedCall_140(in)
	out := &pbgearextrinsic.Extrinsic_GrandpaReportEquivocationUnsignedCall{}
	reflect.ValueOf(out).Elem().FieldByName("GrandpaReportEquivocationUnsignedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Grandpa_SpConsensusGrandpaEquivocationProof_140(in any) *pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_140 {
	out := &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SetId
	out.SetId = To_uint64(v.ValueAt(0))
	// oneOf field Equivocation
	v1 := To_OneOf_Grandpa_SpConsensusGrandpaEquivocationProof_140_equivocation(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Equivocation").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Grandpa_SpConsensusGrandpaEquivocationProof_140_equivocation(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_140_EquivocationPrevote{
			EquivocationPrevote: To_Grandpa_Prevote(param),
		}
	case 1:
		return &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_140_EquivocationPrecommit{
			EquivocationPrecommit: To_Grandpa_Precommit(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_SpConsensusGrandpaEquivocationProof_310(in any) *pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_310 {
	out := &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SetId
	out.SetId = To_uint64(v.ValueAt(0))
	// oneOf field Equivocation
	v1 := To_OneOf_Grandpa_SpConsensusGrandpaEquivocationProof_310_equivocation(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Equivocation").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Grandpa_SpConsensusGrandpaEquivocationProof_310_equivocation(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_310_EquivocationPrevote{
			EquivocationPrevote: To_Grandpa_Prevote(param),
		}
	case 1:
		return &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_310_EquivocationPrecommit{
			EquivocationPrecommit: To_Grandpa_Precommit(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_SpConsensusGrandpaEquivocationProof_1030(in any) *pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_1030 {
	out := &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SetId
	out.SetId = To_uint64(v.ValueAt(0))
	// oneOf field Equivocation
	v1 := To_OneOf_Grandpa_SpConsensusGrandpaEquivocationProof_1030_equivocation(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Equivocation").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Grandpa_SpConsensusGrandpaEquivocationProof_1030_equivocation(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_1030_EquivocationPrevote{
			EquivocationPrevote: To_Grandpa_Prevote(param),
		}
	case 1:
		return &pbgear.Grandpa_SpConsensusGrandpaEquivocationProof_1030_EquivocationPrecommit{
			EquivocationPrecommit: To_Grandpa_Precommit(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_SpConsensusGrandpaAppPublic_140(in any) *pbgear.Grandpa_SpConsensusGrandpaAppPublic_140 {
	out := &pbgear.Grandpa_SpConsensusGrandpaAppPublic_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Public(w)
	out.Value0 = To_SpCoreEd25519Public(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_SpConsensusGrandpaAppPublic_1030(in any) *pbgear.Grandpa_SpConsensusGrandpaAppPublic_1030 {
	out := &pbgear.Grandpa_SpConsensusGrandpaAppPublic_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Public(w)
	out.Value0 = To_SpCoreEd25519Public(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_SpConsensusGrandpaAppSignature_140(in any) *pbgear.Grandpa_SpConsensusGrandpaAppSignature_140 {
	out := &pbgear.Grandpa_SpConsensusGrandpaAppSignature_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Signature(w)
	out.Value0 = To_SpCoreEd25519Signature(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_SpConsensusGrandpaAppSignature_310(in any) *pbgear.Grandpa_SpConsensusGrandpaAppSignature_310 {
	out := &pbgear.Grandpa_SpConsensusGrandpaAppSignature_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Signature(w)
	out.Value0 = To_SpCoreEd25519Signature(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_SpConsensusGrandpaAppSignature_1030(in any) *pbgear.Grandpa_SpConsensusGrandpaAppSignature_1030 {
	out := &pbgear.Grandpa_SpConsensusGrandpaAppSignature_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Signature(w)
	out.Value0 = To_SpCoreEd25519Signature(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_SpFinalityGrandpaEquivocationProof_100(in any) *pbgear.Grandpa_SpFinalityGrandpaEquivocationProof_100 {
	out := &pbgear.Grandpa_SpFinalityGrandpaEquivocationProof_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field SetId
	out.SetId = To_uint64(v.ValueAt(0))
	// oneOf field Equivocation
	v1 := To_OneOf_Grandpa_SpFinalityGrandpaEquivocationProof_100_equivocation(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Equivocation").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Grandpa_SpFinalityGrandpaEquivocationProof_100_equivocation(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Grandpa_SpFinalityGrandpaEquivocationProof_100_EquivocationPrevote{
			EquivocationPrevote: To_Grandpa_Prevote(param),
		}
	case 1:
		return &pbgear.Grandpa_SpFinalityGrandpaEquivocationProof_100_EquivocationPrecommit{
			EquivocationPrecommit: To_Grandpa_Precommit(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Grandpa_SpFinalityGrandpaAppPublic_100(in any) *pbgear.Grandpa_SpFinalityGrandpaAppPublic_100 {
	out := &pbgear.Grandpa_SpFinalityGrandpaAppPublic_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Public(w)
	out.Value0 = To_SpCoreEd25519Public(v.ValueAt(0))

	return out //from message
}

func To_Grandpa_SpFinalityGrandpaAppSignature_100(in any) *pbgear.Grandpa_SpFinalityGrandpaAppSignature_100 {
	out := &pbgear.Grandpa_SpFinalityGrandpaAppSignature_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Signature(w)
	out.Value0 = To_SpCoreEd25519Signature(v.ValueAt(0))

	return out //from message
}

func To_Handle_1030(in any) *pbgear.Handle_1030 {
	out := &pbgear.Handle_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_HistoricalPallet_100(in any) *pbgear.HistoricalPallet_100 {
	out := &pbgear.HistoricalPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_Address20_100(in any) *pbgear.Identity_Address20_100 {
	out := &pbgear.Identity_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Address32_100(in any) *pbgear.Identity_Address32_100 {
	out := &pbgear.Identity_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_BlakeTwo256_100(in any) *pbgear.Identity_BlakeTwo256_100 {
	out := &pbgear.Identity_BlakeTwo256_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Erroneous_100(in any) *pbgear.Identity_Erroneous_100 {
	out := &pbgear.Identity_Erroneous_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_FeePaid_100(in any) *pbgear.Identity_FeePaid_100 {
	out := &pbgear.Identity_FeePaid_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_string(v.ValueAt(0))

	return out //from message
}

func To_Identity_Id_100(in any) *pbgear.Identity_Id_100 {
	out := &pbgear.Identity_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Identity_Index_100(in any) *pbgear.Identity_Index_100 {
	out := &pbgear.Identity_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Identity_TupleNull(w)
	out.Value0 = To_Identity_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_IdentityJudgement_1030(in any) *pbgear.IdentityJudgement_1030 {
	out := &pbgear.IdentityJudgement_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_Keccak256_100(in any) *pbgear.Identity_Keccak256_100 {
	out := &pbgear.Identity_Keccak256_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_KnownGood_100(in any) *pbgear.Identity_KnownGood_100 {
	out := &pbgear.Identity_KnownGood_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_LowQuality_100(in any) *pbgear.Identity_LowQuality_100 {
	out := &pbgear.Identity_LowQuality_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_None_100(in any) *pbgear.Identity_None_100 {
	out := &pbgear.Identity_None_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_OutOfDate_100(in any) *pbgear.Identity_OutOfDate_100 {
	out := &pbgear.Identity_OutOfDate_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_Raw0_100(in any) *pbgear.Identity_Raw0_100 {
	out := &pbgear.Identity_Raw0_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw_100(in any) *pbgear.Identity_Raw_100 {
	out := &pbgear.Identity_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw10_100(in any) *pbgear.Identity_Raw10_100 {
	out := &pbgear.Identity_Raw10_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw1_100(in any) *pbgear.Identity_Raw1_100 {
	out := &pbgear.Identity_Raw1_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw11_100(in any) *pbgear.Identity_Raw11_100 {
	out := &pbgear.Identity_Raw11_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw12_100(in any) *pbgear.Identity_Raw12_100 {
	out := &pbgear.Identity_Raw12_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw13_100(in any) *pbgear.Identity_Raw13_100 {
	out := &pbgear.Identity_Raw13_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw14_100(in any) *pbgear.Identity_Raw14_100 {
	out := &pbgear.Identity_Raw14_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw15_100(in any) *pbgear.Identity_Raw15_100 {
	out := &pbgear.Identity_Raw15_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw16_100(in any) *pbgear.Identity_Raw16_100 {
	out := &pbgear.Identity_Raw16_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw17_100(in any) *pbgear.Identity_Raw17_100 {
	out := &pbgear.Identity_Raw17_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw18_100(in any) *pbgear.Identity_Raw18_100 {
	out := &pbgear.Identity_Raw18_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw19_100(in any) *pbgear.Identity_Raw19_100 {
	out := &pbgear.Identity_Raw19_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw20_100(in any) *pbgear.Identity_Raw20_100 {
	out := &pbgear.Identity_Raw20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw2_100(in any) *pbgear.Identity_Raw2_100 {
	out := &pbgear.Identity_Raw2_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw21_100(in any) *pbgear.Identity_Raw21_100 {
	out := &pbgear.Identity_Raw21_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw22_100(in any) *pbgear.Identity_Raw22_100 {
	out := &pbgear.Identity_Raw22_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw23_100(in any) *pbgear.Identity_Raw23_100 {
	out := &pbgear.Identity_Raw23_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw24_100(in any) *pbgear.Identity_Raw24_100 {
	out := &pbgear.Identity_Raw24_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw25_100(in any) *pbgear.Identity_Raw25_100 {
	out := &pbgear.Identity_Raw25_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw26_100(in any) *pbgear.Identity_Raw26_100 {
	out := &pbgear.Identity_Raw26_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw27_100(in any) *pbgear.Identity_Raw27_100 {
	out := &pbgear.Identity_Raw27_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw28_100(in any) *pbgear.Identity_Raw28_100 {
	out := &pbgear.Identity_Raw28_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw29_100(in any) *pbgear.Identity_Raw29_100 {
	out := &pbgear.Identity_Raw29_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw30_100(in any) *pbgear.Identity_Raw30_100 {
	out := &pbgear.Identity_Raw30_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw3_100(in any) *pbgear.Identity_Raw3_100 {
	out := &pbgear.Identity_Raw3_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw31_100(in any) *pbgear.Identity_Raw31_100 {
	out := &pbgear.Identity_Raw31_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw32_100(in any) *pbgear.Identity_Raw32_100 {
	out := &pbgear.Identity_Raw32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw4_100(in any) *pbgear.Identity_Raw4_100 {
	out := &pbgear.Identity_Raw4_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw5_100(in any) *pbgear.Identity_Raw5_100 {
	out := &pbgear.Identity_Raw5_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw6_100(in any) *pbgear.Identity_Raw6_100 {
	out := &pbgear.Identity_Raw6_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw7_100(in any) *pbgear.Identity_Raw7_100 {
	out := &pbgear.Identity_Raw7_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw8_100(in any) *pbgear.Identity_Raw8_100 {
	out := &pbgear.Identity_Raw8_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Raw9_100(in any) *pbgear.Identity_Raw9_100 {
	out := &pbgear.Identity_Raw9_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_Reasonable_100(in any) *pbgear.Identity_Reasonable_100 {
	out := &pbgear.Identity_Reasonable_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_Sha256_100(in any) *pbgear.Identity_Sha256_100 {
	out := &pbgear.Identity_Sha256_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_ShaThree256_100(in any) *pbgear.Identity_ShaThree256_100 {
	out := &pbgear.Identity_ShaThree256_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_TupleNull_100(in any) *pbgear.Identity_TupleNull_100 {
	out := &pbgear.Identity_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Identity_TupleNull_310(in any) *pbgear.Identity_TupleNull_310 {
	out := &pbgear.Identity_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Identity_TupleNull_1030(in any) *pbgear.Identity_TupleNull_1030 {
	out := &pbgear.Identity_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100(in any) *pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100 {
	out := &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_100_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140(in any) *pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140 {
	out := &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_140_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310(in any) *pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310 {
	out := &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_310_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030(in any) *pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030 {
	out := &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1030_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400(in any) *pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400 {
	out := &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData_1400_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100(in any) *pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100 {
	out := &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_100_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140(in any) *pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140 {
	out := &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_140_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310(in any) *pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310 {
	out := &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_310_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030(in any) *pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030 {
	out := &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1030_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400(in any) *pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400 {
	out := &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData_1400_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Unknown_100(in any) *pbgear.Identity_Unknown_100 {
	out := &pbgear.Identity_Unknown_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_IdentityPallet_100(in any) *pbgear.IdentityPallet_100 {
	out := &pbgear.IdentityPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_IdentityPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_IdentityPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.IdentityPallet_100_CallAddRegistrarCall{
			CallAddRegistrarCall: To_Identity_AddRegistrarCall(param),
		}
	case 1:
		return &pbgear.IdentityPallet_100_CallSetIdentityCall{
			CallSetIdentityCall: To_Identity_SetIdentityCall(param),
		}
	case 2:
		return &pbgear.IdentityPallet_100_CallSetSubsCall{
			CallSetSubsCall: To_Identity_SetSubsCall(param),
		}
	case 3:
		return &pbgear.IdentityPallet_100_CallClearIdentityCall{
			CallClearIdentityCall: To_Identity_ClearIdentityCall(param),
		}
	case 4:
		return &pbgear.IdentityPallet_100_CallRequestJudgementCall{
			CallRequestJudgementCall: To_Identity_RequestJudgementCall(param),
		}
	case 5:
		return &pbgear.IdentityPallet_100_CallCancelRequestCall{
			CallCancelRequestCall: To_Identity_CancelRequestCall(param),
		}
	case 6:
		return &pbgear.IdentityPallet_100_CallSetFeeCall{
			CallSetFeeCall: To_Identity_SetFeeCall(param),
		}
	case 7:
		return &pbgear.IdentityPallet_100_CallSetAccountIdCall{
			CallSetAccountIdCall: To_Identity_SetAccountIdCall(param),
		}
	case 8:
		return &pbgear.IdentityPallet_100_CallSetFieldsCall{
			CallSetFieldsCall: To_Identity_SetFieldsCall(param),
		}
	case 9:
		return &pbgear.IdentityPallet_100_CallProvideJudgementCall{
			CallProvideJudgementCall: To_Identity_ProvideJudgementCall(param),
		}
	case 10:
		return &pbgear.IdentityPallet_100_CallKillIdentityCall{
			CallKillIdentityCall: To_Identity_KillIdentityCall(param),
		}
	case 11:
		return &pbgear.IdentityPallet_100_CallAddSubCall{
			CallAddSubCall: To_Identity_AddSubCall(param),
		}
	case 12:
		return &pbgear.IdentityPallet_100_CallRenameSubCall{
			CallRenameSubCall: To_Identity_RenameSubCall(param),
		}
	case 13:
		return &pbgear.IdentityPallet_100_CallRemoveSubCall{
			CallRemoveSubCall: To_Identity_RemoveSubCall(param),
		}
	case 14:
		return &pbgear.IdentityPallet_100_CallQuitSubCall{
			CallQuitSubCall: To_Identity_QuitSubCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_IdentityPallet_140(in any) *pbgear.IdentityPallet_140 {
	out := &pbgear.IdentityPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_IdentityPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_IdentityPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.IdentityPallet_140_CallAddRegistrarCall{
			CallAddRegistrarCall: To_Identity_AddRegistrarCall(param),
		}
	case 1:
		return &pbgear.IdentityPallet_140_CallSetIdentityCall{
			CallSetIdentityCall: To_Identity_SetIdentityCall(param),
		}
	case 2:
		return &pbgear.IdentityPallet_140_CallSetSubsCall{
			CallSetSubsCall: To_Identity_SetSubsCall(param),
		}
	case 3:
		return &pbgear.IdentityPallet_140_CallClearIdentityCall{
			CallClearIdentityCall: To_Identity_ClearIdentityCall(param),
		}
	case 4:
		return &pbgear.IdentityPallet_140_CallRequestJudgementCall{
			CallRequestJudgementCall: To_Identity_RequestJudgementCall(param),
		}
	case 5:
		return &pbgear.IdentityPallet_140_CallCancelRequestCall{
			CallCancelRequestCall: To_Identity_CancelRequestCall(param),
		}
	case 6:
		return &pbgear.IdentityPallet_140_CallSetFeeCall{
			CallSetFeeCall: To_Identity_SetFeeCall(param),
		}
	case 7:
		return &pbgear.IdentityPallet_140_CallSetAccountIdCall{
			CallSetAccountIdCall: To_Identity_SetAccountIdCall(param),
		}
	case 8:
		return &pbgear.IdentityPallet_140_CallSetFieldsCall{
			CallSetFieldsCall: To_Identity_SetFieldsCall(param),
		}
	case 9:
		return &pbgear.IdentityPallet_140_CallProvideJudgementCall{
			CallProvideJudgementCall: To_Identity_ProvideJudgementCall(param),
		}
	case 10:
		return &pbgear.IdentityPallet_140_CallKillIdentityCall{
			CallKillIdentityCall: To_Identity_KillIdentityCall(param),
		}
	case 11:
		return &pbgear.IdentityPallet_140_CallAddSubCall{
			CallAddSubCall: To_Identity_AddSubCall(param),
		}
	case 12:
		return &pbgear.IdentityPallet_140_CallRenameSubCall{
			CallRenameSubCall: To_Identity_RenameSubCall(param),
		}
	case 13:
		return &pbgear.IdentityPallet_140_CallRemoveSubCall{
			CallRemoveSubCall: To_Identity_RemoveSubCall(param),
		}
	case 14:
		return &pbgear.IdentityPallet_140_CallQuitSubCall{
			CallQuitSubCall: To_Identity_QuitSubCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_IdentityPallet_310(in any) *pbgear.IdentityPallet_310 {
	out := &pbgear.IdentityPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_IdentityPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_IdentityPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.IdentityPallet_310_CallAddRegistrarCall{
			CallAddRegistrarCall: To_Identity_AddRegistrarCall(param),
		}
	case 1:
		return &pbgear.IdentityPallet_310_CallSetIdentityCall{
			CallSetIdentityCall: To_Identity_SetIdentityCall(param),
		}
	case 2:
		return &pbgear.IdentityPallet_310_CallSetSubsCall{
			CallSetSubsCall: To_Identity_SetSubsCall(param),
		}
	case 3:
		return &pbgear.IdentityPallet_310_CallClearIdentityCall{
			CallClearIdentityCall: To_Identity_ClearIdentityCall(param),
		}
	case 4:
		return &pbgear.IdentityPallet_310_CallRequestJudgementCall{
			CallRequestJudgementCall: To_Identity_RequestJudgementCall(param),
		}
	case 5:
		return &pbgear.IdentityPallet_310_CallCancelRequestCall{
			CallCancelRequestCall: To_Identity_CancelRequestCall(param),
		}
	case 6:
		return &pbgear.IdentityPallet_310_CallSetFeeCall{
			CallSetFeeCall: To_Identity_SetFeeCall(param),
		}
	case 7:
		return &pbgear.IdentityPallet_310_CallSetAccountIdCall{
			CallSetAccountIdCall: To_Identity_SetAccountIdCall(param),
		}
	case 8:
		return &pbgear.IdentityPallet_310_CallSetFieldsCall{
			CallSetFieldsCall: To_Identity_SetFieldsCall(param),
		}
	case 9:
		return &pbgear.IdentityPallet_310_CallProvideJudgementCall{
			CallProvideJudgementCall: To_Identity_ProvideJudgementCall(param),
		}
	case 10:
		return &pbgear.IdentityPallet_310_CallKillIdentityCall{
			CallKillIdentityCall: To_Identity_KillIdentityCall(param),
		}
	case 11:
		return &pbgear.IdentityPallet_310_CallAddSubCall{
			CallAddSubCall: To_Identity_AddSubCall(param),
		}
	case 12:
		return &pbgear.IdentityPallet_310_CallRenameSubCall{
			CallRenameSubCall: To_Identity_RenameSubCall(param),
		}
	case 13:
		return &pbgear.IdentityPallet_310_CallRemoveSubCall{
			CallRemoveSubCall: To_Identity_RemoveSubCall(param),
		}
	case 14:
		return &pbgear.IdentityPallet_310_CallQuitSubCall{
			CallQuitSubCall: To_Identity_QuitSubCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_IdentityPallet_1030(in any) *pbgear.IdentityPallet_1030 {
	out := &pbgear.IdentityPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_IdentityPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_IdentityPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.IdentityPallet_1030_CallAddRegistrarCall{
			CallAddRegistrarCall: To_Identity_AddRegistrarCall(param),
		}
	case 1:
		return &pbgear.IdentityPallet_1030_CallSetIdentityCall{
			CallSetIdentityCall: To_Identity_SetIdentityCall(param),
		}
	case 2:
		return &pbgear.IdentityPallet_1030_CallSetSubsCall{
			CallSetSubsCall: To_Identity_SetSubsCall(param),
		}
	case 3:
		return &pbgear.IdentityPallet_1030_CallClearIdentityCall{
			CallClearIdentityCall: To_Identity_ClearIdentityCall(param),
		}
	case 4:
		return &pbgear.IdentityPallet_1030_CallRequestJudgementCall{
			CallRequestJudgementCall: To_Identity_RequestJudgementCall(param),
		}
	case 5:
		return &pbgear.IdentityPallet_1030_CallCancelRequestCall{
			CallCancelRequestCall: To_Identity_CancelRequestCall(param),
		}
	case 6:
		return &pbgear.IdentityPallet_1030_CallSetFeeCall{
			CallSetFeeCall: To_Identity_SetFeeCall(param),
		}
	case 7:
		return &pbgear.IdentityPallet_1030_CallSetAccountIdCall{
			CallSetAccountIdCall: To_Identity_SetAccountIdCall(param),
		}
	case 8:
		return &pbgear.IdentityPallet_1030_CallSetFieldsCall{
			CallSetFieldsCall: To_Identity_SetFieldsCall(param),
		}
	case 9:
		return &pbgear.IdentityPallet_1030_CallProvideJudgementCall{
			CallProvideJudgementCall: To_Identity_ProvideJudgementCall(param),
		}
	case 10:
		return &pbgear.IdentityPallet_1030_CallKillIdentityCall{
			CallKillIdentityCall: To_Identity_KillIdentityCall(param),
		}
	case 11:
		return &pbgear.IdentityPallet_1030_CallAddSubCall{
			CallAddSubCall: To_Identity_AddSubCall(param),
		}
	case 12:
		return &pbgear.IdentityPallet_1030_CallRenameSubCall{
			CallRenameSubCall: To_Identity_RenameSubCall(param),
		}
	case 13:
		return &pbgear.IdentityPallet_1030_CallRemoveSubCall{
			CallRemoveSubCall: To_Identity_RemoveSubCall(param),
		}
	case 14:
		return &pbgear.IdentityPallet_1030_CallQuitSubCall{
			CallQuitSubCall: To_Identity_QuitSubCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_IdentityPallet_1400(in any) *pbgear.IdentityPallet_1400 {
	out := &pbgear.IdentityPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_IdentityPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_IdentityPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.IdentityPallet_1400_CallAddRegistrarCall{
			CallAddRegistrarCall: To_Identity_AddRegistrarCall(param),
		}
	case 1:
		return &pbgear.IdentityPallet_1400_CallSetIdentityCall{
			CallSetIdentityCall: To_Identity_SetIdentityCall(param),
		}
	case 2:
		return &pbgear.IdentityPallet_1400_CallSetSubsCall{
			CallSetSubsCall: To_Identity_SetSubsCall(param),
		}
	case 3:
		return &pbgear.IdentityPallet_1400_CallClearIdentityCall{
			CallClearIdentityCall: To_Identity_ClearIdentityCall(param),
		}
	case 4:
		return &pbgear.IdentityPallet_1400_CallRequestJudgementCall{
			CallRequestJudgementCall: To_Identity_RequestJudgementCall(param),
		}
	case 5:
		return &pbgear.IdentityPallet_1400_CallCancelRequestCall{
			CallCancelRequestCall: To_Identity_CancelRequestCall(param),
		}
	case 6:
		return &pbgear.IdentityPallet_1400_CallSetFeeCall{
			CallSetFeeCall: To_Identity_SetFeeCall(param),
		}
	case 7:
		return &pbgear.IdentityPallet_1400_CallSetAccountIdCall{
			CallSetAccountIdCall: To_Identity_SetAccountIdCall(param),
		}
	case 8:
		return &pbgear.IdentityPallet_1400_CallSetFieldsCall{
			CallSetFieldsCall: To_Identity_SetFieldsCall(param),
		}
	case 9:
		return &pbgear.IdentityPallet_1400_CallProvideJudgementCall{
			CallProvideJudgementCall: To_Identity_ProvideJudgementCall(param),
		}
	case 10:
		return &pbgear.IdentityPallet_1400_CallKillIdentityCall{
			CallKillIdentityCall: To_Identity_KillIdentityCall(param),
		}
	case 11:
		return &pbgear.IdentityPallet_1400_CallAddSubCall{
			CallAddSubCall: To_Identity_AddSubCall(param),
		}
	case 12:
		return &pbgear.IdentityPallet_1400_CallRenameSubCall{
			CallRenameSubCall: To_Identity_RenameSubCall(param),
		}
	case 13:
		return &pbgear.IdentityPallet_1400_CallRemoveSubCall{
			CallRemoveSubCall: To_Identity_RemoveSubCall(param),
		}
	case 14:
		return &pbgear.IdentityPallet_1400_CallQuitSubCall{
			CallQuitSubCall: To_Identity_QuitSubCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Account_100(in any) *pbgear.Identity_Account_100 {
	out := &pbgear.Identity_Account_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Account
	v0 := To_OneOf_Identity_Account_100_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Account").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Account_100_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Account_100_AccountId{
			AccountId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Account_100_AccountIndex{
			AccountIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Account_100_AccountRaw{
			AccountRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Account_100_AccountAddress32{
			AccountAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Account_100_AccountAddress20{
			AccountAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Account_310(in any) *pbgear.Identity_Account_310 {
	out := &pbgear.Identity_Account_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Account
	v0 := To_OneOf_Identity_Account_310_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Account").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Account_310_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Account_310_AccountId{
			AccountId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Account_310_AccountIndex{
			AccountIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Account_310_AccountRaw{
			AccountRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Account_310_AccountAddress32{
			AccountAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Account_310_AccountAddress20{
			AccountAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Account_1030(in any) *pbgear.Identity_Account_1030 {
	out := &pbgear.Identity_Account_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Account
	v0 := To_OneOf_Identity_Account_1030_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Account").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Account_1030_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Account_1030_AccountId{
			AccountId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Account_1030_AccountIndex{
			AccountIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Account_1030_AccountRaw{
			AccountRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Account_1030_AccountAddress32{
			AccountAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Account_1030_AccountAddress20{
			AccountAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_AddRegistrarCall_100(in any) *pbgear.Identity_AddRegistrarCall_100 {
	out := &pbgear.Identity_AddRegistrarCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Account
	v0 := To_OneOf_Identity_AddRegistrarCall_100_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Account").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Identity_AddRegistrarCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_AddRegistrarCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityAddRegistrarCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityAddRegistrarCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Identity_AddRegistrarCall_100_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_AddRegistrarCall_100_AccountId{
			AccountId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_AddRegistrarCall_100_AccountIndex{
			AccountIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_AddRegistrarCall_100_AccountRaw{
			AccountRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_AddRegistrarCall_100_AccountAddress32{
			AccountAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_AddRegistrarCall_100_AccountAddress20{
			AccountAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_AddSubCall_100(in any) *pbgear.Identity_AddSubCall_100 {
	out := &pbgear.Identity_AddSubCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Sub
	v0 := To_OneOf_Identity_AddSubCall_100_sub(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Sub").Set(reflect.ValueOf(v0))
	// oneOf field Data
	v1 := To_OneOf_Identity_AddSubCall_100_data(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Data").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Identity_AddSubCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_AddSubCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityAddSubCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityAddSubCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Identity_AddSubCall_100_sub(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_AddSubCall_100_SubId{
			SubId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_AddSubCall_100_SubIndex{
			SubIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_AddSubCall_100_SubRaw{
			SubRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_AddSubCall_100_SubAddress32{
			SubAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_AddSubCall_100_SubAddress20{
			SubAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_AddSubCall_100_data(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_AddSubCall_100_DataNone{
			DataNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_AddSubCall_100_DataRaw0{
			DataRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_AddSubCall_100_DataRaw1{
			DataRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_AddSubCall_100_DataRaw2{
			DataRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_AddSubCall_100_DataRaw3{
			DataRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_AddSubCall_100_DataRaw4{
			DataRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_AddSubCall_100_DataRaw5{
			DataRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_AddSubCall_100_DataRaw6{
			DataRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_AddSubCall_100_DataRaw7{
			DataRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_AddSubCall_100_DataRaw8{
			DataRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_AddSubCall_100_DataRaw9{
			DataRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_AddSubCall_100_DataRaw10{
			DataRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_AddSubCall_100_DataRaw11{
			DataRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_AddSubCall_100_DataRaw12{
			DataRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_AddSubCall_100_DataRaw13{
			DataRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_AddSubCall_100_DataRaw14{
			DataRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_AddSubCall_100_DataRaw15{
			DataRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_AddSubCall_100_DataRaw16{
			DataRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_AddSubCall_100_DataRaw17{
			DataRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_AddSubCall_100_DataRaw18{
			DataRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_AddSubCall_100_DataRaw19{
			DataRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_AddSubCall_100_DataRaw20{
			DataRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_AddSubCall_100_DataRaw21{
			DataRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_AddSubCall_100_DataRaw22{
			DataRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_AddSubCall_100_DataRaw23{
			DataRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_AddSubCall_100_DataRaw24{
			DataRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_AddSubCall_100_DataRaw25{
			DataRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_AddSubCall_100_DataRaw26{
			DataRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_AddSubCall_100_DataRaw27{
			DataRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_AddSubCall_100_DataRaw28{
			DataRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_AddSubCall_100_DataRaw29{
			DataRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_AddSubCall_100_DataRaw30{
			DataRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_AddSubCall_100_DataRaw31{
			DataRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_AddSubCall_100_DataRaw32{
			DataRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_AddSubCall_100_DataBlakeTwo256{
			DataBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_AddSubCall_100_DataSha256{
			DataSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_AddSubCall_100_DataKeccak256{
			DataKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_AddSubCall_100_DataShaThree256{
			DataShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_CancelRequestCall_100(in any) *pbgear.Identity_CancelRequestCall_100 {
	out := &pbgear.Identity_CancelRequestCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RegIndex
	out.RegIndex = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Identity_CancelRequestCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_CancelRequestCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityCancelRequestCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityCancelRequestCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Identity_ClearIdentityCall_100(in any) *pbgear.Identity_ClearIdentityCall_100 {
	out := &pbgear.Identity_ClearIdentityCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_Data_100(in any) *pbgear.Identity_Data_100 {
	out := &pbgear.Identity_Data_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Data
	v0 := To_OneOf_Identity_Data_100_data(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Data").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Data_100_data(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Data_100_DataNone{
			DataNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Data_100_DataRaw0{
			DataRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Data_100_DataRaw1{
			DataRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Data_100_DataRaw2{
			DataRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Data_100_DataRaw3{
			DataRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Data_100_DataRaw4{
			DataRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Data_100_DataRaw5{
			DataRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Data_100_DataRaw6{
			DataRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Data_100_DataRaw7{
			DataRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Data_100_DataRaw8{
			DataRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Data_100_DataRaw9{
			DataRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Data_100_DataRaw10{
			DataRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Data_100_DataRaw11{
			DataRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Data_100_DataRaw12{
			DataRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Data_100_DataRaw13{
			DataRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Data_100_DataRaw14{
			DataRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Data_100_DataRaw15{
			DataRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Data_100_DataRaw16{
			DataRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Data_100_DataRaw17{
			DataRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Data_100_DataRaw18{
			DataRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Data_100_DataRaw19{
			DataRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Data_100_DataRaw20{
			DataRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Data_100_DataRaw21{
			DataRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Data_100_DataRaw22{
			DataRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Data_100_DataRaw23{
			DataRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Data_100_DataRaw24{
			DataRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Data_100_DataRaw25{
			DataRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Data_100_DataRaw26{
			DataRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Data_100_DataRaw27{
			DataRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Data_100_DataRaw28{
			DataRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Data_100_DataRaw29{
			DataRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Data_100_DataRaw30{
			DataRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Data_100_DataRaw31{
			DataRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Data_100_DataRaw32{
			DataRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Data_100_DataBlakeTwo256{
			DataBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Data_100_DataSha256{
			DataSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Data_100_DataKeccak256{
			DataKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Data_100_DataShaThree256{
			DataShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Data_140(in any) *pbgear.Identity_Data_140 {
	out := &pbgear.Identity_Data_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Data
	v0 := To_OneOf_Identity_Data_140_data(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Data").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Data_140_data(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Data_140_DataNone{
			DataNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Data_140_DataRaw0{
			DataRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Data_140_DataRaw1{
			DataRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Data_140_DataRaw2{
			DataRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Data_140_DataRaw3{
			DataRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Data_140_DataRaw4{
			DataRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Data_140_DataRaw5{
			DataRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Data_140_DataRaw6{
			DataRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Data_140_DataRaw7{
			DataRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Data_140_DataRaw8{
			DataRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Data_140_DataRaw9{
			DataRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Data_140_DataRaw10{
			DataRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Data_140_DataRaw11{
			DataRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Data_140_DataRaw12{
			DataRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Data_140_DataRaw13{
			DataRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Data_140_DataRaw14{
			DataRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Data_140_DataRaw15{
			DataRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Data_140_DataRaw16{
			DataRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Data_140_DataRaw17{
			DataRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Data_140_DataRaw18{
			DataRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Data_140_DataRaw19{
			DataRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Data_140_DataRaw20{
			DataRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Data_140_DataRaw21{
			DataRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Data_140_DataRaw22{
			DataRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Data_140_DataRaw23{
			DataRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Data_140_DataRaw24{
			DataRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Data_140_DataRaw25{
			DataRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Data_140_DataRaw26{
			DataRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Data_140_DataRaw27{
			DataRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Data_140_DataRaw28{
			DataRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Data_140_DataRaw29{
			DataRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Data_140_DataRaw30{
			DataRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Data_140_DataRaw31{
			DataRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Data_140_DataRaw32{
			DataRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Data_140_DataBlakeTwo256{
			DataBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Data_140_DataSha256{
			DataSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Data_140_DataKeccak256{
			DataKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Data_140_DataShaThree256{
			DataShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Data_310(in any) *pbgear.Identity_Data_310 {
	out := &pbgear.Identity_Data_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Data
	v0 := To_OneOf_Identity_Data_310_data(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Data").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Data_310_data(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Data_310_DataNone{
			DataNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Data_310_DataRaw0{
			DataRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Data_310_DataRaw1{
			DataRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Data_310_DataRaw2{
			DataRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Data_310_DataRaw3{
			DataRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Data_310_DataRaw4{
			DataRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Data_310_DataRaw5{
			DataRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Data_310_DataRaw6{
			DataRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Data_310_DataRaw7{
			DataRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Data_310_DataRaw8{
			DataRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Data_310_DataRaw9{
			DataRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Data_310_DataRaw10{
			DataRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Data_310_DataRaw11{
			DataRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Data_310_DataRaw12{
			DataRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Data_310_DataRaw13{
			DataRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Data_310_DataRaw14{
			DataRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Data_310_DataRaw15{
			DataRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Data_310_DataRaw16{
			DataRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Data_310_DataRaw17{
			DataRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Data_310_DataRaw18{
			DataRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Data_310_DataRaw19{
			DataRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Data_310_DataRaw20{
			DataRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Data_310_DataRaw21{
			DataRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Data_310_DataRaw22{
			DataRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Data_310_DataRaw23{
			DataRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Data_310_DataRaw24{
			DataRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Data_310_DataRaw25{
			DataRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Data_310_DataRaw26{
			DataRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Data_310_DataRaw27{
			DataRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Data_310_DataRaw28{
			DataRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Data_310_DataRaw29{
			DataRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Data_310_DataRaw30{
			DataRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Data_310_DataRaw31{
			DataRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Data_310_DataRaw32{
			DataRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Data_310_DataBlakeTwo256{
			DataBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Data_310_DataSha256{
			DataSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Data_310_DataKeccak256{
			DataKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Data_310_DataShaThree256{
			DataShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Data_1030(in any) *pbgear.Identity_Data_1030 {
	out := &pbgear.Identity_Data_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Data
	v0 := To_OneOf_Identity_Data_1030_data(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Data").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Data_1030_data(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Data_1030_DataNone{
			DataNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Data_1030_DataRaw0{
			DataRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Data_1030_DataRaw1{
			DataRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Data_1030_DataRaw2{
			DataRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Data_1030_DataRaw3{
			DataRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Data_1030_DataRaw4{
			DataRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Data_1030_DataRaw5{
			DataRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Data_1030_DataRaw6{
			DataRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Data_1030_DataRaw7{
			DataRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Data_1030_DataRaw8{
			DataRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Data_1030_DataRaw9{
			DataRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Data_1030_DataRaw10{
			DataRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Data_1030_DataRaw11{
			DataRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Data_1030_DataRaw12{
			DataRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Data_1030_DataRaw13{
			DataRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Data_1030_DataRaw14{
			DataRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Data_1030_DataRaw15{
			DataRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Data_1030_DataRaw16{
			DataRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Data_1030_DataRaw17{
			DataRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Data_1030_DataRaw18{
			DataRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Data_1030_DataRaw19{
			DataRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Data_1030_DataRaw20{
			DataRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Data_1030_DataRaw21{
			DataRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Data_1030_DataRaw22{
			DataRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Data_1030_DataRaw23{
			DataRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Data_1030_DataRaw24{
			DataRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Data_1030_DataRaw25{
			DataRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Data_1030_DataRaw26{
			DataRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Data_1030_DataRaw27{
			DataRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Data_1030_DataRaw28{
			DataRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Data_1030_DataRaw29{
			DataRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Data_1030_DataRaw30{
			DataRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Data_1030_DataRaw31{
			DataRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Data_1030_DataRaw32{
			DataRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Data_1030_DataBlakeTwo256{
			DataBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Data_1030_DataSha256{
			DataSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Data_1030_DataKeccak256{
			DataKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Data_1030_DataShaThree256{
			DataShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Data_1400(in any) *pbgear.Identity_Data_1400 {
	out := &pbgear.Identity_Data_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Data
	v0 := To_OneOf_Identity_Data_1400_data(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Data").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Data_1400_data(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Data_1400_DataNone{
			DataNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Data_1400_DataRaw0{
			DataRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Data_1400_DataRaw1{
			DataRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Data_1400_DataRaw2{
			DataRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Data_1400_DataRaw3{
			DataRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Data_1400_DataRaw4{
			DataRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Data_1400_DataRaw5{
			DataRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Data_1400_DataRaw6{
			DataRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Data_1400_DataRaw7{
			DataRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Data_1400_DataRaw8{
			DataRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Data_1400_DataRaw9{
			DataRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Data_1400_DataRaw10{
			DataRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Data_1400_DataRaw11{
			DataRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Data_1400_DataRaw12{
			DataRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Data_1400_DataRaw13{
			DataRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Data_1400_DataRaw14{
			DataRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Data_1400_DataRaw15{
			DataRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Data_1400_DataRaw16{
			DataRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Data_1400_DataRaw17{
			DataRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Data_1400_DataRaw18{
			DataRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Data_1400_DataRaw19{
			DataRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Data_1400_DataRaw20{
			DataRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Data_1400_DataRaw21{
			DataRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Data_1400_DataRaw22{
			DataRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Data_1400_DataRaw23{
			DataRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Data_1400_DataRaw24{
			DataRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Data_1400_DataRaw25{
			DataRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Data_1400_DataRaw26{
			DataRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Data_1400_DataRaw27{
			DataRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Data_1400_DataRaw28{
			DataRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Data_1400_DataRaw29{
			DataRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Data_1400_DataRaw30{
			DataRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Data_1400_DataRaw31{
			DataRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Data_1400_DataRaw32{
			DataRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Data_1400_DataBlakeTwo256{
			DataBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Data_1400_DataSha256{
			DataSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Data_1400_DataKeccak256{
			DataKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Data_1400_DataShaThree256{
			DataShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Display_100(in any) *pbgear.Identity_Display_100 {
	out := &pbgear.Identity_Display_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Display
	v0 := To_OneOf_Identity_Display_100_display(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Display_100_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Display_100_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Display_100_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Display_100_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Display_100_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Display_100_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Display_100_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Display_100_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Display_100_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Display_100_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Display_100_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Display_100_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Display_100_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Display_100_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Display_100_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Display_100_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Display_100_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Display_100_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Display_100_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Display_100_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Display_100_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Display_100_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Display_100_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Display_100_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Display_100_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Display_100_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Display_100_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Display_100_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Display_100_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Display_100_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Display_100_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Display_100_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Display_100_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Display_100_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Display_100_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Display_100_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Display_100_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Display_100_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Display_100_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Display_140(in any) *pbgear.Identity_Display_140 {
	out := &pbgear.Identity_Display_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Display
	v0 := To_OneOf_Identity_Display_140_display(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Display_140_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Display_140_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Display_140_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Display_140_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Display_140_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Display_140_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Display_140_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Display_140_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Display_140_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Display_140_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Display_140_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Display_140_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Display_140_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Display_140_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Display_140_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Display_140_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Display_140_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Display_140_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Display_140_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Display_140_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Display_140_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Display_140_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Display_140_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Display_140_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Display_140_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Display_140_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Display_140_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Display_140_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Display_140_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Display_140_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Display_140_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Display_140_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Display_140_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Display_140_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Display_140_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Display_140_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Display_140_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Display_140_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Display_140_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Display_310(in any) *pbgear.Identity_Display_310 {
	out := &pbgear.Identity_Display_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Display
	v0 := To_OneOf_Identity_Display_310_display(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Display_310_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Display_310_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Display_310_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Display_310_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Display_310_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Display_310_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Display_310_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Display_310_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Display_310_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Display_310_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Display_310_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Display_310_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Display_310_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Display_310_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Display_310_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Display_310_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Display_310_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Display_310_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Display_310_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Display_310_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Display_310_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Display_310_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Display_310_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Display_310_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Display_310_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Display_310_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Display_310_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Display_310_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Display_310_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Display_310_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Display_310_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Display_310_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Display_310_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Display_310_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Display_310_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Display_310_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Display_310_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Display_310_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Display_310_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Display_1030(in any) *pbgear.Identity_Display_1030 {
	out := &pbgear.Identity_Display_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Display
	v0 := To_OneOf_Identity_Display_1030_display(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Display_1030_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Display_1030_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Display_1030_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Display_1030_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Display_1030_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Display_1030_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Display_1030_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Display_1030_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Display_1030_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Display_1030_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Display_1030_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Display_1030_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Display_1030_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Display_1030_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Display_1030_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Display_1030_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Display_1030_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Display_1030_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Display_1030_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Display_1030_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Display_1030_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Display_1030_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Display_1030_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Display_1030_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Display_1030_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Display_1030_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Display_1030_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Display_1030_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Display_1030_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Display_1030_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Display_1030_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Display_1030_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Display_1030_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Display_1030_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Display_1030_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Display_1030_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Display_1030_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Display_1030_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Display_1030_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Display_1400(in any) *pbgear.Identity_Display_1400 {
	out := &pbgear.Identity_Display_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Display
	v0 := To_OneOf_Identity_Display_1400_display(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Display_1400_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Display_1400_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Display_1400_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Display_1400_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Display_1400_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Display_1400_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Display_1400_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Display_1400_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Display_1400_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Display_1400_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Display_1400_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Display_1400_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Display_1400_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Display_1400_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Display_1400_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Display_1400_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Display_1400_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Display_1400_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Display_1400_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Display_1400_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Display_1400_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Display_1400_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Display_1400_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Display_1400_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Display_1400_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Display_1400_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Display_1400_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Display_1400_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Display_1400_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Display_1400_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Display_1400_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Display_1400_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Display_1400_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Display_1400_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Display_1400_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Display_1400_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Display_1400_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Display_1400_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Display_1400_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Email_100(in any) *pbgear.Identity_Email_100 {
	out := &pbgear.Identity_Email_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Email
	v0 := To_OneOf_Identity_Email_100_email(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Email_100_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Email_100_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Email_100_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Email_100_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Email_100_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Email_100_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Email_100_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Email_100_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Email_100_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Email_100_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Email_100_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Email_100_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Email_100_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Email_100_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Email_100_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Email_100_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Email_100_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Email_100_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Email_100_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Email_100_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Email_100_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Email_100_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Email_100_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Email_100_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Email_100_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Email_100_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Email_100_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Email_100_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Email_100_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Email_100_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Email_100_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Email_100_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Email_100_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Email_100_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Email_100_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Email_100_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Email_100_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Email_100_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Email_100_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Email_140(in any) *pbgear.Identity_Email_140 {
	out := &pbgear.Identity_Email_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Email
	v0 := To_OneOf_Identity_Email_140_email(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Email_140_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Email_140_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Email_140_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Email_140_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Email_140_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Email_140_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Email_140_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Email_140_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Email_140_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Email_140_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Email_140_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Email_140_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Email_140_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Email_140_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Email_140_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Email_140_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Email_140_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Email_140_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Email_140_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Email_140_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Email_140_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Email_140_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Email_140_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Email_140_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Email_140_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Email_140_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Email_140_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Email_140_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Email_140_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Email_140_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Email_140_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Email_140_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Email_140_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Email_140_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Email_140_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Email_140_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Email_140_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Email_140_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Email_140_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Email_310(in any) *pbgear.Identity_Email_310 {
	out := &pbgear.Identity_Email_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Email
	v0 := To_OneOf_Identity_Email_310_email(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Email_310_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Email_310_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Email_310_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Email_310_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Email_310_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Email_310_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Email_310_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Email_310_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Email_310_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Email_310_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Email_310_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Email_310_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Email_310_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Email_310_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Email_310_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Email_310_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Email_310_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Email_310_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Email_310_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Email_310_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Email_310_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Email_310_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Email_310_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Email_310_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Email_310_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Email_310_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Email_310_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Email_310_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Email_310_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Email_310_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Email_310_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Email_310_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Email_310_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Email_310_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Email_310_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Email_310_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Email_310_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Email_310_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Email_310_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Email_1030(in any) *pbgear.Identity_Email_1030 {
	out := &pbgear.Identity_Email_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Email
	v0 := To_OneOf_Identity_Email_1030_email(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Email_1030_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Email_1030_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Email_1030_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Email_1030_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Email_1030_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Email_1030_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Email_1030_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Email_1030_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Email_1030_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Email_1030_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Email_1030_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Email_1030_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Email_1030_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Email_1030_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Email_1030_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Email_1030_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Email_1030_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Email_1030_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Email_1030_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Email_1030_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Email_1030_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Email_1030_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Email_1030_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Email_1030_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Email_1030_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Email_1030_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Email_1030_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Email_1030_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Email_1030_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Email_1030_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Email_1030_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Email_1030_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Email_1030_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Email_1030_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Email_1030_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Email_1030_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Email_1030_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Email_1030_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Email_1030_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Email_1400(in any) *pbgear.Identity_Email_1400 {
	out := &pbgear.Identity_Email_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Email
	v0 := To_OneOf_Identity_Email_1400_email(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Email_1400_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Email_1400_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Email_1400_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Email_1400_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Email_1400_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Email_1400_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Email_1400_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Email_1400_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Email_1400_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Email_1400_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Email_1400_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Email_1400_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Email_1400_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Email_1400_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Email_1400_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Email_1400_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Email_1400_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Email_1400_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Email_1400_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Email_1400_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Email_1400_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Email_1400_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Email_1400_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Email_1400_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Email_1400_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Email_1400_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Email_1400_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Email_1400_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Email_1400_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Email_1400_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Email_1400_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Email_1400_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Email_1400_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Email_1400_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Email_1400_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Email_1400_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Email_1400_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Email_1400_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Email_1400_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Image_100(in any) *pbgear.Identity_Image_100 {
	out := &pbgear.Identity_Image_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Image
	v0 := To_OneOf_Identity_Image_100_image(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Image_100_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Image_100_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Image_100_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Image_100_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Image_100_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Image_100_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Image_100_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Image_100_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Image_100_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Image_100_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Image_100_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Image_100_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Image_100_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Image_100_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Image_100_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Image_100_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Image_100_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Image_100_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Image_100_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Image_100_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Image_100_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Image_100_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Image_100_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Image_100_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Image_100_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Image_100_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Image_100_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Image_100_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Image_100_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Image_100_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Image_100_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Image_100_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Image_100_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Image_100_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Image_100_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Image_100_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Image_100_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Image_100_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Image_100_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Image_140(in any) *pbgear.Identity_Image_140 {
	out := &pbgear.Identity_Image_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Image
	v0 := To_OneOf_Identity_Image_140_image(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Image_140_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Image_140_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Image_140_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Image_140_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Image_140_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Image_140_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Image_140_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Image_140_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Image_140_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Image_140_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Image_140_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Image_140_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Image_140_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Image_140_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Image_140_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Image_140_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Image_140_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Image_140_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Image_140_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Image_140_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Image_140_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Image_140_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Image_140_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Image_140_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Image_140_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Image_140_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Image_140_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Image_140_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Image_140_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Image_140_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Image_140_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Image_140_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Image_140_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Image_140_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Image_140_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Image_140_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Image_140_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Image_140_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Image_140_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Image_310(in any) *pbgear.Identity_Image_310 {
	out := &pbgear.Identity_Image_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Image
	v0 := To_OneOf_Identity_Image_310_image(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Image_310_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Image_310_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Image_310_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Image_310_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Image_310_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Image_310_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Image_310_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Image_310_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Image_310_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Image_310_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Image_310_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Image_310_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Image_310_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Image_310_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Image_310_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Image_310_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Image_310_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Image_310_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Image_310_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Image_310_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Image_310_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Image_310_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Image_310_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Image_310_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Image_310_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Image_310_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Image_310_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Image_310_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Image_310_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Image_310_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Image_310_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Image_310_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Image_310_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Image_310_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Image_310_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Image_310_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Image_310_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Image_310_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Image_310_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Image_1030(in any) *pbgear.Identity_Image_1030 {
	out := &pbgear.Identity_Image_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Image
	v0 := To_OneOf_Identity_Image_1030_image(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Image_1030_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Image_1030_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Image_1030_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Image_1030_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Image_1030_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Image_1030_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Image_1030_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Image_1030_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Image_1030_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Image_1030_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Image_1030_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Image_1030_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Image_1030_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Image_1030_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Image_1030_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Image_1030_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Image_1030_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Image_1030_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Image_1030_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Image_1030_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Image_1030_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Image_1030_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Image_1030_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Image_1030_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Image_1030_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Image_1030_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Image_1030_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Image_1030_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Image_1030_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Image_1030_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Image_1030_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Image_1030_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Image_1030_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Image_1030_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Image_1030_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Image_1030_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Image_1030_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Image_1030_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Image_1030_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Image_1400(in any) *pbgear.Identity_Image_1400 {
	out := &pbgear.Identity_Image_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Image
	v0 := To_OneOf_Identity_Image_1400_image(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Image_1400_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Image_1400_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Image_1400_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Image_1400_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Image_1400_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Image_1400_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Image_1400_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Image_1400_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Image_1400_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Image_1400_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Image_1400_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Image_1400_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Image_1400_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Image_1400_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Image_1400_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Image_1400_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Image_1400_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Image_1400_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Image_1400_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Image_1400_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Image_1400_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Image_1400_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Image_1400_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Image_1400_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Image_1400_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Image_1400_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Image_1400_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Image_1400_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Image_1400_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Image_1400_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Image_1400_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Image_1400_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Image_1400_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Image_1400_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Image_1400_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Image_1400_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Image_1400_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Image_1400_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Image_1400_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Judgement_100(in any) *pbgear.Identity_Judgement_100 {
	out := &pbgear.Identity_Judgement_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Judgement
	v0 := To_OneOf_Identity_Judgement_100_judgement(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Judgement").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Judgement_100_judgement(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Judgement_100_JudgementUnknown{
			JudgementUnknown: To_Identity_Unknown(param),
		}
	case 1:
		return &pbgear.Identity_Judgement_100_JudgementFeePaid{
			JudgementFeePaid: To_Identity_FeePaid(param),
		}
	case 2:
		return &pbgear.Identity_Judgement_100_JudgementReasonable{
			JudgementReasonable: To_Identity_Reasonable(param),
		}
	case 3:
		return &pbgear.Identity_Judgement_100_JudgementKnownGood{
			JudgementKnownGood: To_Identity_KnownGood(param),
		}
	case 4:
		return &pbgear.Identity_Judgement_100_JudgementOutOfDate{
			JudgementOutOfDate: To_Identity_OutOfDate(param),
		}
	case 5:
		return &pbgear.Identity_Judgement_100_JudgementLowQuality{
			JudgementLowQuality: To_Identity_LowQuality(param),
		}
	case 6:
		return &pbgear.Identity_Judgement_100_JudgementErroneous{
			JudgementErroneous: To_Identity_Erroneous(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Judgement_140(in any) *pbgear.Identity_Judgement_140 {
	out := &pbgear.Identity_Judgement_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Judgement
	v0 := To_OneOf_Identity_Judgement_140_judgement(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Judgement").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Judgement_140_judgement(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Judgement_140_JudgementUnknown{
			JudgementUnknown: To_Identity_Unknown(param),
		}
	case 1:
		return &pbgear.Identity_Judgement_140_JudgementFeePaid{
			JudgementFeePaid: To_Identity_FeePaid(param),
		}
	case 2:
		return &pbgear.Identity_Judgement_140_JudgementReasonable{
			JudgementReasonable: To_Identity_Reasonable(param),
		}
	case 3:
		return &pbgear.Identity_Judgement_140_JudgementKnownGood{
			JudgementKnownGood: To_Identity_KnownGood(param),
		}
	case 4:
		return &pbgear.Identity_Judgement_140_JudgementOutOfDate{
			JudgementOutOfDate: To_Identity_OutOfDate(param),
		}
	case 5:
		return &pbgear.Identity_Judgement_140_JudgementLowQuality{
			JudgementLowQuality: To_Identity_LowQuality(param),
		}
	case 6:
		return &pbgear.Identity_Judgement_140_JudgementErroneous{
			JudgementErroneous: To_Identity_Erroneous(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Judgement_310(in any) *pbgear.Identity_Judgement_310 {
	out := &pbgear.Identity_Judgement_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Judgement
	v0 := To_OneOf_Identity_Judgement_310_judgement(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Judgement").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Judgement_310_judgement(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Judgement_310_JudgementUnknown{
			JudgementUnknown: To_Identity_Unknown(param),
		}
	case 1:
		return &pbgear.Identity_Judgement_310_JudgementFeePaid{
			JudgementFeePaid: To_Identity_FeePaid(param),
		}
	case 2:
		return &pbgear.Identity_Judgement_310_JudgementReasonable{
			JudgementReasonable: To_Identity_Reasonable(param),
		}
	case 3:
		return &pbgear.Identity_Judgement_310_JudgementKnownGood{
			JudgementKnownGood: To_Identity_KnownGood(param),
		}
	case 4:
		return &pbgear.Identity_Judgement_310_JudgementOutOfDate{
			JudgementOutOfDate: To_Identity_OutOfDate(param),
		}
	case 5:
		return &pbgear.Identity_Judgement_310_JudgementLowQuality{
			JudgementLowQuality: To_Identity_LowQuality(param),
		}
	case 6:
		return &pbgear.Identity_Judgement_310_JudgementErroneous{
			JudgementErroneous: To_Identity_Erroneous(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Judgement_1030(in any) *pbgear.Identity_Judgement_1030 {
	out := &pbgear.Identity_Judgement_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Judgement
	v0 := To_OneOf_Identity_Judgement_1030_judgement(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Judgement").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Judgement_1030_judgement(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Judgement_1030_JudgementUnknown{
			JudgementUnknown: To_Identity_Unknown(param),
		}
	case 1:
		return &pbgear.Identity_Judgement_1030_JudgementFeePaid{
			JudgementFeePaid: To_Identity_FeePaid(param),
		}
	case 2:
		return &pbgear.Identity_Judgement_1030_JudgementReasonable{
			JudgementReasonable: To_Identity_Reasonable(param),
		}
	case 3:
		return &pbgear.Identity_Judgement_1030_JudgementKnownGood{
			JudgementKnownGood: To_Identity_KnownGood(param),
		}
	case 4:
		return &pbgear.Identity_Judgement_1030_JudgementOutOfDate{
			JudgementOutOfDate: To_Identity_OutOfDate(param),
		}
	case 5:
		return &pbgear.Identity_Judgement_1030_JudgementLowQuality{
			JudgementLowQuality: To_Identity_LowQuality(param),
		}
	case 6:
		return &pbgear.Identity_Judgement_1030_JudgementErroneous{
			JudgementErroneous: To_Identity_Erroneous(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Judgement_1400(in any) *pbgear.Identity_Judgement_1400 {
	out := &pbgear.Identity_Judgement_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Judgement
	v0 := To_OneOf_Identity_Judgement_1400_judgement(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Judgement").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Judgement_1400_judgement(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Judgement_1400_JudgementUnknown{
			JudgementUnknown: To_Identity_Unknown(param),
		}
	case 1:
		return &pbgear.Identity_Judgement_1400_JudgementFeePaid{
			JudgementFeePaid: To_Identity_FeePaid(param),
		}
	case 2:
		return &pbgear.Identity_Judgement_1400_JudgementReasonable{
			JudgementReasonable: To_Identity_Reasonable(param),
		}
	case 3:
		return &pbgear.Identity_Judgement_1400_JudgementKnownGood{
			JudgementKnownGood: To_Identity_KnownGood(param),
		}
	case 4:
		return &pbgear.Identity_Judgement_1400_JudgementOutOfDate{
			JudgementOutOfDate: To_Identity_OutOfDate(param),
		}
	case 5:
		return &pbgear.Identity_Judgement_1400_JudgementLowQuality{
			JudgementLowQuality: To_Identity_LowQuality(param),
		}
	case 6:
		return &pbgear.Identity_Judgement_1400_JudgementErroneous{
			JudgementErroneous: To_Identity_Erroneous(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_KillIdentityCall_100(in any) *pbgear.Identity_KillIdentityCall_100 {
	out := &pbgear.Identity_KillIdentityCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Identity_KillIdentityCall_100_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Identity_KillIdentityCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_KillIdentityCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityKillIdentityCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityKillIdentityCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Identity_KillIdentityCall_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_KillIdentityCall_100_TargetId{
			TargetId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_KillIdentityCall_100_TargetIndex{
			TargetIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_KillIdentityCall_100_TargetRaw{
			TargetRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_KillIdentityCall_100_TargetAddress32{
			TargetAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_KillIdentityCall_100_TargetAddress20{
			TargetAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Legal_100(in any) *pbgear.Identity_Legal_100 {
	out := &pbgear.Identity_Legal_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Legal
	v0 := To_OneOf_Identity_Legal_100_legal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Legal_100_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Legal_100_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Legal_100_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Legal_100_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Legal_100_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Legal_100_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Legal_100_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Legal_100_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Legal_100_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Legal_100_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Legal_100_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Legal_100_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Legal_100_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Legal_100_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Legal_100_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Legal_100_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Legal_100_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Legal_100_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Legal_100_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Legal_100_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Legal_100_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Legal_100_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Legal_100_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Legal_100_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Legal_100_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Legal_100_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Legal_100_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Legal_100_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Legal_100_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Legal_100_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Legal_100_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Legal_100_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Legal_100_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Legal_100_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Legal_100_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Legal_100_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Legal_100_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Legal_100_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Legal_100_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Legal_140(in any) *pbgear.Identity_Legal_140 {
	out := &pbgear.Identity_Legal_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Legal
	v0 := To_OneOf_Identity_Legal_140_legal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Legal_140_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Legal_140_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Legal_140_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Legal_140_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Legal_140_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Legal_140_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Legal_140_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Legal_140_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Legal_140_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Legal_140_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Legal_140_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Legal_140_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Legal_140_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Legal_140_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Legal_140_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Legal_140_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Legal_140_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Legal_140_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Legal_140_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Legal_140_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Legal_140_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Legal_140_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Legal_140_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Legal_140_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Legal_140_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Legal_140_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Legal_140_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Legal_140_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Legal_140_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Legal_140_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Legal_140_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Legal_140_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Legal_140_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Legal_140_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Legal_140_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Legal_140_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Legal_140_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Legal_140_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Legal_140_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Legal_310(in any) *pbgear.Identity_Legal_310 {
	out := &pbgear.Identity_Legal_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Legal
	v0 := To_OneOf_Identity_Legal_310_legal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Legal_310_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Legal_310_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Legal_310_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Legal_310_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Legal_310_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Legal_310_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Legal_310_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Legal_310_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Legal_310_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Legal_310_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Legal_310_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Legal_310_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Legal_310_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Legal_310_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Legal_310_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Legal_310_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Legal_310_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Legal_310_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Legal_310_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Legal_310_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Legal_310_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Legal_310_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Legal_310_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Legal_310_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Legal_310_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Legal_310_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Legal_310_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Legal_310_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Legal_310_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Legal_310_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Legal_310_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Legal_310_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Legal_310_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Legal_310_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Legal_310_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Legal_310_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Legal_310_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Legal_310_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Legal_310_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Legal_1030(in any) *pbgear.Identity_Legal_1030 {
	out := &pbgear.Identity_Legal_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Legal
	v0 := To_OneOf_Identity_Legal_1030_legal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Legal_1030_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Legal_1030_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Legal_1030_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Legal_1030_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Legal_1030_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Legal_1030_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Legal_1030_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Legal_1030_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Legal_1030_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Legal_1030_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Legal_1030_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Legal_1030_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Legal_1030_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Legal_1030_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Legal_1030_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Legal_1030_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Legal_1030_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Legal_1030_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Legal_1030_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Legal_1030_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Legal_1030_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Legal_1030_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Legal_1030_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Legal_1030_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Legal_1030_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Legal_1030_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Legal_1030_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Legal_1030_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Legal_1030_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Legal_1030_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Legal_1030_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Legal_1030_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Legal_1030_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Legal_1030_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Legal_1030_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Legal_1030_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Legal_1030_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Legal_1030_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Legal_1030_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Legal_1400(in any) *pbgear.Identity_Legal_1400 {
	out := &pbgear.Identity_Legal_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Legal
	v0 := To_OneOf_Identity_Legal_1400_legal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Legal_1400_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Legal_1400_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Legal_1400_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Legal_1400_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Legal_1400_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Legal_1400_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Legal_1400_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Legal_1400_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Legal_1400_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Legal_1400_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Legal_1400_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Legal_1400_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Legal_1400_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Legal_1400_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Legal_1400_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Legal_1400_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Legal_1400_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Legal_1400_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Legal_1400_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Legal_1400_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Legal_1400_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Legal_1400_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Legal_1400_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Legal_1400_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Legal_1400_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Legal_1400_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Legal_1400_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Legal_1400_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Legal_1400_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Legal_1400_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Legal_1400_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Legal_1400_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Legal_1400_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Legal_1400_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Legal_1400_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Legal_1400_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Legal_1400_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Legal_1400_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Legal_1400_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_New_100(in any) *pbgear.Identity_New_100 {
	out := &pbgear.Identity_New_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field New
	v0 := To_OneOf_Identity_New_100_new(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("New").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_New_100_new(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_New_100_NewId{
			NewId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_New_100_NewIndex{
			NewIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_New_100_NewRaw{
			NewRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_New_100_NewAddress32{
			NewAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_New_100_NewAddress20{
			NewAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_New_310(in any) *pbgear.Identity_New_310 {
	out := &pbgear.Identity_New_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field New
	v0 := To_OneOf_Identity_New_310_new(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("New").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_New_310_new(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_New_310_NewId{
			NewId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_New_310_NewIndex{
			NewIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_New_310_NewRaw{
			NewRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_New_310_NewAddress32{
			NewAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_New_310_NewAddress20{
			NewAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_New_1030(in any) *pbgear.Identity_New_1030 {
	out := &pbgear.Identity_New_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field New
	v0 := To_OneOf_Identity_New_1030_new(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("New").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_New_1030_new(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_New_1030_NewId{
			NewId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_New_1030_NewIndex{
			NewIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_New_1030_NewRaw{
			NewRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_New_1030_NewAddress32{
			NewAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_New_1030_NewAddress20{
			NewAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_ProvideJudgementCall_100(in any) *pbgear.Identity_ProvideJudgementCall_100 {
	out := &pbgear.Identity_ProvideJudgementCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RegIndex
	out.RegIndex = To_uint32(v.ValueAt(0))
	// oneOf field Target
	v1 := To_OneOf_Identity_ProvideJudgementCall_100_target(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v1))
	// oneOf field Judgement
	v2 := To_OneOf_Identity_ProvideJudgementCall_100_judgement(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Judgement").Set(reflect.ValueOf(v2))
	// field Identity To_PrimitiveTypesH256(w)
	out.Identity = To_PrimitiveTypesH256(v.ValueAt(3))

	return out //from message
}
func To_Identity_ProvideJudgementCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_ProvideJudgementCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityProvideJudgementCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityProvideJudgementCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Identity_ProvideJudgementCall_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_ProvideJudgementCall_100_TargetId{
			TargetId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_ProvideJudgementCall_100_TargetIndex{
			TargetIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_ProvideJudgementCall_100_TargetRaw{
			TargetRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_ProvideJudgementCall_100_TargetAddress32{
			TargetAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_ProvideJudgementCall_100_TargetAddress20{
			TargetAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_ProvideJudgementCall_100_judgement(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_ProvideJudgementCall_100_JudgementUnknown{
			JudgementUnknown: To_Identity_Unknown(param),
		}
	case 1:
		return &pbgear.Identity_ProvideJudgementCall_100_JudgementFeePaid{
			JudgementFeePaid: To_Identity_FeePaid(param),
		}
	case 2:
		return &pbgear.Identity_ProvideJudgementCall_100_JudgementReasonable{
			JudgementReasonable: To_Identity_Reasonable(param),
		}
	case 3:
		return &pbgear.Identity_ProvideJudgementCall_100_JudgementKnownGood{
			JudgementKnownGood: To_Identity_KnownGood(param),
		}
	case 4:
		return &pbgear.Identity_ProvideJudgementCall_100_JudgementOutOfDate{
			JudgementOutOfDate: To_Identity_OutOfDate(param),
		}
	case 5:
		return &pbgear.Identity_ProvideJudgementCall_100_JudgementLowQuality{
			JudgementLowQuality: To_Identity_LowQuality(param),
		}
	case 6:
		return &pbgear.Identity_ProvideJudgementCall_100_JudgementErroneous{
			JudgementErroneous: To_Identity_Erroneous(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Identity_QuitSubCall_100(in any) *pbgear.Identity_QuitSubCall_100 {
	out := &pbgear.Identity_QuitSubCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Identity_RemoveSubCall_100(in any) *pbgear.Identity_RemoveSubCall_100 {
	out := &pbgear.Identity_RemoveSubCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Sub
	v0 := To_OneOf_Identity_RemoveSubCall_100_sub(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Sub").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Identity_RemoveSubCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_RemoveSubCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityRemoveSubCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityRemoveSubCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Identity_RemoveSubCall_100_sub(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_RemoveSubCall_100_SubId{
			SubId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_RemoveSubCall_100_SubIndex{
			SubIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_RemoveSubCall_100_SubRaw{
			SubRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_RemoveSubCall_100_SubAddress32{
			SubAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_RemoveSubCall_100_SubAddress20{
			SubAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_RenameSubCall_100(in any) *pbgear.Identity_RenameSubCall_100 {
	out := &pbgear.Identity_RenameSubCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Sub
	v0 := To_OneOf_Identity_RenameSubCall_100_sub(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Sub").Set(reflect.ValueOf(v0))
	// oneOf field Data
	v1 := To_OneOf_Identity_RenameSubCall_100_data(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Data").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Identity_RenameSubCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_RenameSubCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityRenameSubCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityRenameSubCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Identity_RenameSubCall_100_sub(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_RenameSubCall_100_SubId{
			SubId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_RenameSubCall_100_SubIndex{
			SubIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_RenameSubCall_100_SubRaw{
			SubRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_RenameSubCall_100_SubAddress32{
			SubAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_RenameSubCall_100_SubAddress20{
			SubAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_RenameSubCall_100_data(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_RenameSubCall_100_DataNone{
			DataNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_RenameSubCall_100_DataRaw0{
			DataRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_RenameSubCall_100_DataRaw1{
			DataRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_RenameSubCall_100_DataRaw2{
			DataRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_RenameSubCall_100_DataRaw3{
			DataRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_RenameSubCall_100_DataRaw4{
			DataRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_RenameSubCall_100_DataRaw5{
			DataRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_RenameSubCall_100_DataRaw6{
			DataRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_RenameSubCall_100_DataRaw7{
			DataRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_RenameSubCall_100_DataRaw8{
			DataRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_RenameSubCall_100_DataRaw9{
			DataRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_RenameSubCall_100_DataRaw10{
			DataRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_RenameSubCall_100_DataRaw11{
			DataRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_RenameSubCall_100_DataRaw12{
			DataRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_RenameSubCall_100_DataRaw13{
			DataRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_RenameSubCall_100_DataRaw14{
			DataRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_RenameSubCall_100_DataRaw15{
			DataRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_RenameSubCall_100_DataRaw16{
			DataRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_RenameSubCall_100_DataRaw17{
			DataRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_RenameSubCall_100_DataRaw18{
			DataRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_RenameSubCall_100_DataRaw19{
			DataRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_RenameSubCall_100_DataRaw20{
			DataRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_RenameSubCall_100_DataRaw21{
			DataRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_RenameSubCall_100_DataRaw22{
			DataRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_RenameSubCall_100_DataRaw23{
			DataRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_RenameSubCall_100_DataRaw24{
			DataRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_RenameSubCall_100_DataRaw25{
			DataRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_RenameSubCall_100_DataRaw26{
			DataRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_RenameSubCall_100_DataRaw27{
			DataRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_RenameSubCall_100_DataRaw28{
			DataRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_RenameSubCall_100_DataRaw29{
			DataRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_RenameSubCall_100_DataRaw30{
			DataRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_RenameSubCall_100_DataRaw31{
			DataRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_RenameSubCall_100_DataRaw32{
			DataRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_RenameSubCall_100_DataBlakeTwo256{
			DataBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_RenameSubCall_100_DataSha256{
			DataSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_RenameSubCall_100_DataKeccak256{
			DataKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_RenameSubCall_100_DataShaThree256{
			DataShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_RequestJudgementCall_100(in any) *pbgear.Identity_RequestJudgementCall_100 {
	out := &pbgear.Identity_RequestJudgementCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RegIndex
	out.RegIndex = To_uint32(v.ValueAt(0))
	// primitive field MaxFee
	out.MaxFee = To_string(v.ValueAt(1))

	return out //from message
}
func To_Identity_RequestJudgementCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_RequestJudgementCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentityRequestJudgementCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentityRequestJudgementCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Identity_Riot_100(in any) *pbgear.Identity_Riot_100 {
	out := &pbgear.Identity_Riot_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Riot
	v0 := To_OneOf_Identity_Riot_100_riot(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Riot_100_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Riot_100_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Riot_100_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Riot_100_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Riot_100_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Riot_100_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Riot_100_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Riot_100_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Riot_100_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Riot_100_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Riot_100_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Riot_100_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Riot_100_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Riot_100_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Riot_100_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Riot_100_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Riot_100_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Riot_100_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Riot_100_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Riot_100_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Riot_100_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Riot_100_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Riot_100_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Riot_100_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Riot_100_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Riot_100_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Riot_100_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Riot_100_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Riot_100_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Riot_100_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Riot_100_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Riot_100_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Riot_100_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Riot_100_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Riot_100_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Riot_100_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Riot_100_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Riot_100_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Riot_100_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Riot_140(in any) *pbgear.Identity_Riot_140 {
	out := &pbgear.Identity_Riot_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Riot
	v0 := To_OneOf_Identity_Riot_140_riot(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Riot_140_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Riot_140_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Riot_140_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Riot_140_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Riot_140_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Riot_140_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Riot_140_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Riot_140_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Riot_140_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Riot_140_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Riot_140_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Riot_140_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Riot_140_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Riot_140_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Riot_140_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Riot_140_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Riot_140_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Riot_140_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Riot_140_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Riot_140_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Riot_140_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Riot_140_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Riot_140_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Riot_140_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Riot_140_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Riot_140_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Riot_140_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Riot_140_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Riot_140_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Riot_140_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Riot_140_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Riot_140_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Riot_140_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Riot_140_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Riot_140_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Riot_140_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Riot_140_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Riot_140_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Riot_140_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Riot_310(in any) *pbgear.Identity_Riot_310 {
	out := &pbgear.Identity_Riot_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Riot
	v0 := To_OneOf_Identity_Riot_310_riot(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Riot_310_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Riot_310_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Riot_310_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Riot_310_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Riot_310_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Riot_310_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Riot_310_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Riot_310_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Riot_310_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Riot_310_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Riot_310_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Riot_310_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Riot_310_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Riot_310_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Riot_310_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Riot_310_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Riot_310_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Riot_310_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Riot_310_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Riot_310_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Riot_310_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Riot_310_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Riot_310_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Riot_310_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Riot_310_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Riot_310_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Riot_310_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Riot_310_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Riot_310_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Riot_310_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Riot_310_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Riot_310_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Riot_310_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Riot_310_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Riot_310_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Riot_310_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Riot_310_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Riot_310_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Riot_310_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Riot_1030(in any) *pbgear.Identity_Riot_1030 {
	out := &pbgear.Identity_Riot_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Riot
	v0 := To_OneOf_Identity_Riot_1030_riot(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Riot_1030_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Riot_1030_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Riot_1030_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Riot_1030_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Riot_1030_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Riot_1030_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Riot_1030_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Riot_1030_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Riot_1030_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Riot_1030_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Riot_1030_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Riot_1030_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Riot_1030_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Riot_1030_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Riot_1030_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Riot_1030_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Riot_1030_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Riot_1030_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Riot_1030_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Riot_1030_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Riot_1030_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Riot_1030_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Riot_1030_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Riot_1030_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Riot_1030_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Riot_1030_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Riot_1030_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Riot_1030_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Riot_1030_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Riot_1030_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Riot_1030_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Riot_1030_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Riot_1030_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Riot_1030_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Riot_1030_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Riot_1030_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Riot_1030_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Riot_1030_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Riot_1030_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Riot_1400(in any) *pbgear.Identity_Riot_1400 {
	out := &pbgear.Identity_Riot_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Riot
	v0 := To_OneOf_Identity_Riot_1400_riot(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Riot_1400_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Riot_1400_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Riot_1400_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Riot_1400_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Riot_1400_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Riot_1400_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Riot_1400_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Riot_1400_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Riot_1400_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Riot_1400_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Riot_1400_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Riot_1400_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Riot_1400_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Riot_1400_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Riot_1400_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Riot_1400_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Riot_1400_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Riot_1400_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Riot_1400_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Riot_1400_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Riot_1400_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Riot_1400_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Riot_1400_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Riot_1400_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Riot_1400_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Riot_1400_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Riot_1400_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Riot_1400_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Riot_1400_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Riot_1400_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Riot_1400_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Riot_1400_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Riot_1400_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Riot_1400_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Riot_1400_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Riot_1400_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Riot_1400_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Riot_1400_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Riot_1400_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_SetAccountIdCall_100(in any) *pbgear.Identity_SetAccountIdCall_100 {
	out := &pbgear.Identity_SetAccountIdCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// oneOf field New
	v1 := To_OneOf_Identity_SetAccountIdCall_100_new(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("New").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Identity_SetAccountIdCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_SetAccountIdCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentitySetAccountIdCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentitySetAccountIdCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Identity_SetAccountIdCall_100_new(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_SetAccountIdCall_100_NewId{
			NewId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_SetAccountIdCall_100_NewIndex{
			NewIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_SetAccountIdCall_100_NewRaw{
			NewRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_SetAccountIdCall_100_NewAddress32{
			NewAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_SetAccountIdCall_100_NewAddress20{
			NewAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_SetFeeCall_100(in any) *pbgear.Identity_SetFeeCall_100 {
	out := &pbgear.Identity_SetFeeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field Fee
	out.Fee = To_string(v.ValueAt(1))

	return out //from message
}
func To_Identity_SetFeeCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_SetFeeCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentitySetFeeCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentitySetFeeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Identity_SetFieldsCall_100(in any) *pbgear.Identity_SetFieldsCall_100 {
	out := &pbgear.Identity_SetFieldsCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// field Fields To_Identity_PalletIdentityTypesBitFlags(w)
	out.Fields = To_Identity_PalletIdentityTypesBitFlags(v.ValueAt(1))

	return out //from message
}
func To_Identity_SetFieldsCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_SetFieldsCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentitySetFieldsCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentitySetFieldsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Identity_SetIdentityCall_100(in any) *pbgear.Identity_SetIdentityCall_100 {
	out := &pbgear.Identity_SetIdentityCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Info To_Identity_PalletIdentityTypesIdentityInfo(w)
	out.Info = To_Identity_PalletIdentityTypesIdentityInfo(v.ValueAt(0))

	return out //from message
}
func To_Identity_SetIdentityCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_SetIdentityCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentitySetIdentityCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentitySetIdentityCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Identity_SetIdentityCall_1410(in any) *pbgear.Identity_SetIdentityCall_1410 {
	out := &pbgear.Identity_SetIdentityCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// field Info To_Identity_PalletIdentitySimpleIdentityInfo(w)
	out.Info = To_Identity_PalletIdentitySimpleIdentityInfo(v.ValueAt(0))

	return out //from message
}
func To_Identity_SetIdentityCall_1410_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_SetIdentityCall_1410(in)
	out := &pbgearextrinsic.Extrinsic_IdentitySetIdentityCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentitySetIdentityCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Identity_SetSubsCall_100(in any) *pbgear.Identity_SetSubsCall_100 {
	out := &pbgear.Identity_SetSubsCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Subs
	out.Subs = To_Repeated_Identity_SetSubsCall_100_subs(v.ValueAt(0))

	return out //from message
}
func To_Identity_SetSubsCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Identity_SetSubsCall_100(in)
	out := &pbgearextrinsic.Extrinsic_IdentitySetSubsCall{}
	reflect.ValueOf(out).Elem().FieldByName("IdentitySetSubsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Identity_SetSubsCall_100_subs(in any) []*pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData {
	items := in.([]interface{})

	var out []*pbgear.Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Identity_TupleSpCoreCryptoAccountId32PalletIdentityTypesData(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Identity_Sub_100(in any) *pbgear.Identity_Sub_100 {
	out := &pbgear.Identity_Sub_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Sub
	v0 := To_OneOf_Identity_Sub_100_sub(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Sub").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Sub_100_sub(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Sub_100_SubId{
			SubId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Sub_100_SubIndex{
			SubIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Sub_100_SubRaw{
			SubRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Sub_100_SubAddress32{
			SubAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Sub_100_SubAddress20{
			SubAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Sub_310(in any) *pbgear.Identity_Sub_310 {
	out := &pbgear.Identity_Sub_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Sub
	v0 := To_OneOf_Identity_Sub_310_sub(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Sub").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Sub_310_sub(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Sub_310_SubId{
			SubId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Sub_310_SubIndex{
			SubIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Sub_310_SubRaw{
			SubRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Sub_310_SubAddress32{
			SubAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Sub_310_SubAddress20{
			SubAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Sub_1030(in any) *pbgear.Identity_Sub_1030 {
	out := &pbgear.Identity_Sub_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Sub
	v0 := To_OneOf_Identity_Sub_1030_sub(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Sub").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Sub_1030_sub(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Sub_1030_SubId{
			SubId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Sub_1030_SubIndex{
			SubIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Sub_1030_SubRaw{
			SubRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Sub_1030_SubAddress32{
			SubAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Sub_1030_SubAddress20{
			SubAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Target_100(in any) *pbgear.Identity_Target_100 {
	out := &pbgear.Identity_Target_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Identity_Target_100_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Target_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Target_100_TargetId{
			TargetId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Target_100_TargetIndex{
			TargetIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Target_100_TargetRaw{
			TargetRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Target_100_TargetAddress32{
			TargetAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Target_100_TargetAddress20{
			TargetAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Target_310(in any) *pbgear.Identity_Target_310 {
	out := &pbgear.Identity_Target_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Identity_Target_310_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Target_310_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Target_310_TargetId{
			TargetId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Target_310_TargetIndex{
			TargetIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Target_310_TargetRaw{
			TargetRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Target_310_TargetAddress32{
			TargetAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Target_310_TargetAddress20{
			TargetAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Target_1030(in any) *pbgear.Identity_Target_1030 {
	out := &pbgear.Identity_Target_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Identity_Target_1030_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Target_1030_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Target_1030_TargetId{
			TargetId: To_Identity_Id(param),
		}
	case 1:
		return &pbgear.Identity_Target_1030_TargetIndex{
			TargetIndex: To_Identity_Index(param),
		}
	case 2:
		return &pbgear.Identity_Target_1030_TargetRaw{
			TargetRaw: To_Identity_Raw(param),
		}
	case 3:
		return &pbgear.Identity_Target_1030_TargetAddress32{
			TargetAddress32: To_Identity_Address32(param),
		}
	case 4:
		return &pbgear.Identity_Target_1030_TargetAddress20{
			TargetAddress20: To_Identity_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Twitter_100(in any) *pbgear.Identity_Twitter_100 {
	out := &pbgear.Identity_Twitter_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Twitter
	v0 := To_OneOf_Identity_Twitter_100_twitter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Twitter_100_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Twitter_100_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Twitter_100_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Twitter_100_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Twitter_100_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Twitter_100_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Twitter_100_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Twitter_100_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Twitter_100_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Twitter_100_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Twitter_100_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Twitter_100_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Twitter_100_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Twitter_100_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Twitter_100_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Twitter_100_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Twitter_100_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Twitter_100_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Twitter_100_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Twitter_100_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Twitter_100_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Twitter_100_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Twitter_100_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Twitter_100_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Twitter_100_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Twitter_100_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Twitter_100_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Twitter_100_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Twitter_100_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Twitter_100_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Twitter_100_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Twitter_100_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Twitter_100_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Twitter_100_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Twitter_100_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Twitter_100_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Twitter_100_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Twitter_100_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Twitter_100_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Twitter_140(in any) *pbgear.Identity_Twitter_140 {
	out := &pbgear.Identity_Twitter_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Twitter
	v0 := To_OneOf_Identity_Twitter_140_twitter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Twitter_140_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Twitter_140_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Twitter_140_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Twitter_140_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Twitter_140_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Twitter_140_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Twitter_140_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Twitter_140_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Twitter_140_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Twitter_140_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Twitter_140_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Twitter_140_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Twitter_140_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Twitter_140_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Twitter_140_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Twitter_140_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Twitter_140_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Twitter_140_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Twitter_140_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Twitter_140_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Twitter_140_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Twitter_140_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Twitter_140_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Twitter_140_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Twitter_140_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Twitter_140_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Twitter_140_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Twitter_140_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Twitter_140_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Twitter_140_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Twitter_140_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Twitter_140_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Twitter_140_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Twitter_140_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Twitter_140_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Twitter_140_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Twitter_140_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Twitter_140_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Twitter_140_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Twitter_310(in any) *pbgear.Identity_Twitter_310 {
	out := &pbgear.Identity_Twitter_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Twitter
	v0 := To_OneOf_Identity_Twitter_310_twitter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Twitter_310_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Twitter_310_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Twitter_310_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Twitter_310_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Twitter_310_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Twitter_310_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Twitter_310_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Twitter_310_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Twitter_310_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Twitter_310_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Twitter_310_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Twitter_310_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Twitter_310_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Twitter_310_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Twitter_310_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Twitter_310_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Twitter_310_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Twitter_310_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Twitter_310_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Twitter_310_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Twitter_310_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Twitter_310_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Twitter_310_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Twitter_310_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Twitter_310_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Twitter_310_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Twitter_310_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Twitter_310_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Twitter_310_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Twitter_310_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Twitter_310_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Twitter_310_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Twitter_310_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Twitter_310_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Twitter_310_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Twitter_310_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Twitter_310_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Twitter_310_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Twitter_310_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Twitter_1030(in any) *pbgear.Identity_Twitter_1030 {
	out := &pbgear.Identity_Twitter_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Twitter
	v0 := To_OneOf_Identity_Twitter_1030_twitter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Twitter_1030_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Twitter_1030_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Twitter_1030_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Twitter_1030_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Twitter_1030_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Twitter_1030_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Twitter_1030_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Twitter_1030_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Twitter_1030_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Twitter_1030_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Twitter_1030_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Twitter_1030_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Twitter_1030_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Twitter_1030_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Twitter_1030_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Twitter_1030_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Twitter_1030_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Twitter_1030_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Twitter_1030_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Twitter_1030_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Twitter_1030_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Twitter_1030_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Twitter_1030_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Twitter_1030_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Twitter_1030_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Twitter_1030_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Twitter_1030_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Twitter_1030_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Twitter_1030_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Twitter_1030_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Twitter_1030_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Twitter_1030_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Twitter_1030_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Twitter_1030_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Twitter_1030_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Twitter_1030_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Twitter_1030_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Twitter_1030_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Twitter_1030_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Twitter_1400(in any) *pbgear.Identity_Twitter_1400 {
	out := &pbgear.Identity_Twitter_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Twitter
	v0 := To_OneOf_Identity_Twitter_1400_twitter(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Twitter_1400_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Twitter_1400_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Twitter_1400_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Twitter_1400_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Twitter_1400_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Twitter_1400_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Twitter_1400_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Twitter_1400_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Twitter_1400_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Twitter_1400_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Twitter_1400_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Twitter_1400_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Twitter_1400_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Twitter_1400_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Twitter_1400_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Twitter_1400_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Twitter_1400_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Twitter_1400_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Twitter_1400_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Twitter_1400_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Twitter_1400_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Twitter_1400_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Twitter_1400_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Twitter_1400_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Twitter_1400_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Twitter_1400_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Twitter_1400_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Twitter_1400_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Twitter_1400_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Twitter_1400_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Twitter_1400_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Twitter_1400_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Twitter_1400_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Twitter_1400_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Twitter_1400_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Twitter_1400_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Twitter_1400_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Twitter_1400_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Twitter_1400_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value0_100(in any) *pbgear.Identity_Value0_100 {
	out := &pbgear.Identity_Value0_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_Value0_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value0_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value0_100_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value0_100_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value0_100_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value0_100_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value0_100_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value0_100_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value0_100_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value0_100_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value0_100_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value0_100_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value0_100_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value0_100_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value0_100_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value0_100_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value0_100_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value0_100_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value0_100_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value0_100_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value0_100_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value0_100_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value0_100_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value0_100_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value0_100_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value0_100_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value0_100_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value0_100_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value0_100_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value0_100_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value0_100_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value0_100_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value0_100_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value0_100_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value0_100_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value0_100_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value0_100_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value0_100_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value0_100_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value0_100_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value0_140(in any) *pbgear.Identity_Value0_140 {
	out := &pbgear.Identity_Value0_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_Value0_140_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value0_140_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value0_140_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value0_140_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value0_140_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value0_140_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value0_140_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value0_140_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value0_140_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value0_140_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value0_140_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value0_140_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value0_140_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value0_140_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value0_140_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value0_140_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value0_140_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value0_140_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value0_140_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value0_140_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value0_140_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value0_140_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value0_140_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value0_140_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value0_140_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value0_140_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value0_140_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value0_140_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value0_140_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value0_140_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value0_140_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value0_140_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value0_140_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value0_140_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value0_140_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value0_140_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value0_140_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value0_140_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value0_140_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value0_140_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value0_310(in any) *pbgear.Identity_Value0_310 {
	out := &pbgear.Identity_Value0_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_Value0_310_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value0_310_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value0_310_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value0_310_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value0_310_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value0_310_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value0_310_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value0_310_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value0_310_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value0_310_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value0_310_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value0_310_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value0_310_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value0_310_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value0_310_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value0_310_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value0_310_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value0_310_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value0_310_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value0_310_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value0_310_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value0_310_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value0_310_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value0_310_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value0_310_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value0_310_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value0_310_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value0_310_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value0_310_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value0_310_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value0_310_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value0_310_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value0_310_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value0_310_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value0_310_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value0_310_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value0_310_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value0_310_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value0_310_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value0_310_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value0_1030(in any) *pbgear.Identity_Value0_1030 {
	out := &pbgear.Identity_Value0_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_Value0_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value0_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value0_1030_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value0_1030_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value0_1030_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value0_1030_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value0_1030_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value0_1030_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value0_1030_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value0_1030_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value0_1030_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value0_1030_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value0_1030_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value0_1030_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value0_1030_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value0_1030_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value0_1030_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value0_1030_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value0_1030_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value0_1030_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value0_1030_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value0_1030_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value0_1030_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value0_1030_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value0_1030_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value0_1030_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value0_1030_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value0_1030_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value0_1030_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value0_1030_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value0_1030_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value0_1030_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value0_1030_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value0_1030_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value0_1030_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value0_1030_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value0_1030_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value0_1030_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value0_1030_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value0_1030_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value0_1400(in any) *pbgear.Identity_Value0_1400 {
	out := &pbgear.Identity_Value0_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Identity_Value0_1400_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value0_1400_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value0_1400_Value0None{
			Value0None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value0_1400_Value0Raw0{
			Value0Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value0_1400_Value0Raw1{
			Value0Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value0_1400_Value0Raw2{
			Value0Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value0_1400_Value0Raw3{
			Value0Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value0_1400_Value0Raw4{
			Value0Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value0_1400_Value0Raw5{
			Value0Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value0_1400_Value0Raw6{
			Value0Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value0_1400_Value0Raw7{
			Value0Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value0_1400_Value0Raw8{
			Value0Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value0_1400_Value0Raw9{
			Value0Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value0_1400_Value0Raw10{
			Value0Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value0_1400_Value0Raw11{
			Value0Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value0_1400_Value0Raw12{
			Value0Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value0_1400_Value0Raw13{
			Value0Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value0_1400_Value0Raw14{
			Value0Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value0_1400_Value0Raw15{
			Value0Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value0_1400_Value0Raw16{
			Value0Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value0_1400_Value0Raw17{
			Value0Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value0_1400_Value0Raw18{
			Value0Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value0_1400_Value0Raw19{
			Value0Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value0_1400_Value0Raw20{
			Value0Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value0_1400_Value0Raw21{
			Value0Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value0_1400_Value0Raw22{
			Value0Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value0_1400_Value0Raw23{
			Value0Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value0_1400_Value0Raw24{
			Value0Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value0_1400_Value0Raw25{
			Value0Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value0_1400_Value0Raw26{
			Value0Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value0_1400_Value0Raw27{
			Value0Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value0_1400_Value0Raw28{
			Value0Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value0_1400_Value0Raw29{
			Value0Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value0_1400_Value0Raw30{
			Value0Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value0_1400_Value0Raw31{
			Value0Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value0_1400_Value0Raw32{
			Value0Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value0_1400_Value0BlakeTwo256{
			Value0BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value0_1400_Value0Sha256{
			Value0Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value0_1400_Value0Keccak256{
			Value0Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value0_1400_Value0ShaThree256{
			Value0ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value1_100(in any) *pbgear.Identity_Value1_100 {
	out := &pbgear.Identity_Value1_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Identity_Value1_100_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value1_100_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value1_100_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value1_100_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value1_100_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value1_100_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value1_100_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value1_100_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value1_100_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value1_100_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value1_100_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value1_100_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value1_100_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value1_100_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value1_100_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value1_100_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value1_100_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value1_100_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value1_100_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value1_100_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value1_100_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value1_100_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value1_100_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value1_100_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value1_100_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value1_100_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value1_100_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value1_100_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value1_100_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value1_100_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value1_100_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value1_100_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value1_100_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value1_100_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value1_100_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value1_100_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value1_100_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value1_100_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value1_100_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value1_100_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value1_140(in any) *pbgear.Identity_Value1_140 {
	out := &pbgear.Identity_Value1_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Identity_Value1_140_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value1_140_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value1_140_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value1_140_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value1_140_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value1_140_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value1_140_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value1_140_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value1_140_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value1_140_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value1_140_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value1_140_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value1_140_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value1_140_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value1_140_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value1_140_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value1_140_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value1_140_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value1_140_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value1_140_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value1_140_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value1_140_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value1_140_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value1_140_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value1_140_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value1_140_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value1_140_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value1_140_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value1_140_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value1_140_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value1_140_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value1_140_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value1_140_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value1_140_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value1_140_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value1_140_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value1_140_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value1_140_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value1_140_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value1_140_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value1_310(in any) *pbgear.Identity_Value1_310 {
	out := &pbgear.Identity_Value1_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Identity_Value1_310_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value1_310_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value1_310_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value1_310_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value1_310_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value1_310_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value1_310_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value1_310_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value1_310_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value1_310_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value1_310_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value1_310_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value1_310_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value1_310_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value1_310_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value1_310_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value1_310_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value1_310_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value1_310_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value1_310_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value1_310_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value1_310_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value1_310_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value1_310_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value1_310_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value1_310_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value1_310_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value1_310_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value1_310_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value1_310_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value1_310_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value1_310_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value1_310_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value1_310_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value1_310_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value1_310_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value1_310_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value1_310_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value1_310_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value1_310_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value1_1030(in any) *pbgear.Identity_Value1_1030 {
	out := &pbgear.Identity_Value1_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Identity_Value1_1030_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value1_1030_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value1_1030_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value1_1030_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value1_1030_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value1_1030_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value1_1030_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value1_1030_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value1_1030_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value1_1030_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value1_1030_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value1_1030_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value1_1030_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value1_1030_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value1_1030_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value1_1030_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value1_1030_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value1_1030_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value1_1030_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value1_1030_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value1_1030_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value1_1030_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value1_1030_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value1_1030_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value1_1030_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value1_1030_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value1_1030_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value1_1030_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value1_1030_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value1_1030_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value1_1030_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value1_1030_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value1_1030_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value1_1030_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value1_1030_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value1_1030_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value1_1030_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value1_1030_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value1_1030_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value1_1030_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Value1_1400(in any) *pbgear.Identity_Value1_1400 {
	out := &pbgear.Identity_Value1_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Identity_Value1_1400_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Value1_1400_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Value1_1400_Value1None{
			Value1None: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Value1_1400_Value1Raw0{
			Value1Raw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Value1_1400_Value1Raw1{
			Value1Raw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Value1_1400_Value1Raw2{
			Value1Raw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Value1_1400_Value1Raw3{
			Value1Raw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Value1_1400_Value1Raw4{
			Value1Raw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Value1_1400_Value1Raw5{
			Value1Raw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Value1_1400_Value1Raw6{
			Value1Raw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Value1_1400_Value1Raw7{
			Value1Raw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Value1_1400_Value1Raw8{
			Value1Raw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Value1_1400_Value1Raw9{
			Value1Raw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Value1_1400_Value1Raw10{
			Value1Raw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Value1_1400_Value1Raw11{
			Value1Raw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Value1_1400_Value1Raw12{
			Value1Raw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Value1_1400_Value1Raw13{
			Value1Raw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Value1_1400_Value1Raw14{
			Value1Raw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Value1_1400_Value1Raw15{
			Value1Raw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Value1_1400_Value1Raw16{
			Value1Raw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Value1_1400_Value1Raw17{
			Value1Raw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Value1_1400_Value1Raw18{
			Value1Raw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Value1_1400_Value1Raw19{
			Value1Raw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Value1_1400_Value1Raw20{
			Value1Raw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Value1_1400_Value1Raw21{
			Value1Raw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Value1_1400_Value1Raw22{
			Value1Raw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Value1_1400_Value1Raw23{
			Value1Raw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Value1_1400_Value1Raw24{
			Value1Raw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Value1_1400_Value1Raw25{
			Value1Raw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Value1_1400_Value1Raw26{
			Value1Raw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Value1_1400_Value1Raw27{
			Value1Raw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Value1_1400_Value1Raw28{
			Value1Raw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Value1_1400_Value1Raw29{
			Value1Raw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Value1_1400_Value1Raw30{
			Value1Raw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Value1_1400_Value1Raw31{
			Value1Raw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Value1_1400_Value1Raw32{
			Value1Raw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Value1_1400_Value1BlakeTwo256{
			Value1BlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Value1_1400_Value1Sha256{
			Value1Sha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Value1_1400_Value1Keccak256{
			Value1Keccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Value1_1400_Value1ShaThree256{
			Value1ShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Web_100(in any) *pbgear.Identity_Web_100 {
	out := &pbgear.Identity_Web_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Web
	v0 := To_OneOf_Identity_Web_100_web(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Web_100_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Web_100_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Web_100_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Web_100_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Web_100_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Web_100_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Web_100_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Web_100_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Web_100_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Web_100_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Web_100_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Web_100_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Web_100_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Web_100_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Web_100_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Web_100_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Web_100_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Web_100_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Web_100_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Web_100_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Web_100_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Web_100_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Web_100_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Web_100_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Web_100_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Web_100_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Web_100_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Web_100_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Web_100_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Web_100_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Web_100_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Web_100_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Web_100_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Web_100_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Web_100_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Web_100_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Web_100_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Web_100_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Web_100_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Web_140(in any) *pbgear.Identity_Web_140 {
	out := &pbgear.Identity_Web_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Web
	v0 := To_OneOf_Identity_Web_140_web(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Web_140_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Web_140_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Web_140_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Web_140_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Web_140_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Web_140_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Web_140_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Web_140_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Web_140_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Web_140_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Web_140_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Web_140_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Web_140_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Web_140_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Web_140_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Web_140_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Web_140_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Web_140_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Web_140_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Web_140_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Web_140_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Web_140_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Web_140_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Web_140_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Web_140_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Web_140_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Web_140_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Web_140_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Web_140_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Web_140_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Web_140_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Web_140_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Web_140_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Web_140_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Web_140_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Web_140_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Web_140_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Web_140_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Web_140_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Web_310(in any) *pbgear.Identity_Web_310 {
	out := &pbgear.Identity_Web_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Web
	v0 := To_OneOf_Identity_Web_310_web(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Web_310_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Web_310_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Web_310_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Web_310_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Web_310_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Web_310_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Web_310_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Web_310_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Web_310_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Web_310_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Web_310_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Web_310_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Web_310_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Web_310_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Web_310_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Web_310_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Web_310_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Web_310_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Web_310_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Web_310_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Web_310_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Web_310_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Web_310_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Web_310_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Web_310_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Web_310_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Web_310_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Web_310_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Web_310_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Web_310_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Web_310_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Web_310_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Web_310_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Web_310_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Web_310_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Web_310_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Web_310_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Web_310_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Web_310_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Web_1030(in any) *pbgear.Identity_Web_1030 {
	out := &pbgear.Identity_Web_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Web
	v0 := To_OneOf_Identity_Web_1030_web(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Web_1030_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Web_1030_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Web_1030_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Web_1030_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Web_1030_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Web_1030_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Web_1030_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Web_1030_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Web_1030_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Web_1030_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Web_1030_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Web_1030_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Web_1030_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Web_1030_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Web_1030_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Web_1030_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Web_1030_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Web_1030_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Web_1030_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Web_1030_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Web_1030_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Web_1030_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Web_1030_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Web_1030_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Web_1030_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Web_1030_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Web_1030_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Web_1030_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Web_1030_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Web_1030_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Web_1030_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Web_1030_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Web_1030_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Web_1030_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Web_1030_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Web_1030_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Web_1030_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Web_1030_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Web_1030_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_Web_1400(in any) *pbgear.Identity_Web_1400 {
	out := &pbgear.Identity_Web_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Web
	v0 := To_OneOf_Identity_Web_1400_web(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Identity_Web_1400_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_Web_1400_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_Web_1400_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_Web_1400_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_Web_1400_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_Web_1400_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_Web_1400_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_Web_1400_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_Web_1400_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_Web_1400_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_Web_1400_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_Web_1400_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_Web_1400_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_Web_1400_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_Web_1400_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_Web_1400_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_Web_1400_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_Web_1400_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_Web_1400_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_Web_1400_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_Web_1400_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_Web_1400_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_Web_1400_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_Web_1400_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_Web_1400_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_Web_1400_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_Web_1400_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_Web_1400_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_Web_1400_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_Web_1400_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_Web_1400_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_Web_1400_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_Web_1400_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_Web_1400_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_Web_1400_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_Web_1400_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_Web_1400_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_Web_1400_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_Web_1400_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ImOnlinePallet_100(in any) *pbgear.ImOnlinePallet_100 {
	out := &pbgear.ImOnlinePallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ImOnlinePallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ImOnlinePallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ImOnlinePallet_100_CallHeartbeatCall{
			CallHeartbeatCall: To_ImOnline_HeartbeatCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ImOnlinePallet_310(in any) *pbgear.ImOnlinePallet_310 {
	out := &pbgear.ImOnlinePallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ImOnlinePallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ImOnlinePallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ImOnlinePallet_310_CallHeartbeatCall{
			CallHeartbeatCall: To_ImOnline_HeartbeatCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ImOnlinePallet_1030(in any) *pbgear.ImOnlinePallet_1030 {
	out := &pbgear.ImOnlinePallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ImOnlinePallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ImOnlinePallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ImOnlinePallet_1030_CallHeartbeatCall{
			CallHeartbeatCall: To_ImOnline_HeartbeatCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ImOnlinePallet_1040(in any) *pbgear.ImOnlinePallet_1040 {
	out := &pbgear.ImOnlinePallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ImOnlinePallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ImOnlinePallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ImOnlinePallet_1040_CallHeartbeatCall{
			CallHeartbeatCall: To_ImOnline_HeartbeatCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ImOnline_HeartbeatCall_100(in any) *pbgear.ImOnline_HeartbeatCall_100 {
	out := &pbgear.ImOnline_HeartbeatCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Heartbeat To_ImOnline_PalletImOnlineHeartbeat(w)
	out.Heartbeat = To_ImOnline_PalletImOnlineHeartbeat(v.ValueAt(0))
	// field Signature To_ImOnline_PalletImOnlineSr25519AppSr25519Signature(w)
	out.Signature = To_ImOnline_PalletImOnlineSr25519AppSr25519Signature(v.ValueAt(1))

	return out //from message
}
func To_ImOnline_HeartbeatCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ImOnline_HeartbeatCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ImonlineHeartbeatCall{}
	reflect.ValueOf(out).Elem().FieldByName("ImonlineHeartbeatCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Inactive_1030(in any) *pbgear.Inactive_1030 {
	out := &pbgear.Inactive_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_InactiveActor_1400(in any) *pbgear.InactiveActor_1400 {
	out := &pbgear.InactiveActor_1400{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_InactiveProgram_1030(in any) *pbgear.InactiveProgram_1030 {
	out := &pbgear.InactiveProgram_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Init_1030(in any) *pbgear.Init_1030 {
	out := &pbgear.Init_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Inline_1030(in any) *pbgear.Inline_1030 {
	out := &pbgear.Inline_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Value0 = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))

	return out //from message
}

func To_Legacy_1030(in any) *pbgear.Legacy_1030 {
	out := &pbgear.Legacy_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_LimitReached_1030(in any) *pbgear.LimitReached_1030 {
	out := &pbgear.LimitReached_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Lookup_1030(in any) *pbgear.Lookup_1030 {
	out := &pbgear.Lookup_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field Len
	out.Len = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Mandatory_1030(in any) *pbgear.Mandatory_1030 {
	out := &pbgear.Mandatory_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Manual_1030(in any) *pbgear.Manual_1030 {
	out := &pbgear.Manual_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_MediumSpender_210(in any) *pbgear.MediumSpender_210 {
	out := &pbgear.MediumSpender_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_MemoryOverflow_1030(in any) *pbgear.MemoryOverflow_1030 {
	out := &pbgear.MemoryOverflow_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_MessageClaimed_1030(in any) *pbgear.MessageClaimed_1030 {
	out := &pbgear.MessageClaimed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_MessageReplied_1030(in any) *pbgear.MessageReplied_1030 {
	out := &pbgear.MessageReplied_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Module_1030(in any) *pbgear.Module_1030 {
	out := &pbgear.Module_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpRuntimeModuleError(w)
	out.Value0 = To_SpRuntimeModuleError(v.ValueAt(0))

	return out //from message
}

func To_MultisigPallet_210(in any) *pbgear.MultisigPallet_210 {
	out := &pbgear.MultisigPallet_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_MultisigPallet_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_MultisigPallet_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.MultisigPallet_210_CallAsMultiThreshold1Call{
			CallAsMultiThreshold1Call: To_Multisig_AsMultiThreshold1Call(param),
		}
	case 1:
		return &pbgear.MultisigPallet_210_CallAsMultiCall{
			CallAsMultiCall: To_Multisig_AsMultiCall(param),
		}
	case 2:
		return &pbgear.MultisigPallet_210_CallApproveAsMultiCall{
			CallApproveAsMultiCall: To_Multisig_ApproveAsMultiCall(param),
		}
	case 3:
		return &pbgear.MultisigPallet_210_CallCancelAsMultiCall{
			CallCancelAsMultiCall: To_Multisig_CancelAsMultiCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_MultisigPallet_310(in any) *pbgear.MultisigPallet_310 {
	out := &pbgear.MultisigPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_MultisigPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_MultisigPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.MultisigPallet_310_CallAsMultiThreshold1Call{
			CallAsMultiThreshold1Call: To_Multisig_AsMultiThreshold1Call(param),
		}
	case 1:
		return &pbgear.MultisigPallet_310_CallAsMultiCall{
			CallAsMultiCall: To_Multisig_AsMultiCall(param),
		}
	case 2:
		return &pbgear.MultisigPallet_310_CallApproveAsMultiCall{
			CallApproveAsMultiCall: To_Multisig_ApproveAsMultiCall(param),
		}
	case 3:
		return &pbgear.MultisigPallet_310_CallCancelAsMultiCall{
			CallCancelAsMultiCall: To_Multisig_CancelAsMultiCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_MultisigPallet_1030(in any) *pbgear.MultisigPallet_1030 {
	out := &pbgear.MultisigPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_MultisigPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_MultisigPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.MultisigPallet_1030_CallAsMultiThreshold1Call{
			CallAsMultiThreshold1Call: To_Multisig_AsMultiThreshold1Call(param),
		}
	case 1:
		return &pbgear.MultisigPallet_1030_CallAsMultiCall{
			CallAsMultiCall: To_Multisig_AsMultiCall(param),
		}
	case 2:
		return &pbgear.MultisigPallet_1030_CallApproveAsMultiCall{
			CallApproveAsMultiCall: To_Multisig_ApproveAsMultiCall(param),
		}
	case 3:
		return &pbgear.MultisigPallet_1030_CallCancelAsMultiCall{
			CallCancelAsMultiCall: To_Multisig_CancelAsMultiCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_MultisigPallet_1040(in any) *pbgear.MultisigPallet_1040 {
	out := &pbgear.MultisigPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_MultisigPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_MultisigPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.MultisigPallet_1040_CallAsMultiThreshold1Call{
			CallAsMultiThreshold1Call: To_Multisig_AsMultiThreshold1Call(param),
		}
	case 1:
		return &pbgear.MultisigPallet_1040_CallAsMultiCall{
			CallAsMultiCall: To_Multisig_AsMultiCall(param),
		}
	case 2:
		return &pbgear.MultisigPallet_1040_CallApproveAsMultiCall{
			CallApproveAsMultiCall: To_Multisig_ApproveAsMultiCall(param),
		}
	case 3:
		return &pbgear.MultisigPallet_1040_CallCancelAsMultiCall{
			CallCancelAsMultiCall: To_Multisig_CancelAsMultiCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_MultisigPallet_1400(in any) *pbgear.MultisigPallet_1400 {
	out := &pbgear.MultisigPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_MultisigPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_MultisigPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.MultisigPallet_1400_CallAsMultiThreshold1Call{
			CallAsMultiThreshold1Call: To_Multisig_AsMultiThreshold1Call(param),
		}
	case 1:
		return &pbgear.MultisigPallet_1400_CallAsMultiCall{
			CallAsMultiCall: To_Multisig_AsMultiCall(param),
		}
	case 2:
		return &pbgear.MultisigPallet_1400_CallApproveAsMultiCall{
			CallApproveAsMultiCall: To_Multisig_ApproveAsMultiCall(param),
		}
	case 3:
		return &pbgear.MultisigPallet_1400_CallCancelAsMultiCall{
			CallCancelAsMultiCall: To_Multisig_CancelAsMultiCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Multisig_ApproveAsMultiCall_210(in any) *pbgear.Multisig_ApproveAsMultiCall_210 {
	out := &pbgear.Multisig_ApproveAsMultiCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Threshold
	out.Threshold = To_uint32(v.ValueAt(0))
	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_ApproveAsMultiCall_210_other_signatories(v.ValueAt(1))
	// optional field MaybeTimepoint true
	if v.HasValue() {
		out.MaybeTimepoint = To_Optional_Multisig_ApproveAsMultiCall_210_maybe_timepoint(v.ValueAt(2))
	}
	// primitive field CallHash
	out.CallHash = To_bytes(v.ValueAt(3))
	// field MaxWeight To_SpWeightsWeightV2Weight(w)
	out.MaxWeight = To_SpWeightsWeightV2Weight(v.ValueAt(4))

	return out //from message
}
func To_Multisig_ApproveAsMultiCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_ApproveAsMultiCall_210(in)
	out := &pbgearextrinsic.Extrinsic_MultisigApproveAsMultiCall{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigApproveAsMultiCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_ApproveAsMultiCall_210_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Optional_Multisig_ApproveAsMultiCall_210_maybe_timepoint(in any) *pbgear.Multisig_PalletMultisigTimepoint {
	panic("Not implemented")
	return nil //funcForOptionalField
}

func To_Multisig_AsMultiCall_210(in any) *pbgear.Multisig_AsMultiCall_210 {
	out := &pbgear.Multisig_AsMultiCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Threshold
	out.Threshold = To_uint32(v.ValueAt(0))
	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_AsMultiCall_210_other_signatories(v.ValueAt(1))
	// optional field MaybeTimepoint true
	if v.HasValue() {
		out.MaybeTimepoint = To_Optional_Multisig_AsMultiCall_210_maybe_timepoint(v.ValueAt(2))
	}
	// oneOf field Call
	v3 := To_OneOf_Multisig_AsMultiCall_210_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))
	// field MaxWeight To_SpWeightsWeightV2Weight(w)
	out.MaxWeight = To_SpWeightsWeightV2Weight(v.ValueAt(4))

	return out //from message
}
func To_Multisig_AsMultiCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_AsMultiCall_210(in)
	out := &pbgearextrinsic.Extrinsic_MultisigAsMultiCall{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigAsMultiCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_AsMultiCall_210_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Optional_Multisig_AsMultiCall_210_maybe_timepoint(in any) *pbgear.Multisig_PalletMultisigTimepoint {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Multisig_AsMultiCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Multisig_AsMultiCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Multisig_AsMultiCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Multisig_AsMultiCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Multisig_AsMultiCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Multisig_AsMultiCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Multisig_AsMultiCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Multisig_AsMultiCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Multisig_AsMultiCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Multisig_AsMultiCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Multisig_AsMultiCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Multisig_AsMultiCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Multisig_AsMultiCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Multisig_AsMultiCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Multisig_AsMultiCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Multisig_AsMultiCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Multisig_AsMultiCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Multisig_AsMultiCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Multisig_AsMultiCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Multisig_AsMultiCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Multisig_AsMultiCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Multisig_AsMultiCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Multisig_AsMultiCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Multisig_AsMultiCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Multisig_AsMultiCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Multisig_AsMultiCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Multisig_AsMultiCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Multisig_AsMultiCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Multisig_AsMultiCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Multisig_AsMultiCall_310(in any) *pbgear.Multisig_AsMultiCall_310 {
	out := &pbgear.Multisig_AsMultiCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Threshold
	out.Threshold = To_uint32(v.ValueAt(0))
	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_AsMultiCall_310_other_signatories(v.ValueAt(1))
	// optional field MaybeTimepoint true
	if v.HasValue() {
		out.MaybeTimepoint = To_Optional_Multisig_AsMultiCall_310_maybe_timepoint(v.ValueAt(2))
	}
	// oneOf field Call
	v3 := To_OneOf_Multisig_AsMultiCall_310_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))
	// field MaxWeight To_SpWeightsWeightV2Weight(w)
	out.MaxWeight = To_SpWeightsWeightV2Weight(v.ValueAt(4))

	return out //from message
}
func To_Multisig_AsMultiCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_AsMultiCall_310(in)
	out := &pbgearextrinsic.Extrinsic_MultisigAsMultiCall{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigAsMultiCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_AsMultiCall_310_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Optional_Multisig_AsMultiCall_310_maybe_timepoint(in any) *pbgear.Multisig_PalletMultisigTimepoint {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Multisig_AsMultiCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Multisig_AsMultiCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Multisig_AsMultiCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Multisig_AsMultiCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Multisig_AsMultiCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Multisig_AsMultiCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Multisig_AsMultiCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Multisig_AsMultiCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Multisig_AsMultiCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Multisig_AsMultiCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Multisig_AsMultiCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Multisig_AsMultiCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Multisig_AsMultiCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Multisig_AsMultiCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Multisig_AsMultiCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Multisig_AsMultiCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Multisig_AsMultiCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Multisig_AsMultiCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Multisig_AsMultiCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Multisig_AsMultiCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Multisig_AsMultiCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Multisig_AsMultiCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Multisig_AsMultiCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Multisig_AsMultiCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Multisig_AsMultiCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Multisig_AsMultiCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Multisig_AsMultiCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Multisig_AsMultiCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Multisig_AsMultiCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Multisig_AsMultiCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Multisig_AsMultiCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Multisig_AsMultiCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Multisig_AsMultiCall_1000(in any) *pbgear.Multisig_AsMultiCall_1000 {
	out := &pbgear.Multisig_AsMultiCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Threshold
	out.Threshold = To_uint32(v.ValueAt(0))
	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_AsMultiCall_1000_other_signatories(v.ValueAt(1))
	// optional field MaybeTimepoint true
	if v.HasValue() {
		out.MaybeTimepoint = To_Optional_Multisig_AsMultiCall_1000_maybe_timepoint(v.ValueAt(2))
	}
	// oneOf field Call
	v3 := To_OneOf_Multisig_AsMultiCall_1000_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))
	// field MaxWeight To_SpWeightsWeightV2Weight(w)
	out.MaxWeight = To_SpWeightsWeightV2Weight(v.ValueAt(4))

	return out //from message
}
func To_Multisig_AsMultiCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_AsMultiCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_MultisigAsMultiCall{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigAsMultiCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_AsMultiCall_1000_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Optional_Multisig_AsMultiCall_1000_maybe_timepoint(in any) *pbgear.Multisig_PalletMultisigTimepoint {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Multisig_AsMultiCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Multisig_AsMultiCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Multisig_AsMultiCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Multisig_AsMultiCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Multisig_AsMultiCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Multisig_AsMultiCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Multisig_AsMultiCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Multisig_AsMultiCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Multisig_AsMultiCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Multisig_AsMultiCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Multisig_AsMultiCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Multisig_AsMultiCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Multisig_AsMultiCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Multisig_AsMultiCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Multisig_AsMultiCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Multisig_AsMultiCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Multisig_AsMultiCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Multisig_AsMultiCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Multisig_AsMultiCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Multisig_AsMultiCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Multisig_AsMultiCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Multisig_AsMultiCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Multisig_AsMultiCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Multisig_AsMultiCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Multisig_AsMultiCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Multisig_AsMultiCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Multisig_AsMultiCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Multisig_AsMultiCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Multisig_AsMultiCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Multisig_AsMultiCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Multisig_AsMultiThreshold1Call_210(in any) *pbgear.Multisig_AsMultiThreshold1Call_210 {
	out := &pbgear.Multisig_AsMultiThreshold1Call_210{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_AsMultiThreshold1Call_210_other_signatories(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Multisig_AsMultiThreshold1Call_210_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Multisig_AsMultiThreshold1Call_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_AsMultiThreshold1Call_210(in)
	out := &pbgearextrinsic.Extrinsic_MultisigAsMultiThreshold_1Call{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigAsMultiThreshold_1Call").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_AsMultiThreshold1Call_210_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_OneOf_Multisig_AsMultiThreshold1Call_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Multisig_AsMultiThreshold1Call_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Multisig_AsMultiThreshold1Call_310(in any) *pbgear.Multisig_AsMultiThreshold1Call_310 {
	out := &pbgear.Multisig_AsMultiThreshold1Call_310{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_AsMultiThreshold1Call_310_other_signatories(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Multisig_AsMultiThreshold1Call_310_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Multisig_AsMultiThreshold1Call_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_AsMultiThreshold1Call_310(in)
	out := &pbgearextrinsic.Extrinsic_MultisigAsMultiThreshold_1Call{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigAsMultiThreshold_1Call").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_AsMultiThreshold1Call_310_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_OneOf_Multisig_AsMultiThreshold1Call_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Multisig_AsMultiThreshold1Call_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Multisig_AsMultiThreshold1Call_1000(in any) *pbgear.Multisig_AsMultiThreshold1Call_1000 {
	out := &pbgear.Multisig_AsMultiThreshold1Call_1000{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_AsMultiThreshold1Call_1000_other_signatories(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Multisig_AsMultiThreshold1Call_1000_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Multisig_AsMultiThreshold1Call_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_AsMultiThreshold1Call_1000(in)
	out := &pbgearextrinsic.Extrinsic_MultisigAsMultiThreshold_1Call{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigAsMultiThreshold_1Call").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_AsMultiThreshold1Call_1000_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_OneOf_Multisig_AsMultiThreshold1Call_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Multisig_AsMultiThreshold1Call_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Multisig_CancelAsMultiCall_210(in any) *pbgear.Multisig_CancelAsMultiCall_210 {
	out := &pbgear.Multisig_CancelAsMultiCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Threshold
	out.Threshold = To_uint32(v.ValueAt(0))
	// repeated field OtherSignatories
	out.OtherSignatories = To_Repeated_Multisig_CancelAsMultiCall_210_other_signatories(v.ValueAt(1))
	// field Timepoint To_Multisig_PalletMultisigTimepoint(w)
	out.Timepoint = To_Multisig_PalletMultisigTimepoint(v.ValueAt(2))
	// primitive field CallHash
	out.CallHash = To_bytes(v.ValueAt(3))

	return out //from message
}
func To_Multisig_CancelAsMultiCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Multisig_CancelAsMultiCall_210(in)
	out := &pbgearextrinsic.Extrinsic_MultisigCancelAsMultiCall{}
	reflect.ValueOf(out).Elem().FieldByName("MultisigCancelAsMultiCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Multisig_CancelAsMultiCall_210_other_signatories(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_No_1030(in any) *pbgear.No_1030 {
	out := &pbgear.No_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NoLayer_1030(in any) *pbgear.NoLayer_1030 {
	out := &pbgear.NoLayer_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NoProviders_1030(in any) *pbgear.NoProviders_1030 {
	out := &pbgear.NoProviders_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Node_1030(in any) *pbgear.Node_1030 {
	out := &pbgear.Node_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsMessageId(w)
	out.Value0 = To_GearCoreIdsMessageId(v.ValueAt(0))

	return out //from message
}

func To_Node_1420(in any) *pbgear.Node_1420 {
	out := &pbgear.Node_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GprimitivesMessageId(w)
	out.Value0 = To_GprimitivesMessageId(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Address20_310(in any) *pbgear.NominationPools_Address20_310 {
	out := &pbgear.NominationPools_Address20_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Address32_310(in any) *pbgear.NominationPools_Address32_310 {
	out := &pbgear.NominationPools_Address32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Blocked_310(in any) *pbgear.NominationPools_Blocked_310 {
	out := &pbgear.NominationPools_Blocked_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_ConsensusEvent_1410(in any) *pbgear.NominationPools_ConsensusEvent_1410 {
	out := &pbgear.NominationPools_ConsensusEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_Destroying_310(in any) *pbgear.NominationPools_Destroying_310 {
	out := &pbgear.NominationPools_Destroying_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_FreeBalance_310(in any) *pbgear.NominationPools_FreeBalance_310 {
	out := &pbgear.NominationPools_FreeBalance_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_string(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Id_310(in any) *pbgear.NominationPools_Id_310 {
	out := &pbgear.NominationPools_Id_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Index_310(in any) *pbgear.NominationPools_Index_310 {
	out := &pbgear.NominationPools_Index_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_NominationPools_TupleNull(w)
	out.Value0 = To_NominationPools_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Noop_310(in any) *pbgear.NominationPools_Noop_310 {
	out := &pbgear.NominationPools_Noop_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_Open_310(in any) *pbgear.NominationPools_Open_310 {
	out := &pbgear.NominationPools_Open_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_OtherEvent_1410(in any) *pbgear.NominationPools_OtherEvent_1410 {
	out := &pbgear.NominationPools_OtherEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Permissioned_310(in any) *pbgear.NominationPools_Permissioned_310 {
	out := &pbgear.NominationPools_Permissioned_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_PermissionlessAll_310(in any) *pbgear.NominationPools_PermissionlessAll_310 {
	out := &pbgear.NominationPools_PermissionlessAll_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_PermissionlessCompound_310(in any) *pbgear.NominationPools_PermissionlessCompound_310 {
	out := &pbgear.NominationPools_PermissionlessCompound_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_PermissionlessWithdraw_310(in any) *pbgear.NominationPools_PermissionlessWithdraw_310 {
	out := &pbgear.NominationPools_PermissionlessWithdraw_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_PreRuntimeEvent_1410(in any) *pbgear.NominationPools_PreRuntimeEvent_1410 {
	out := &pbgear.NominationPools_PreRuntimeEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_Raw_310(in any) *pbgear.NominationPools_Raw_310 {
	out := &pbgear.NominationPools_Raw_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_Remove_310(in any) *pbgear.NominationPools_Remove_310 {
	out := &pbgear.NominationPools_Remove_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_Rewards_310(in any) *pbgear.NominationPools_Rewards_310 {
	out := &pbgear.NominationPools_Rewards_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_RuntimeEnvironmentUpdatedEvent_1410(in any) *pbgear.NominationPools_RuntimeEnvironmentUpdatedEvent_1410 {
	out := &pbgear.NominationPools_RuntimeEnvironmentUpdatedEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_SealEvent_1410(in any) *pbgear.NominationPools_SealEvent_1410 {
	out := &pbgear.NominationPools_SealEvent_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_Set_310(in any) *pbgear.NominationPools_Set_310 {
	out := &pbgear.NominationPools_Set_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_TupleNull_310(in any) *pbgear.NominationPools_TupleNull_310 {
	out := &pbgear.NominationPools_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_TupleNull_1030(in any) *pbgear.NominationPools_TupleNull_1030 {
	out := &pbgear.NominationPools_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_310(in any) *pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_310 {
	out := &pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpArithmeticPerThingsPerbill(w)
	out.Value0 = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1030(in any) *pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1030 {
	out := &pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpArithmeticPerThingsPerbill(w)
	out.Value0 = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1040(in any) *pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1040 {
	out := &pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpArithmeticPerThingsPerbill(w)
	out.Value0 = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1400(in any) *pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1400 {
	out := &pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpArithmeticPerThingsPerbill(w)
	out.Value0 = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_NominationPoolsPallet_310(in any) *pbgear.NominationPoolsPallet_310 {
	out := &pbgear.NominationPoolsPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_NominationPoolsPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPoolsPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPoolsPallet_310_CallJoinCall{
			CallJoinCall: To_NominationPools_JoinCall(param),
		}
	case 1:
		return &pbgear.NominationPoolsPallet_310_CallBondExtraCall{
			CallBondExtraCall: To_NominationPools_BondExtraCall(param),
		}
	case 2:
		return &pbgear.NominationPoolsPallet_310_CallClaimPayoutCall{
			CallClaimPayoutCall: To_NominationPools_ClaimPayoutCall(param),
		}
	case 3:
		return &pbgear.NominationPoolsPallet_310_CallUnbondCall{
			CallUnbondCall: To_NominationPools_UnbondCall(param),
		}
	case 4:
		return &pbgear.NominationPoolsPallet_310_CallPoolWithdrawUnbondedCall{
			CallPoolWithdrawUnbondedCall: To_NominationPools_PoolWithdrawUnbondedCall(param),
		}
	case 5:
		return &pbgear.NominationPoolsPallet_310_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_NominationPools_WithdrawUnbondedCall(param),
		}
	case 6:
		return &pbgear.NominationPoolsPallet_310_CallCreateCall{
			CallCreateCall: To_NominationPools_CreateCall(param),
		}
	case 7:
		return &pbgear.NominationPoolsPallet_310_CallCreateWithPoolIdCall{
			CallCreateWithPoolIdCall: To_NominationPools_CreateWithPoolIdCall(param),
		}
	case 8:
		return &pbgear.NominationPoolsPallet_310_CallNominateCall{
			CallNominateCall: To_NominationPools_NominateCall(param),
		}
	case 9:
		return &pbgear.NominationPoolsPallet_310_CallSetStateCall{
			CallSetStateCall: To_NominationPools_SetStateCall(param),
		}
	case 10:
		return &pbgear.NominationPoolsPallet_310_CallSetMetadataCall{
			CallSetMetadataCall: To_NominationPools_SetMetadataCall(param),
		}
	case 11:
		return &pbgear.NominationPoolsPallet_310_CallSetConfigsCall{
			CallSetConfigsCall: To_NominationPools_SetConfigsCall(param),
		}
	case 12:
		return &pbgear.NominationPoolsPallet_310_CallUpdateRolesCall{
			CallUpdateRolesCall: To_NominationPools_UpdateRolesCall(param),
		}
	case 13:
		return &pbgear.NominationPoolsPallet_310_CallChillCall{
			CallChillCall: To_NominationPools_ChillCall(param),
		}
	case 14:
		return &pbgear.NominationPoolsPallet_310_CallBondExtraOtherCall{
			CallBondExtraOtherCall: To_NominationPools_BondExtraOtherCall(param),
		}
	case 15:
		return &pbgear.NominationPoolsPallet_310_CallSetClaimPermissionCall{
			CallSetClaimPermissionCall: To_NominationPools_SetClaimPermissionCall(param),
		}
	case 16:
		return &pbgear.NominationPoolsPallet_310_CallClaimPayoutOtherCall{
			CallClaimPayoutOtherCall: To_NominationPools_ClaimPayoutOtherCall(param),
		}
	case 17:
		return &pbgear.NominationPoolsPallet_310_CallSetCommissionCall{
			CallSetCommissionCall: To_NominationPools_SetCommissionCall(param),
		}
	case 18:
		return &pbgear.NominationPoolsPallet_310_CallSetCommissionMaxCall{
			CallSetCommissionMaxCall: To_NominationPools_SetCommissionMaxCall(param),
		}
	case 19:
		return &pbgear.NominationPoolsPallet_310_CallSetCommissionChangeRateCall{
			CallSetCommissionChangeRateCall: To_NominationPools_SetCommissionChangeRateCall(param),
		}
	case 20:
		return &pbgear.NominationPoolsPallet_310_CallClaimCommissionCall{
			CallClaimCommissionCall: To_NominationPools_ClaimCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPoolsPallet_1030(in any) *pbgear.NominationPoolsPallet_1030 {
	out := &pbgear.NominationPoolsPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_NominationPoolsPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPoolsPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPoolsPallet_1030_CallJoinCall{
			CallJoinCall: To_NominationPools_JoinCall(param),
		}
	case 1:
		return &pbgear.NominationPoolsPallet_1030_CallBondExtraCall{
			CallBondExtraCall: To_NominationPools_BondExtraCall(param),
		}
	case 2:
		return &pbgear.NominationPoolsPallet_1030_CallClaimPayoutCall{
			CallClaimPayoutCall: To_NominationPools_ClaimPayoutCall(param),
		}
	case 3:
		return &pbgear.NominationPoolsPallet_1030_CallUnbondCall{
			CallUnbondCall: To_NominationPools_UnbondCall(param),
		}
	case 4:
		return &pbgear.NominationPoolsPallet_1030_CallPoolWithdrawUnbondedCall{
			CallPoolWithdrawUnbondedCall: To_NominationPools_PoolWithdrawUnbondedCall(param),
		}
	case 5:
		return &pbgear.NominationPoolsPallet_1030_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_NominationPools_WithdrawUnbondedCall(param),
		}
	case 6:
		return &pbgear.NominationPoolsPallet_1030_CallCreateCall{
			CallCreateCall: To_NominationPools_CreateCall(param),
		}
	case 7:
		return &pbgear.NominationPoolsPallet_1030_CallCreateWithPoolIdCall{
			CallCreateWithPoolIdCall: To_NominationPools_CreateWithPoolIdCall(param),
		}
	case 8:
		return &pbgear.NominationPoolsPallet_1030_CallNominateCall{
			CallNominateCall: To_NominationPools_NominateCall(param),
		}
	case 9:
		return &pbgear.NominationPoolsPallet_1030_CallSetStateCall{
			CallSetStateCall: To_NominationPools_SetStateCall(param),
		}
	case 10:
		return &pbgear.NominationPoolsPallet_1030_CallSetMetadataCall{
			CallSetMetadataCall: To_NominationPools_SetMetadataCall(param),
		}
	case 11:
		return &pbgear.NominationPoolsPallet_1030_CallSetConfigsCall{
			CallSetConfigsCall: To_NominationPools_SetConfigsCall(param),
		}
	case 12:
		return &pbgear.NominationPoolsPallet_1030_CallUpdateRolesCall{
			CallUpdateRolesCall: To_NominationPools_UpdateRolesCall(param),
		}
	case 13:
		return &pbgear.NominationPoolsPallet_1030_CallChillCall{
			CallChillCall: To_NominationPools_ChillCall(param),
		}
	case 14:
		return &pbgear.NominationPoolsPallet_1030_CallBondExtraOtherCall{
			CallBondExtraOtherCall: To_NominationPools_BondExtraOtherCall(param),
		}
	case 15:
		return &pbgear.NominationPoolsPallet_1030_CallSetClaimPermissionCall{
			CallSetClaimPermissionCall: To_NominationPools_SetClaimPermissionCall(param),
		}
	case 16:
		return &pbgear.NominationPoolsPallet_1030_CallClaimPayoutOtherCall{
			CallClaimPayoutOtherCall: To_NominationPools_ClaimPayoutOtherCall(param),
		}
	case 17:
		return &pbgear.NominationPoolsPallet_1030_CallSetCommissionCall{
			CallSetCommissionCall: To_NominationPools_SetCommissionCall(param),
		}
	case 18:
		return &pbgear.NominationPoolsPallet_1030_CallSetCommissionMaxCall{
			CallSetCommissionMaxCall: To_NominationPools_SetCommissionMaxCall(param),
		}
	case 19:
		return &pbgear.NominationPoolsPallet_1030_CallSetCommissionChangeRateCall{
			CallSetCommissionChangeRateCall: To_NominationPools_SetCommissionChangeRateCall(param),
		}
	case 20:
		return &pbgear.NominationPoolsPallet_1030_CallClaimCommissionCall{
			CallClaimCommissionCall: To_NominationPools_ClaimCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPoolsPallet_1040(in any) *pbgear.NominationPoolsPallet_1040 {
	out := &pbgear.NominationPoolsPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_NominationPoolsPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPoolsPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPoolsPallet_1040_CallJoinCall{
			CallJoinCall: To_NominationPools_JoinCall(param),
		}
	case 1:
		return &pbgear.NominationPoolsPallet_1040_CallBondExtraCall{
			CallBondExtraCall: To_NominationPools_BondExtraCall(param),
		}
	case 2:
		return &pbgear.NominationPoolsPallet_1040_CallClaimPayoutCall{
			CallClaimPayoutCall: To_NominationPools_ClaimPayoutCall(param),
		}
	case 3:
		return &pbgear.NominationPoolsPallet_1040_CallUnbondCall{
			CallUnbondCall: To_NominationPools_UnbondCall(param),
		}
	case 4:
		return &pbgear.NominationPoolsPallet_1040_CallPoolWithdrawUnbondedCall{
			CallPoolWithdrawUnbondedCall: To_NominationPools_PoolWithdrawUnbondedCall(param),
		}
	case 5:
		return &pbgear.NominationPoolsPallet_1040_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_NominationPools_WithdrawUnbondedCall(param),
		}
	case 6:
		return &pbgear.NominationPoolsPallet_1040_CallCreateCall{
			CallCreateCall: To_NominationPools_CreateCall(param),
		}
	case 7:
		return &pbgear.NominationPoolsPallet_1040_CallCreateWithPoolIdCall{
			CallCreateWithPoolIdCall: To_NominationPools_CreateWithPoolIdCall(param),
		}
	case 8:
		return &pbgear.NominationPoolsPallet_1040_CallNominateCall{
			CallNominateCall: To_NominationPools_NominateCall(param),
		}
	case 9:
		return &pbgear.NominationPoolsPallet_1040_CallSetStateCall{
			CallSetStateCall: To_NominationPools_SetStateCall(param),
		}
	case 10:
		return &pbgear.NominationPoolsPallet_1040_CallSetMetadataCall{
			CallSetMetadataCall: To_NominationPools_SetMetadataCall(param),
		}
	case 11:
		return &pbgear.NominationPoolsPallet_1040_CallSetConfigsCall{
			CallSetConfigsCall: To_NominationPools_SetConfigsCall(param),
		}
	case 12:
		return &pbgear.NominationPoolsPallet_1040_CallUpdateRolesCall{
			CallUpdateRolesCall: To_NominationPools_UpdateRolesCall(param),
		}
	case 13:
		return &pbgear.NominationPoolsPallet_1040_CallChillCall{
			CallChillCall: To_NominationPools_ChillCall(param),
		}
	case 14:
		return &pbgear.NominationPoolsPallet_1040_CallBondExtraOtherCall{
			CallBondExtraOtherCall: To_NominationPools_BondExtraOtherCall(param),
		}
	case 15:
		return &pbgear.NominationPoolsPallet_1040_CallSetClaimPermissionCall{
			CallSetClaimPermissionCall: To_NominationPools_SetClaimPermissionCall(param),
		}
	case 16:
		return &pbgear.NominationPoolsPallet_1040_CallClaimPayoutOtherCall{
			CallClaimPayoutOtherCall: To_NominationPools_ClaimPayoutOtherCall(param),
		}
	case 17:
		return &pbgear.NominationPoolsPallet_1040_CallSetCommissionCall{
			CallSetCommissionCall: To_NominationPools_SetCommissionCall(param),
		}
	case 18:
		return &pbgear.NominationPoolsPallet_1040_CallSetCommissionMaxCall{
			CallSetCommissionMaxCall: To_NominationPools_SetCommissionMaxCall(param),
		}
	case 19:
		return &pbgear.NominationPoolsPallet_1040_CallSetCommissionChangeRateCall{
			CallSetCommissionChangeRateCall: To_NominationPools_SetCommissionChangeRateCall(param),
		}
	case 20:
		return &pbgear.NominationPoolsPallet_1040_CallClaimCommissionCall{
			CallClaimCommissionCall: To_NominationPools_ClaimCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPoolsPallet_1400(in any) *pbgear.NominationPoolsPallet_1400 {
	out := &pbgear.NominationPoolsPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_NominationPoolsPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPoolsPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPoolsPallet_1400_CallJoinCall{
			CallJoinCall: To_NominationPools_JoinCall(param),
		}
	case 1:
		return &pbgear.NominationPoolsPallet_1400_CallBondExtraCall{
			CallBondExtraCall: To_NominationPools_BondExtraCall(param),
		}
	case 2:
		return &pbgear.NominationPoolsPallet_1400_CallClaimPayoutCall{
			CallClaimPayoutCall: To_NominationPools_ClaimPayoutCall(param),
		}
	case 3:
		return &pbgear.NominationPoolsPallet_1400_CallUnbondCall{
			CallUnbondCall: To_NominationPools_UnbondCall(param),
		}
	case 4:
		return &pbgear.NominationPoolsPallet_1400_CallPoolWithdrawUnbondedCall{
			CallPoolWithdrawUnbondedCall: To_NominationPools_PoolWithdrawUnbondedCall(param),
		}
	case 5:
		return &pbgear.NominationPoolsPallet_1400_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_NominationPools_WithdrawUnbondedCall(param),
		}
	case 6:
		return &pbgear.NominationPoolsPallet_1400_CallCreateCall{
			CallCreateCall: To_NominationPools_CreateCall(param),
		}
	case 7:
		return &pbgear.NominationPoolsPallet_1400_CallCreateWithPoolIdCall{
			CallCreateWithPoolIdCall: To_NominationPools_CreateWithPoolIdCall(param),
		}
	case 8:
		return &pbgear.NominationPoolsPallet_1400_CallNominateCall{
			CallNominateCall: To_NominationPools_NominateCall(param),
		}
	case 9:
		return &pbgear.NominationPoolsPallet_1400_CallSetStateCall{
			CallSetStateCall: To_NominationPools_SetStateCall(param),
		}
	case 10:
		return &pbgear.NominationPoolsPallet_1400_CallSetMetadataCall{
			CallSetMetadataCall: To_NominationPools_SetMetadataCall(param),
		}
	case 11:
		return &pbgear.NominationPoolsPallet_1400_CallSetConfigsCall{
			CallSetConfigsCall: To_NominationPools_SetConfigsCall(param),
		}
	case 12:
		return &pbgear.NominationPoolsPallet_1400_CallUpdateRolesCall{
			CallUpdateRolesCall: To_NominationPools_UpdateRolesCall(param),
		}
	case 13:
		return &pbgear.NominationPoolsPallet_1400_CallChillCall{
			CallChillCall: To_NominationPools_ChillCall(param),
		}
	case 14:
		return &pbgear.NominationPoolsPallet_1400_CallBondExtraOtherCall{
			CallBondExtraOtherCall: To_NominationPools_BondExtraOtherCall(param),
		}
	case 15:
		return &pbgear.NominationPoolsPallet_1400_CallSetClaimPermissionCall{
			CallSetClaimPermissionCall: To_NominationPools_SetClaimPermissionCall(param),
		}
	case 16:
		return &pbgear.NominationPoolsPallet_1400_CallClaimPayoutOtherCall{
			CallClaimPayoutOtherCall: To_NominationPools_ClaimPayoutOtherCall(param),
		}
	case 17:
		return &pbgear.NominationPoolsPallet_1400_CallSetCommissionCall{
			CallSetCommissionCall: To_NominationPools_SetCommissionCall(param),
		}
	case 18:
		return &pbgear.NominationPoolsPallet_1400_CallSetCommissionMaxCall{
			CallSetCommissionMaxCall: To_NominationPools_SetCommissionMaxCall(param),
		}
	case 19:
		return &pbgear.NominationPoolsPallet_1400_CallSetCommissionChangeRateCall{
			CallSetCommissionChangeRateCall: To_NominationPools_SetCommissionChangeRateCall(param),
		}
	case 20:
		return &pbgear.NominationPoolsPallet_1400_CallClaimCommissionCall{
			CallClaimCommissionCall: To_NominationPools_ClaimCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPoolsPallet_1410(in any) *pbgear.NominationPoolsPallet_1410 {
	out := &pbgear.NominationPoolsPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_NominationPoolsPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPoolsPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPoolsPallet_1410_CallJoinCall{
			CallJoinCall: To_NominationPools_JoinCall(param),
		}
	case 1:
		return &pbgear.NominationPoolsPallet_1410_CallBondExtraCall{
			CallBondExtraCall: To_NominationPools_BondExtraCall(param),
		}
	case 2:
		return &pbgear.NominationPoolsPallet_1410_CallClaimPayoutCall{
			CallClaimPayoutCall: To_NominationPools_ClaimPayoutCall(param),
		}
	case 3:
		return &pbgear.NominationPoolsPallet_1410_CallUnbondCall{
			CallUnbondCall: To_NominationPools_UnbondCall(param),
		}
	case 4:
		return &pbgear.NominationPoolsPallet_1410_CallPoolWithdrawUnbondedCall{
			CallPoolWithdrawUnbondedCall: To_NominationPools_PoolWithdrawUnbondedCall(param),
		}
	case 5:
		return &pbgear.NominationPoolsPallet_1410_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_NominationPools_WithdrawUnbondedCall(param),
		}
	case 6:
		return &pbgear.NominationPoolsPallet_1410_CallCreateCall{
			CallCreateCall: To_NominationPools_CreateCall(param),
		}
	case 7:
		return &pbgear.NominationPoolsPallet_1410_CallCreateWithPoolIdCall{
			CallCreateWithPoolIdCall: To_NominationPools_CreateWithPoolIdCall(param),
		}
	case 8:
		return &pbgear.NominationPoolsPallet_1410_CallNominateCall{
			CallNominateCall: To_NominationPools_NominateCall(param),
		}
	case 9:
		return &pbgear.NominationPoolsPallet_1410_CallSetStateCall{
			CallSetStateCall: To_NominationPools_SetStateCall(param),
		}
	case 10:
		return &pbgear.NominationPoolsPallet_1410_CallSetMetadataCall{
			CallSetMetadataCall: To_NominationPools_SetMetadataCall(param),
		}
	case 11:
		return &pbgear.NominationPoolsPallet_1410_CallSetConfigsCall{
			CallSetConfigsCall: To_NominationPools_SetConfigsCall(param),
		}
	case 12:
		return &pbgear.NominationPoolsPallet_1410_CallUpdateRolesCall{
			CallUpdateRolesCall: To_NominationPools_UpdateRolesCall(param),
		}
	case 13:
		return &pbgear.NominationPoolsPallet_1410_CallChillCall{
			CallChillCall: To_NominationPools_ChillCall(param),
		}
	case 14:
		return &pbgear.NominationPoolsPallet_1410_CallBondExtraOtherCall{
			CallBondExtraOtherCall: To_NominationPools_BondExtraOtherCall(param),
		}
	case 15:
		return &pbgear.NominationPoolsPallet_1410_CallSetClaimPermissionCall{
			CallSetClaimPermissionCall: To_NominationPools_SetClaimPermissionCall(param),
		}
	case 16:
		return &pbgear.NominationPoolsPallet_1410_CallClaimPayoutOtherCall{
			CallClaimPayoutOtherCall: To_NominationPools_ClaimPayoutOtherCall(param),
		}
	case 17:
		return &pbgear.NominationPoolsPallet_1410_CallSetCommissionCall{
			CallSetCommissionCall: To_NominationPools_SetCommissionCall(param),
		}
	case 18:
		return &pbgear.NominationPoolsPallet_1410_CallSetCommissionMaxCall{
			CallSetCommissionMaxCall: To_NominationPools_SetCommissionMaxCall(param),
		}
	case 19:
		return &pbgear.NominationPoolsPallet_1410_CallSetCommissionChangeRateCall{
			CallSetCommissionChangeRateCall: To_NominationPools_SetCommissionChangeRateCall(param),
		}
	case 20:
		return &pbgear.NominationPoolsPallet_1410_CallClaimCommissionCall{
			CallClaimCommissionCall: To_NominationPools_ClaimCommissionCall(param),
		}
	case 21:
		return &pbgear.NominationPoolsPallet_1410_CallAdjustPoolDepositCall{
			CallAdjustPoolDepositCall: To_NominationPools_AdjustPoolDepositCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_AdjustPoolDepositCall_1410(in any) *pbgear.NominationPools_AdjustPoolDepositCall_1410 {
	out := &pbgear.NominationPools_AdjustPoolDepositCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_NominationPools_AdjustPoolDepositCall_1410_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_AdjustPoolDepositCall_1410(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsAdjustPoolDepositCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsAdjustPoolDepositCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_BondExtraCall_310(in any) *pbgear.NominationPools_BondExtraCall_310 {
	out := &pbgear.NominationPools_BondExtraCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Extra
	v0 := To_OneOf_NominationPools_BondExtraCall_310_extra(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Extra").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_NominationPools_BondExtraCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_BondExtraCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsBondExtraCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsBondExtraCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_BondExtraCall_310_extra(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_BondExtraCall_310_ExtraFreeBalance{
			ExtraFreeBalance: To_NominationPools_FreeBalance(param),
		}
	case 1:
		return &pbgear.NominationPools_BondExtraCall_310_ExtraRewards{
			ExtraRewards: To_NominationPools_Rewards(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_BondExtraOtherCall_310(in any) *pbgear.NominationPools_BondExtraOtherCall_310 {
	out := &pbgear.NominationPools_BondExtraOtherCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Member
	v0 := To_OneOf_NominationPools_BondExtraOtherCall_310_member(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Member").Set(reflect.ValueOf(v0))
	// oneOf field Extra
	v1 := To_OneOf_NominationPools_BondExtraOtherCall_310_extra(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Extra").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_NominationPools_BondExtraOtherCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_BondExtraOtherCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsBondExtraOtherCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsBondExtraOtherCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_BondExtraOtherCall_310_member(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_BondExtraOtherCall_310_MemberId{
			MemberId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_BondExtraOtherCall_310_MemberIndex{
			MemberIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_BondExtraOtherCall_310_MemberRaw{
			MemberRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_BondExtraOtherCall_310_MemberAddress32{
			MemberAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_BondExtraOtherCall_310_MemberAddress20{
			MemberAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_BondExtraOtherCall_310_extra(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_BondExtraOtherCall_310_ExtraFreeBalance{
			ExtraFreeBalance: To_NominationPools_FreeBalance(param),
		}
	case 1:
		return &pbgear.NominationPools_BondExtraOtherCall_310_ExtraRewards{
			ExtraRewards: To_NominationPools_Rewards(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Bouncer_310(in any) *pbgear.NominationPools_Bouncer_310 {
	out := &pbgear.NominationPools_Bouncer_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Bouncer
	v0 := To_OneOf_NominationPools_Bouncer_310_bouncer(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Bouncer").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Bouncer_310_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Bouncer_310_BouncerId{
			BouncerId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Bouncer_310_BouncerIndex{
			BouncerIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Bouncer_310_BouncerRaw{
			BouncerRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Bouncer_310_BouncerAddress32{
			BouncerAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Bouncer_310_BouncerAddress20{
			BouncerAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Bouncer_1030(in any) *pbgear.NominationPools_Bouncer_1030 {
	out := &pbgear.NominationPools_Bouncer_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Bouncer
	v0 := To_OneOf_NominationPools_Bouncer_1030_bouncer(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Bouncer").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Bouncer_1030_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Bouncer_1030_BouncerId{
			BouncerId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Bouncer_1030_BouncerIndex{
			BouncerIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Bouncer_1030_BouncerRaw{
			BouncerRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Bouncer_1030_BouncerAddress32{
			BouncerAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Bouncer_1030_BouncerAddress20{
			BouncerAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_ChillCall_310(in any) *pbgear.NominationPools_ChillCall_310 {
	out := &pbgear.NominationPools_ChillCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_NominationPools_ChillCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_ChillCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsChillCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsChillCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_ClaimCommissionCall_310(in any) *pbgear.NominationPools_ClaimCommissionCall_310 {
	out := &pbgear.NominationPools_ClaimCommissionCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_NominationPools_ClaimCommissionCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_ClaimCommissionCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsClaimCommissionCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsClaimCommissionCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_ClaimPayoutCall_310(in any) *pbgear.NominationPools_ClaimPayoutCall_310 {
	out := &pbgear.NominationPools_ClaimPayoutCall_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_ClaimPayoutOtherCall_310(in any) *pbgear.NominationPools_ClaimPayoutOtherCall_310 {
	out := &pbgear.NominationPools_ClaimPayoutOtherCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Other To_SpCoreCryptoAccountId32(w)
	out.Other = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}
func To_NominationPools_ClaimPayoutOtherCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_ClaimPayoutOtherCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsClaimPayoutOtherCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsClaimPayoutOtherCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_CreateCall_310(in any) *pbgear.NominationPools_CreateCall_310 {
	out := &pbgear.NominationPools_CreateCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))
	// oneOf field Root
	v1 := To_OneOf_NominationPools_CreateCall_310_root(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Root").Set(reflect.ValueOf(v1))
	// oneOf field Nominator
	v2 := To_OneOf_NominationPools_CreateCall_310_nominator(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Nominator").Set(reflect.ValueOf(v2))
	// oneOf field Bouncer
	v3 := To_OneOf_NominationPools_CreateCall_310_bouncer(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Bouncer").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_NominationPools_CreateCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_CreateCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsCreateCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsCreateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_CreateCall_310_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_CreateCall_310_RootId{
			RootId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_CreateCall_310_RootIndex{
			RootIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_CreateCall_310_RootRaw{
			RootRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_CreateCall_310_RootAddress32{
			RootAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_CreateCall_310_RootAddress20{
			RootAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_CreateCall_310_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_CreateCall_310_NominatorId{
			NominatorId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_CreateCall_310_NominatorIndex{
			NominatorIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_CreateCall_310_NominatorRaw{
			NominatorRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_CreateCall_310_NominatorAddress32{
			NominatorAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_CreateCall_310_NominatorAddress20{
			NominatorAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_CreateCall_310_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_CreateCall_310_BouncerId{
			BouncerId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_CreateCall_310_BouncerIndex{
			BouncerIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_CreateCall_310_BouncerRaw{
			BouncerRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_CreateCall_310_BouncerAddress32{
			BouncerAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_CreateCall_310_BouncerAddress20{
			BouncerAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_CreateWithPoolIdCall_310(in any) *pbgear.NominationPools_CreateWithPoolIdCall_310 {
	out := &pbgear.NominationPools_CreateWithPoolIdCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))
	// oneOf field Root
	v1 := To_OneOf_NominationPools_CreateWithPoolIdCall_310_root(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Root").Set(reflect.ValueOf(v1))
	// oneOf field Nominator
	v2 := To_OneOf_NominationPools_CreateWithPoolIdCall_310_nominator(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Nominator").Set(reflect.ValueOf(v2))
	// oneOf field Bouncer
	v3 := To_OneOf_NominationPools_CreateWithPoolIdCall_310_bouncer(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Bouncer").Set(reflect.ValueOf(v3))
	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(4))

	return out //from message
}
func To_NominationPools_CreateWithPoolIdCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_CreateWithPoolIdCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsCreateWithPoolIdCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsCreateWithPoolIdCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_CreateWithPoolIdCall_310_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_RootId{
			RootId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_RootIndex{
			RootIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_RootRaw{
			RootRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_RootAddress32{
			RootAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_RootAddress20{
			RootAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_CreateWithPoolIdCall_310_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_NominatorId{
			NominatorId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_NominatorIndex{
			NominatorIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_NominatorRaw{
			NominatorRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_NominatorAddress32{
			NominatorAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_NominatorAddress20{
			NominatorAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_CreateWithPoolIdCall_310_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_BouncerId{
			BouncerId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_BouncerIndex{
			BouncerIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_BouncerRaw{
			BouncerRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_BouncerAddress32{
			BouncerAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_CreateWithPoolIdCall_310_BouncerAddress20{
			BouncerAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Extra_310(in any) *pbgear.NominationPools_Extra_310 {
	out := &pbgear.NominationPools_Extra_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Extra
	v0 := To_OneOf_NominationPools_Extra_310_extra(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Extra").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Extra_310_extra(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Extra_310_ExtraFreeBalance{
			ExtraFreeBalance: To_NominationPools_FreeBalance(param),
		}
	case 1:
		return &pbgear.NominationPools_Extra_310_ExtraRewards{
			ExtraRewards: To_NominationPools_Rewards(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Extra_1030(in any) *pbgear.NominationPools_Extra_1030 {
	out := &pbgear.NominationPools_Extra_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Extra
	v0 := To_OneOf_NominationPools_Extra_1030_extra(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Extra").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Extra_1030_extra(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Extra_1030_ExtraFreeBalance{
			ExtraFreeBalance: To_NominationPools_FreeBalance(param),
		}
	case 1:
		return &pbgear.NominationPools_Extra_1030_ExtraRewards{
			ExtraRewards: To_NominationPools_Rewards(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Extra_1040(in any) *pbgear.NominationPools_Extra_1040 {
	out := &pbgear.NominationPools_Extra_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Extra
	v0 := To_OneOf_NominationPools_Extra_1040_extra(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Extra").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Extra_1040_extra(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Extra_1040_ExtraFreeBalance{
			ExtraFreeBalance: To_NominationPools_FreeBalance(param),
		}
	case 1:
		return &pbgear.NominationPools_Extra_1040_ExtraRewards{
			ExtraRewards: To_NominationPools_Rewards(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Extra_1400(in any) *pbgear.NominationPools_Extra_1400 {
	out := &pbgear.NominationPools_Extra_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Extra
	v0 := To_OneOf_NominationPools_Extra_1400_extra(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Extra").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Extra_1400_extra(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Extra_1400_ExtraFreeBalance{
			ExtraFreeBalance: To_NominationPools_FreeBalance(param),
		}
	case 1:
		return &pbgear.NominationPools_Extra_1400_ExtraRewards{
			ExtraRewards: To_NominationPools_Rewards(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_GlobalMaxCommission_310(in any) *pbgear.NominationPools_GlobalMaxCommission_310 {
	out := &pbgear.NominationPools_GlobalMaxCommission_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field GlobalMaxCommission
	v0 := To_OneOf_NominationPools_GlobalMaxCommission_310_global_max_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("GlobalMaxCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_GlobalMaxCommission_310_global_max_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_GlobalMaxCommission_310_GlobalMaxCommissionNoop{
			GlobalMaxCommissionNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_GlobalMaxCommission_310_GlobalMaxCommissionSet{
			GlobalMaxCommissionSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_GlobalMaxCommission_310_GlobalMaxCommissionRemove{
			GlobalMaxCommissionRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_GlobalMaxCommission_1030(in any) *pbgear.NominationPools_GlobalMaxCommission_1030 {
	out := &pbgear.NominationPools_GlobalMaxCommission_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field GlobalMaxCommission
	v0 := To_OneOf_NominationPools_GlobalMaxCommission_1030_global_max_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("GlobalMaxCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_GlobalMaxCommission_1030_global_max_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_GlobalMaxCommission_1030_GlobalMaxCommissionNoop{
			GlobalMaxCommissionNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_GlobalMaxCommission_1030_GlobalMaxCommissionSet{
			GlobalMaxCommissionSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_GlobalMaxCommission_1030_GlobalMaxCommissionRemove{
			GlobalMaxCommissionRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_GlobalMaxCommission_1040(in any) *pbgear.NominationPools_GlobalMaxCommission_1040 {
	out := &pbgear.NominationPools_GlobalMaxCommission_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field GlobalMaxCommission
	v0 := To_OneOf_NominationPools_GlobalMaxCommission_1040_global_max_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("GlobalMaxCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_GlobalMaxCommission_1040_global_max_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_GlobalMaxCommission_1040_GlobalMaxCommissionNoop{
			GlobalMaxCommissionNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_GlobalMaxCommission_1040_GlobalMaxCommissionSet{
			GlobalMaxCommissionSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_GlobalMaxCommission_1040_GlobalMaxCommissionRemove{
			GlobalMaxCommissionRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_GlobalMaxCommission_1400(in any) *pbgear.NominationPools_GlobalMaxCommission_1400 {
	out := &pbgear.NominationPools_GlobalMaxCommission_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field GlobalMaxCommission
	v0 := To_OneOf_NominationPools_GlobalMaxCommission_1400_global_max_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("GlobalMaxCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_GlobalMaxCommission_1400_global_max_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_GlobalMaxCommission_1400_GlobalMaxCommissionNoop{
			GlobalMaxCommissionNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_GlobalMaxCommission_1400_GlobalMaxCommissionSet{
			GlobalMaxCommissionSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_GlobalMaxCommission_1400_GlobalMaxCommissionRemove{
			GlobalMaxCommissionRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_JoinCall_310(in any) *pbgear.NominationPools_JoinCall_310 {
	out := &pbgear.NominationPools_JoinCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))
	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_JoinCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_JoinCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsJoinCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsJoinCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_MaxMembers_310(in any) *pbgear.NominationPools_MaxMembers_310 {
	out := &pbgear.NominationPools_MaxMembers_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembers
	v0 := To_OneOf_NominationPools_MaxMembers_310_max_members(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembers").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembers_310_max_members(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembers_310_MaxMembersNoop{
			MaxMembersNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembers_310_MaxMembersSet{
			MaxMembersSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembers_310_MaxMembersRemove{
			MaxMembersRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxMembers_1030(in any) *pbgear.NominationPools_MaxMembers_1030 {
	out := &pbgear.NominationPools_MaxMembers_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembers
	v0 := To_OneOf_NominationPools_MaxMembers_1030_max_members(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembers").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembers_1030_max_members(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembers_1030_MaxMembersNoop{
			MaxMembersNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembers_1030_MaxMembersSet{
			MaxMembersSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembers_1030_MaxMembersRemove{
			MaxMembersRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxMembers_1040(in any) *pbgear.NominationPools_MaxMembers_1040 {
	out := &pbgear.NominationPools_MaxMembers_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembers
	v0 := To_OneOf_NominationPools_MaxMembers_1040_max_members(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembers").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembers_1040_max_members(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembers_1040_MaxMembersNoop{
			MaxMembersNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembers_1040_MaxMembersSet{
			MaxMembersSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembers_1040_MaxMembersRemove{
			MaxMembersRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxMembers_1400(in any) *pbgear.NominationPools_MaxMembers_1400 {
	out := &pbgear.NominationPools_MaxMembers_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembers
	v0 := To_OneOf_NominationPools_MaxMembers_1400_max_members(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembers").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembers_1400_max_members(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembers_1400_MaxMembersNoop{
			MaxMembersNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembers_1400_MaxMembersSet{
			MaxMembersSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembers_1400_MaxMembersRemove{
			MaxMembersRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxMembersPerPool_310(in any) *pbgear.NominationPools_MaxMembersPerPool_310 {
	out := &pbgear.NominationPools_MaxMembersPerPool_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembersPerPool
	v0 := To_OneOf_NominationPools_MaxMembersPerPool_310_max_members_per_pool(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembersPerPool").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembersPerPool_310_max_members_per_pool(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembersPerPool_310_MaxMembersPerPoolNoop{
			MaxMembersPerPoolNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembersPerPool_310_MaxMembersPerPoolSet{
			MaxMembersPerPoolSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembersPerPool_310_MaxMembersPerPoolRemove{
			MaxMembersPerPoolRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxMembersPerPool_1030(in any) *pbgear.NominationPools_MaxMembersPerPool_1030 {
	out := &pbgear.NominationPools_MaxMembersPerPool_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembersPerPool
	v0 := To_OneOf_NominationPools_MaxMembersPerPool_1030_max_members_per_pool(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembersPerPool").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembersPerPool_1030_max_members_per_pool(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembersPerPool_1030_MaxMembersPerPoolNoop{
			MaxMembersPerPoolNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembersPerPool_1030_MaxMembersPerPoolSet{
			MaxMembersPerPoolSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembersPerPool_1030_MaxMembersPerPoolRemove{
			MaxMembersPerPoolRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxMembersPerPool_1040(in any) *pbgear.NominationPools_MaxMembersPerPool_1040 {
	out := &pbgear.NominationPools_MaxMembersPerPool_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembersPerPool
	v0 := To_OneOf_NominationPools_MaxMembersPerPool_1040_max_members_per_pool(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembersPerPool").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembersPerPool_1040_max_members_per_pool(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembersPerPool_1040_MaxMembersPerPoolNoop{
			MaxMembersPerPoolNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembersPerPool_1040_MaxMembersPerPoolSet{
			MaxMembersPerPoolSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembersPerPool_1040_MaxMembersPerPoolRemove{
			MaxMembersPerPoolRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxMembersPerPool_1400(in any) *pbgear.NominationPools_MaxMembersPerPool_1400 {
	out := &pbgear.NominationPools_MaxMembersPerPool_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxMembersPerPool
	v0 := To_OneOf_NominationPools_MaxMembersPerPool_1400_max_members_per_pool(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembersPerPool").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxMembersPerPool_1400_max_members_per_pool(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxMembersPerPool_1400_MaxMembersPerPoolNoop{
			MaxMembersPerPoolNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxMembersPerPool_1400_MaxMembersPerPoolSet{
			MaxMembersPerPoolSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxMembersPerPool_1400_MaxMembersPerPoolRemove{
			MaxMembersPerPoolRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxPools_310(in any) *pbgear.NominationPools_MaxPools_310 {
	out := &pbgear.NominationPools_MaxPools_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxPools
	v0 := To_OneOf_NominationPools_MaxPools_310_max_pools(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxPools").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxPools_310_max_pools(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxPools_310_MaxPoolsNoop{
			MaxPoolsNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxPools_310_MaxPoolsSet{
			MaxPoolsSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxPools_310_MaxPoolsRemove{
			MaxPoolsRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxPools_1030(in any) *pbgear.NominationPools_MaxPools_1030 {
	out := &pbgear.NominationPools_MaxPools_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxPools
	v0 := To_OneOf_NominationPools_MaxPools_1030_max_pools(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxPools").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxPools_1030_max_pools(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxPools_1030_MaxPoolsNoop{
			MaxPoolsNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxPools_1030_MaxPoolsSet{
			MaxPoolsSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxPools_1030_MaxPoolsRemove{
			MaxPoolsRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxPools_1040(in any) *pbgear.NominationPools_MaxPools_1040 {
	out := &pbgear.NominationPools_MaxPools_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxPools
	v0 := To_OneOf_NominationPools_MaxPools_1040_max_pools(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxPools").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxPools_1040_max_pools(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxPools_1040_MaxPoolsNoop{
			MaxPoolsNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxPools_1040_MaxPoolsSet{
			MaxPoolsSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxPools_1040_MaxPoolsRemove{
			MaxPoolsRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MaxPools_1400(in any) *pbgear.NominationPools_MaxPools_1400 {
	out := &pbgear.NominationPools_MaxPools_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxPools
	v0 := To_OneOf_NominationPools_MaxPools_1400_max_pools(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxPools").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MaxPools_1400_max_pools(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MaxPools_1400_MaxPoolsNoop{
			MaxPoolsNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MaxPools_1400_MaxPoolsSet{
			MaxPoolsSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MaxPools_1400_MaxPoolsRemove{
			MaxPoolsRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Member_310(in any) *pbgear.NominationPools_Member_310 {
	out := &pbgear.NominationPools_Member_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Member
	v0 := To_OneOf_NominationPools_Member_310_member(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Member").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Member_310_member(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Member_310_MemberId{
			MemberId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Member_310_MemberIndex{
			MemberIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Member_310_MemberRaw{
			MemberRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Member_310_MemberAddress32{
			MemberAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Member_310_MemberAddress20{
			MemberAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Member_1030(in any) *pbgear.NominationPools_Member_1030 {
	out := &pbgear.NominationPools_Member_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Member
	v0 := To_OneOf_NominationPools_Member_1030_member(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Member").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Member_1030_member(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Member_1030_MemberId{
			MemberId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Member_1030_MemberIndex{
			MemberIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Member_1030_MemberRaw{
			MemberRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Member_1030_MemberAddress32{
			MemberAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Member_1030_MemberAddress20{
			MemberAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MemberAccount_310(in any) *pbgear.NominationPools_MemberAccount_310 {
	out := &pbgear.NominationPools_MemberAccount_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MemberAccount
	v0 := To_OneOf_NominationPools_MemberAccount_310_member_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MemberAccount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MemberAccount_310_member_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MemberAccount_310_MemberAccountId{
			MemberAccountId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_MemberAccount_310_MemberAccountIndex{
			MemberAccountIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_MemberAccount_310_MemberAccountRaw{
			MemberAccountRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_MemberAccount_310_MemberAccountAddress32{
			MemberAccountAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_MemberAccount_310_MemberAccountAddress20{
			MemberAccountAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MemberAccount_1030(in any) *pbgear.NominationPools_MemberAccount_1030 {
	out := &pbgear.NominationPools_MemberAccount_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MemberAccount
	v0 := To_OneOf_NominationPools_MemberAccount_1030_member_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MemberAccount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MemberAccount_1030_member_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MemberAccount_1030_MemberAccountId{
			MemberAccountId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_MemberAccount_1030_MemberAccountIndex{
			MemberAccountIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_MemberAccount_1030_MemberAccountRaw{
			MemberAccountRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_MemberAccount_1030_MemberAccountAddress32{
			MemberAccountAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_MemberAccount_1030_MemberAccountAddress20{
			MemberAccountAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinCreateBond_310(in any) *pbgear.NominationPools_MinCreateBond_310 {
	out := &pbgear.NominationPools_MinCreateBond_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCreateBond
	v0 := To_OneOf_NominationPools_MinCreateBond_310_min_create_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCreateBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinCreateBond_310_min_create_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinCreateBond_310_MinCreateBondNoop{
			MinCreateBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinCreateBond_310_MinCreateBondSet{
			MinCreateBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinCreateBond_310_MinCreateBondRemove{
			MinCreateBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinCreateBond_1030(in any) *pbgear.NominationPools_MinCreateBond_1030 {
	out := &pbgear.NominationPools_MinCreateBond_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCreateBond
	v0 := To_OneOf_NominationPools_MinCreateBond_1030_min_create_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCreateBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinCreateBond_1030_min_create_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinCreateBond_1030_MinCreateBondNoop{
			MinCreateBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinCreateBond_1030_MinCreateBondSet{
			MinCreateBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinCreateBond_1030_MinCreateBondRemove{
			MinCreateBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinCreateBond_1040(in any) *pbgear.NominationPools_MinCreateBond_1040 {
	out := &pbgear.NominationPools_MinCreateBond_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCreateBond
	v0 := To_OneOf_NominationPools_MinCreateBond_1040_min_create_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCreateBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinCreateBond_1040_min_create_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinCreateBond_1040_MinCreateBondNoop{
			MinCreateBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinCreateBond_1040_MinCreateBondSet{
			MinCreateBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinCreateBond_1040_MinCreateBondRemove{
			MinCreateBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinCreateBond_1400(in any) *pbgear.NominationPools_MinCreateBond_1400 {
	out := &pbgear.NominationPools_MinCreateBond_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCreateBond
	v0 := To_OneOf_NominationPools_MinCreateBond_1400_min_create_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCreateBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinCreateBond_1400_min_create_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinCreateBond_1400_MinCreateBondNoop{
			MinCreateBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinCreateBond_1400_MinCreateBondSet{
			MinCreateBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinCreateBond_1400_MinCreateBondRemove{
			MinCreateBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinJoinBond_310(in any) *pbgear.NominationPools_MinJoinBond_310 {
	out := &pbgear.NominationPools_MinJoinBond_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinJoinBond
	v0 := To_OneOf_NominationPools_MinJoinBond_310_min_join_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinJoinBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinJoinBond_310_min_join_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinJoinBond_310_MinJoinBondNoop{
			MinJoinBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinJoinBond_310_MinJoinBondSet{
			MinJoinBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinJoinBond_310_MinJoinBondRemove{
			MinJoinBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinJoinBond_1030(in any) *pbgear.NominationPools_MinJoinBond_1030 {
	out := &pbgear.NominationPools_MinJoinBond_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinJoinBond
	v0 := To_OneOf_NominationPools_MinJoinBond_1030_min_join_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinJoinBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinJoinBond_1030_min_join_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinJoinBond_1030_MinJoinBondNoop{
			MinJoinBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinJoinBond_1030_MinJoinBondSet{
			MinJoinBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinJoinBond_1030_MinJoinBondRemove{
			MinJoinBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinJoinBond_1040(in any) *pbgear.NominationPools_MinJoinBond_1040 {
	out := &pbgear.NominationPools_MinJoinBond_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinJoinBond
	v0 := To_OneOf_NominationPools_MinJoinBond_1040_min_join_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinJoinBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinJoinBond_1040_min_join_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinJoinBond_1040_MinJoinBondNoop{
			MinJoinBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinJoinBond_1040_MinJoinBondSet{
			MinJoinBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinJoinBond_1040_MinJoinBondRemove{
			MinJoinBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_MinJoinBond_1400(in any) *pbgear.NominationPools_MinJoinBond_1400 {
	out := &pbgear.NominationPools_MinJoinBond_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinJoinBond
	v0 := To_OneOf_NominationPools_MinJoinBond_1400_min_join_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinJoinBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_MinJoinBond_1400_min_join_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_MinJoinBond_1400_MinJoinBondNoop{
			MinJoinBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_MinJoinBond_1400_MinJoinBondSet{
			MinJoinBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_MinJoinBond_1400_MinJoinBondRemove{
			MinJoinBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewBouncer_310(in any) *pbgear.NominationPools_NewBouncer_310 {
	out := &pbgear.NominationPools_NewBouncer_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewBouncer
	v0 := To_OneOf_NominationPools_NewBouncer_310_new_bouncer(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewBouncer").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewBouncer_310_new_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewBouncer_310_NewBouncerNoop{
			NewBouncerNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewBouncer_310_NewBouncerSet{
			NewBouncerSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewBouncer_310_NewBouncerRemove{
			NewBouncerRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewBouncer_1030(in any) *pbgear.NominationPools_NewBouncer_1030 {
	out := &pbgear.NominationPools_NewBouncer_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewBouncer
	v0 := To_OneOf_NominationPools_NewBouncer_1030_new_bouncer(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewBouncer").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewBouncer_1030_new_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewBouncer_1030_NewBouncerNoop{
			NewBouncerNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewBouncer_1030_NewBouncerSet{
			NewBouncerSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewBouncer_1030_NewBouncerRemove{
			NewBouncerRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewBouncer_1040(in any) *pbgear.NominationPools_NewBouncer_1040 {
	out := &pbgear.NominationPools_NewBouncer_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewBouncer
	v0 := To_OneOf_NominationPools_NewBouncer_1040_new_bouncer(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewBouncer").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewBouncer_1040_new_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewBouncer_1040_NewBouncerNoop{
			NewBouncerNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewBouncer_1040_NewBouncerSet{
			NewBouncerSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewBouncer_1040_NewBouncerRemove{
			NewBouncerRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewBouncer_1400(in any) *pbgear.NominationPools_NewBouncer_1400 {
	out := &pbgear.NominationPools_NewBouncer_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewBouncer
	v0 := To_OneOf_NominationPools_NewBouncer_1400_new_bouncer(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewBouncer").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewBouncer_1400_new_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewBouncer_1400_NewBouncerNoop{
			NewBouncerNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewBouncer_1400_NewBouncerSet{
			NewBouncerSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewBouncer_1400_NewBouncerRemove{
			NewBouncerRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewNominator_310(in any) *pbgear.NominationPools_NewNominator_310 {
	out := &pbgear.NominationPools_NewNominator_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewNominator
	v0 := To_OneOf_NominationPools_NewNominator_310_new_nominator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewNominator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewNominator_310_new_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewNominator_310_NewNominatorNoop{
			NewNominatorNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewNominator_310_NewNominatorSet{
			NewNominatorSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewNominator_310_NewNominatorRemove{
			NewNominatorRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewNominator_1030(in any) *pbgear.NominationPools_NewNominator_1030 {
	out := &pbgear.NominationPools_NewNominator_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewNominator
	v0 := To_OneOf_NominationPools_NewNominator_1030_new_nominator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewNominator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewNominator_1030_new_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewNominator_1030_NewNominatorNoop{
			NewNominatorNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewNominator_1030_NewNominatorSet{
			NewNominatorSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewNominator_1030_NewNominatorRemove{
			NewNominatorRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewNominator_1040(in any) *pbgear.NominationPools_NewNominator_1040 {
	out := &pbgear.NominationPools_NewNominator_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewNominator
	v0 := To_OneOf_NominationPools_NewNominator_1040_new_nominator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewNominator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewNominator_1040_new_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewNominator_1040_NewNominatorNoop{
			NewNominatorNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewNominator_1040_NewNominatorSet{
			NewNominatorSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewNominator_1040_NewNominatorRemove{
			NewNominatorRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewNominator_1400(in any) *pbgear.NominationPools_NewNominator_1400 {
	out := &pbgear.NominationPools_NewNominator_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewNominator
	v0 := To_OneOf_NominationPools_NewNominator_1400_new_nominator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewNominator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewNominator_1400_new_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewNominator_1400_NewNominatorNoop{
			NewNominatorNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewNominator_1400_NewNominatorSet{
			NewNominatorSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewNominator_1400_NewNominatorRemove{
			NewNominatorRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewRoot_310(in any) *pbgear.NominationPools_NewRoot_310 {
	out := &pbgear.NominationPools_NewRoot_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewRoot
	v0 := To_OneOf_NominationPools_NewRoot_310_new_root(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewRoot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewRoot_310_new_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewRoot_310_NewRootNoop{
			NewRootNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewRoot_310_NewRootSet{
			NewRootSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewRoot_310_NewRootRemove{
			NewRootRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewRoot_1030(in any) *pbgear.NominationPools_NewRoot_1030 {
	out := &pbgear.NominationPools_NewRoot_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewRoot
	v0 := To_OneOf_NominationPools_NewRoot_1030_new_root(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewRoot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewRoot_1030_new_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewRoot_1030_NewRootNoop{
			NewRootNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewRoot_1030_NewRootSet{
			NewRootSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewRoot_1030_NewRootRemove{
			NewRootRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewRoot_1040(in any) *pbgear.NominationPools_NewRoot_1040 {
	out := &pbgear.NominationPools_NewRoot_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewRoot
	v0 := To_OneOf_NominationPools_NewRoot_1040_new_root(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewRoot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewRoot_1040_new_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewRoot_1040_NewRootNoop{
			NewRootNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewRoot_1040_NewRootSet{
			NewRootSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewRoot_1040_NewRootRemove{
			NewRootRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewRoot_1400(in any) *pbgear.NominationPools_NewRoot_1400 {
	out := &pbgear.NominationPools_NewRoot_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewRoot
	v0 := To_OneOf_NominationPools_NewRoot_1400_new_root(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewRoot").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewRoot_1400_new_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewRoot_1400_NewRootNoop{
			NewRootNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_NewRoot_1400_NewRootSet{
			NewRootSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_NewRoot_1400_NewRootRemove{
			NewRootRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NominateCall_310(in any) *pbgear.NominationPools_NominateCall_310 {
	out := &pbgear.NominationPools_NominateCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// repeated field Validators
	out.Validators = To_Repeated_NominationPools_NominateCall_310_validators(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_NominateCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_NominateCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsNominateCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsNominateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_NominationPools_NominateCall_310_validators(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_NominationPools_Nominator_310(in any) *pbgear.NominationPools_Nominator_310 {
	out := &pbgear.NominationPools_Nominator_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Nominator
	v0 := To_OneOf_NominationPools_Nominator_310_nominator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Nominator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Nominator_310_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Nominator_310_NominatorId{
			NominatorId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Nominator_310_NominatorIndex{
			NominatorIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Nominator_310_NominatorRaw{
			NominatorRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Nominator_310_NominatorAddress32{
			NominatorAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Nominator_310_NominatorAddress20{
			NominatorAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Nominator_1030(in any) *pbgear.NominationPools_Nominator_1030 {
	out := &pbgear.NominationPools_Nominator_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Nominator
	v0 := To_OneOf_NominationPools_Nominator_1030_nominator(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Nominator").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Nominator_1030_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Nominator_1030_NominatorId{
			NominatorId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Nominator_1030_NominatorIndex{
			NominatorIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Nominator_1030_NominatorRaw{
			NominatorRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Nominator_1030_NominatorAddress32{
			NominatorAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Nominator_1030_NominatorAddress20{
			NominatorAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Permission_310(in any) *pbgear.NominationPools_Permission_310 {
	out := &pbgear.NominationPools_Permission_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Permission
	v0 := To_OneOf_NominationPools_Permission_310_permission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Permission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Permission_310_permission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Permission_310_PermissionPermissioned{
			PermissionPermissioned: To_NominationPools_Permissioned(param),
		}
	case 1:
		return &pbgear.NominationPools_Permission_310_PermissionPermissionlessCompound{
			PermissionPermissionlessCompound: To_NominationPools_PermissionlessCompound(param),
		}
	case 2:
		return &pbgear.NominationPools_Permission_310_PermissionPermissionlessWithdraw{
			PermissionPermissionlessWithdraw: To_NominationPools_PermissionlessWithdraw(param),
		}
	case 3:
		return &pbgear.NominationPools_Permission_310_PermissionPermissionlessAll{
			PermissionPermissionlessAll: To_NominationPools_PermissionlessAll(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Permission_1030(in any) *pbgear.NominationPools_Permission_1030 {
	out := &pbgear.NominationPools_Permission_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Permission
	v0 := To_OneOf_NominationPools_Permission_1030_permission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Permission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Permission_1030_permission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Permission_1030_PermissionPermissioned{
			PermissionPermissioned: To_NominationPools_Permissioned(param),
		}
	case 1:
		return &pbgear.NominationPools_Permission_1030_PermissionPermissionlessCompound{
			PermissionPermissionlessCompound: To_NominationPools_PermissionlessCompound(param),
		}
	case 2:
		return &pbgear.NominationPools_Permission_1030_PermissionPermissionlessWithdraw{
			PermissionPermissionlessWithdraw: To_NominationPools_PermissionlessWithdraw(param),
		}
	case 3:
		return &pbgear.NominationPools_Permission_1030_PermissionPermissionlessAll{
			PermissionPermissionlessAll: To_NominationPools_PermissionlessAll(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Permission_1040(in any) *pbgear.NominationPools_Permission_1040 {
	out := &pbgear.NominationPools_Permission_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Permission
	v0 := To_OneOf_NominationPools_Permission_1040_permission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Permission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Permission_1040_permission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Permission_1040_PermissionPermissioned{
			PermissionPermissioned: To_NominationPools_Permissioned(param),
		}
	case 1:
		return &pbgear.NominationPools_Permission_1040_PermissionPermissionlessCompound{
			PermissionPermissionlessCompound: To_NominationPools_PermissionlessCompound(param),
		}
	case 2:
		return &pbgear.NominationPools_Permission_1040_PermissionPermissionlessWithdraw{
			PermissionPermissionlessWithdraw: To_NominationPools_PermissionlessWithdraw(param),
		}
	case 3:
		return &pbgear.NominationPools_Permission_1040_PermissionPermissionlessAll{
			PermissionPermissionlessAll: To_NominationPools_PermissionlessAll(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Permission_1400(in any) *pbgear.NominationPools_Permission_1400 {
	out := &pbgear.NominationPools_Permission_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Permission
	v0 := To_OneOf_NominationPools_Permission_1400_permission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Permission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Permission_1400_permission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Permission_1400_PermissionPermissioned{
			PermissionPermissioned: To_NominationPools_Permissioned(param),
		}
	case 1:
		return &pbgear.NominationPools_Permission_1400_PermissionPermissionlessCompound{
			PermissionPermissionlessCompound: To_NominationPools_PermissionlessCompound(param),
		}
	case 2:
		return &pbgear.NominationPools_Permission_1400_PermissionPermissionlessWithdraw{
			PermissionPermissionlessWithdraw: To_NominationPools_PermissionlessWithdraw(param),
		}
	case 3:
		return &pbgear.NominationPools_Permission_1400_PermissionPermissionlessAll{
			PermissionPermissionlessAll: To_NominationPools_PermissionlessAll(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_PoolWithdrawUnbondedCall_310(in any) *pbgear.NominationPools_PoolWithdrawUnbondedCall_310 {
	out := &pbgear.NominationPools_PoolWithdrawUnbondedCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// primitive field NumSlashingSpans
	out.NumSlashingSpans = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_PoolWithdrawUnbondedCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_PoolWithdrawUnbondedCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsPoolWithdrawUnbondedCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsPoolWithdrawUnbondedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_Root_310(in any) *pbgear.NominationPools_Root_310 {
	out := &pbgear.NominationPools_Root_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Root
	v0 := To_OneOf_NominationPools_Root_310_root(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Root").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Root_310_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Root_310_RootId{
			RootId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Root_310_RootIndex{
			RootIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Root_310_RootRaw{
			RootRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Root_310_RootAddress32{
			RootAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Root_310_RootAddress20{
			RootAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_Root_1030(in any) *pbgear.NominationPools_Root_1030 {
	out := &pbgear.NominationPools_Root_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Root
	v0 := To_OneOf_NominationPools_Root_1030_root(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Root").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_Root_1030_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_Root_1030_RootId{
			RootId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_Root_1030_RootIndex{
			RootIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_Root_1030_RootRaw{
			RootRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_Root_1030_RootAddress32{
			RootAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_Root_1030_RootAddress20{
			RootAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_SetClaimPermissionCall_310(in any) *pbgear.NominationPools_SetClaimPermissionCall_310 {
	out := &pbgear.NominationPools_SetClaimPermissionCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Permission
	v0 := To_OneOf_NominationPools_SetClaimPermissionCall_310_permission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Permission").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_NominationPools_SetClaimPermissionCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_SetClaimPermissionCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsSetClaimPermissionCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsSetClaimPermissionCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_SetClaimPermissionCall_310_permission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetClaimPermissionCall_310_PermissionPermissioned{
			PermissionPermissioned: To_NominationPools_Permissioned(param),
		}
	case 1:
		return &pbgear.NominationPools_SetClaimPermissionCall_310_PermissionPermissionlessCompound{
			PermissionPermissionlessCompound: To_NominationPools_PermissionlessCompound(param),
		}
	case 2:
		return &pbgear.NominationPools_SetClaimPermissionCall_310_PermissionPermissionlessWithdraw{
			PermissionPermissionlessWithdraw: To_NominationPools_PermissionlessWithdraw(param),
		}
	case 3:
		return &pbgear.NominationPools_SetClaimPermissionCall_310_PermissionPermissionlessAll{
			PermissionPermissionlessAll: To_NominationPools_PermissionlessAll(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_SetCommissionCall_310(in any) *pbgear.NominationPools_SetCommissionCall_310 {
	out := &pbgear.NominationPools_SetCommissionCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// optional field NewCommission true
	if v.HasValue() {
		out.NewCommission = To_Optional_NominationPools_SetCommissionCall_310_new_commission(v.ValueAt(1))
	}

	return out //from message
}
func To_NominationPools_SetCommissionCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_SetCommissionCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsSetCommissionCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsSetCommissionCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_NominationPools_SetCommissionCall_310_new_commission(in any) *pbgear.NominationPools_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_NominationPools_SetCommissionChangeRateCall_310(in any) *pbgear.NominationPools_SetCommissionChangeRateCall_310 {
	out := &pbgear.NominationPools_SetCommissionChangeRateCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// field ChangeRate To_NominationPools_PalletNominationPoolsCommissionChangeRate(w)
	out.ChangeRate = To_NominationPools_PalletNominationPoolsCommissionChangeRate(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_SetCommissionChangeRateCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_SetCommissionChangeRateCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsSetCommissionChangeRateCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsSetCommissionChangeRateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_SetCommissionMaxCall_310(in any) *pbgear.NominationPools_SetCommissionMaxCall_310 {
	out := &pbgear.NominationPools_SetCommissionMaxCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// field MaxCommission To_SpArithmeticPerThingsPerbill(w)
	out.MaxCommission = To_SpArithmeticPerThingsPerbill(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_SetCommissionMaxCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_SetCommissionMaxCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsSetCommissionMaxCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsSetCommissionMaxCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_SetConfigsCall_310(in any) *pbgear.NominationPools_SetConfigsCall_310 {
	out := &pbgear.NominationPools_SetConfigsCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinJoinBond
	v0 := To_OneOf_NominationPools_SetConfigsCall_310_min_join_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinJoinBond").Set(reflect.ValueOf(v0))
	// oneOf field MinCreateBond
	v1 := To_OneOf_NominationPools_SetConfigsCall_310_min_create_bond(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("MinCreateBond").Set(reflect.ValueOf(v1))
	// oneOf field MaxPools
	v2 := To_OneOf_NominationPools_SetConfigsCall_310_max_pools(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("MaxPools").Set(reflect.ValueOf(v2))
	// oneOf field MaxMembers
	v3 := To_OneOf_NominationPools_SetConfigsCall_310_max_members(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembers").Set(reflect.ValueOf(v3))
	// oneOf field MaxMembersPerPool
	v4 := To_OneOf_NominationPools_SetConfigsCall_310_max_members_per_pool(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("MaxMembersPerPool").Set(reflect.ValueOf(v4))
	// oneOf field GlobalMaxCommission
	v5 := To_OneOf_NominationPools_SetConfigsCall_310_global_max_commission(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("GlobalMaxCommission").Set(reflect.ValueOf(v5))

	return out //from message
}
func To_NominationPools_SetConfigsCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_SetConfigsCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsSetConfigsCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsSetConfigsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_SetConfigsCall_310_min_join_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetConfigsCall_310_MinJoinBondNoop{
			MinJoinBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_SetConfigsCall_310_MinJoinBondSet{
			MinJoinBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_SetConfigsCall_310_MinJoinBondRemove{
			MinJoinBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_SetConfigsCall_310_min_create_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetConfigsCall_310_MinCreateBondNoop{
			MinCreateBondNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_SetConfigsCall_310_MinCreateBondSet{
			MinCreateBondSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_SetConfigsCall_310_MinCreateBondRemove{
			MinCreateBondRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_SetConfigsCall_310_max_pools(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxPoolsNoop{
			MaxPoolsNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxPoolsSet{
			MaxPoolsSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxPoolsRemove{
			MaxPoolsRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_SetConfigsCall_310_max_members(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxMembersNoop{
			MaxMembersNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxMembersSet{
			MaxMembersSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxMembersRemove{
			MaxMembersRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_SetConfigsCall_310_max_members_per_pool(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxMembersPerPoolNoop{
			MaxMembersPerPoolNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxMembersPerPoolSet{
			MaxMembersPerPoolSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_SetConfigsCall_310_MaxMembersPerPoolRemove{
			MaxMembersPerPoolRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_SetConfigsCall_310_global_max_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetConfigsCall_310_GlobalMaxCommissionNoop{
			GlobalMaxCommissionNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_SetConfigsCall_310_GlobalMaxCommissionSet{
			GlobalMaxCommissionSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_SetConfigsCall_310_GlobalMaxCommissionRemove{
			GlobalMaxCommissionRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_SetMetadataCall_310(in any) *pbgear.NominationPools_SetMetadataCall_310 {
	out := &pbgear.NominationPools_SetMetadataCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// primitive field Metadata
	out.Metadata = To_bytes(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_SetMetadataCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_SetMetadataCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsSetMetadataCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsSetMetadataCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_NominationPools_SetStateCall_310(in any) *pbgear.NominationPools_SetStateCall_310 {
	out := &pbgear.NominationPools_SetStateCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// oneOf field State
	v1 := To_OneOf_NominationPools_SetStateCall_310_state(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("State").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_NominationPools_SetStateCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_SetStateCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsSetStateCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsSetStateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_SetStateCall_310_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_SetStateCall_310_StateOpen{
			StateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_SetStateCall_310_StateBlocked{
			StateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_SetStateCall_310_StateDestroying{
			StateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_State_310(in any) *pbgear.NominationPools_State_310 {
	out := &pbgear.NominationPools_State_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field State
	v0 := To_OneOf_NominationPools_State_310_state(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("State").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_State_310_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_State_310_StateOpen{
			StateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_State_310_StateBlocked{
			StateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_State_310_StateDestroying{
			StateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_State_1030(in any) *pbgear.NominationPools_State_1030 {
	out := &pbgear.NominationPools_State_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field State
	v0 := To_OneOf_NominationPools_State_1030_state(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("State").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_State_1030_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_State_1030_StateOpen{
			StateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_State_1030_StateBlocked{
			StateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_State_1030_StateDestroying{
			StateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_State_1040(in any) *pbgear.NominationPools_State_1040 {
	out := &pbgear.NominationPools_State_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field State
	v0 := To_OneOf_NominationPools_State_1040_state(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("State").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_State_1040_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_State_1040_StateOpen{
			StateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_State_1040_StateBlocked{
			StateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_State_1040_StateDestroying{
			StateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_State_1400(in any) *pbgear.NominationPools_State_1400 {
	out := &pbgear.NominationPools_State_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field State
	v0 := To_OneOf_NominationPools_State_1400_state(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("State").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_State_1400_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_State_1400_StateOpen{
			StateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_State_1400_StateBlocked{
			StateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_State_1400_StateDestroying{
			StateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_UnbondCall_310(in any) *pbgear.NominationPools_UnbondCall_310 {
	out := &pbgear.NominationPools_UnbondCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MemberAccount
	v0 := To_OneOf_NominationPools_UnbondCall_310_member_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MemberAccount").Set(reflect.ValueOf(v0))
	// primitive field UnbondingPoints
	out.UnbondingPoints = To_string(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_UnbondCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_UnbondCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsUnbondCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsUnbondCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_UnbondCall_310_member_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_UnbondCall_310_MemberAccountId{
			MemberAccountId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_UnbondCall_310_MemberAccountIndex{
			MemberAccountIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_UnbondCall_310_MemberAccountRaw{
			MemberAccountRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_UnbondCall_310_MemberAccountAddress32{
			MemberAccountAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_UnbondCall_310_MemberAccountAddress20{
			MemberAccountAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_UpdateRolesCall_310(in any) *pbgear.NominationPools_UpdateRolesCall_310 {
	out := &pbgear.NominationPools_UpdateRolesCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field PoolId
	out.PoolId = To_uint32(v.ValueAt(0))
	// oneOf field NewRoot
	v1 := To_OneOf_NominationPools_UpdateRolesCall_310_new_root(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("NewRoot").Set(reflect.ValueOf(v1))
	// oneOf field NewNominator
	v2 := To_OneOf_NominationPools_UpdateRolesCall_310_new_nominator(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("NewNominator").Set(reflect.ValueOf(v2))
	// oneOf field NewBouncer
	v3 := To_OneOf_NominationPools_UpdateRolesCall_310_new_bouncer(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("NewBouncer").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_NominationPools_UpdateRolesCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_UpdateRolesCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsUpdateRolesCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsUpdateRolesCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_UpdateRolesCall_310_new_root(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewRootNoop{
			NewRootNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewRootSet{
			NewRootSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewRootRemove{
			NewRootRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_UpdateRolesCall_310_new_nominator(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewNominatorNoop{
			NewNominatorNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewNominatorSet{
			NewNominatorSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewNominatorRemove{
			NewNominatorRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_NominationPools_UpdateRolesCall_310_new_bouncer(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewBouncerNoop{
			NewBouncerNoop: To_NominationPools_Noop(param),
		}
	case 1:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewBouncerSet{
			NewBouncerSet: To_NominationPools_Set(param),
		}
	case 2:
		return &pbgear.NominationPools_UpdateRolesCall_310_NewBouncerRemove{
			NewBouncerRemove: To_NominationPools_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_WithdrawUnbondedCall_310(in any) *pbgear.NominationPools_WithdrawUnbondedCall_310 {
	out := &pbgear.NominationPools_WithdrawUnbondedCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MemberAccount
	v0 := To_OneOf_NominationPools_WithdrawUnbondedCall_310_member_account(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MemberAccount").Set(reflect.ValueOf(v0))
	// primitive field NumSlashingSpans
	out.NumSlashingSpans = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_NominationPools_WithdrawUnbondedCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_NominationPools_WithdrawUnbondedCall_310(in)
	out := &pbgearextrinsic.Extrinsic_NominationpoolsWithdrawUnbondedCall{}
	reflect.ValueOf(out).Elem().FieldByName("NominationpoolsWithdrawUnbondedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_NominationPools_WithdrawUnbondedCall_310_member_account(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_WithdrawUnbondedCall_310_MemberAccountId{
			MemberAccountId: To_NominationPools_Id(param),
		}
	case 1:
		return &pbgear.NominationPools_WithdrawUnbondedCall_310_MemberAccountIndex{
			MemberAccountIndex: To_NominationPools_Index(param),
		}
	case 2:
		return &pbgear.NominationPools_WithdrawUnbondedCall_310_MemberAccountRaw{
			MemberAccountRaw: To_NominationPools_Raw(param),
		}
	case 3:
		return &pbgear.NominationPools_WithdrawUnbondedCall_310_MemberAccountAddress32{
			MemberAccountAddress32: To_NominationPools_Address32(param),
		}
	case 4:
		return &pbgear.NominationPools_WithdrawUnbondedCall_310_MemberAccountAddress20{
			MemberAccountAddress20: To_NominationPools_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NonTransfer_1030(in any) *pbgear.NonTransfer_1030 {
	out := &pbgear.NonTransfer_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_None_100(in any) *pbgear.None_100 {
	out := &pbgear.None_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Normal_1030(in any) *pbgear.Normal_1030 {
	out := &pbgear.Normal_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NotExecuted_1030(in any) *pbgear.NotExecuted_1030 {
	out := &pbgear.NotExecuted_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NotExpendable_1030(in any) *pbgear.NotExpendable_1030 {
	out := &pbgear.NotExpendable_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_OffencesPallet_310(in any) *pbgear.OffencesPallet_310 {
	out := &pbgear.OffencesPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Ok_1030(in any) *pbgear.Ok_1030 {
	out := &pbgear.Ok_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_TupleNull(w)
	out.Value0 = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_OnlyProvider_1030(in any) *pbgear.OnlyProvider_1030 {
	out := &pbgear.OnlyProvider_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Operational_1030(in any) *pbgear.Operational_1030 {
	out := &pbgear.Operational_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_OriginsPallet_100(in any) *pbgear.OriginsPallet_100 {
	out := &pbgear.OriginsPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Other_1030(in any) *pbgear.Other_1030 {
	out := &pbgear.Other_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_OutOfRent_1030(in any) *pbgear.OutOfRent_1030 {
	out := &pbgear.OutOfRent_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Overflow_1030(in any) *pbgear.Overflow_1030 {
	out := &pbgear.Overflow_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Paused_1030(in any) *pbgear.Paused_1030 {
	out := &pbgear.Paused_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_PreimagePallet_100(in any) *pbgear.PreimagePallet_100 {
	out := &pbgear.PreimagePallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_PreimagePallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_PreimagePallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.PreimagePallet_100_CallNotePreimageCall{
			CallNotePreimageCall: To_Preimage_NotePreimageCall(param),
		}
	case 1:
		return &pbgear.PreimagePallet_100_CallUnnotePreimageCall{
			CallUnnotePreimageCall: To_Preimage_UnnotePreimageCall(param),
		}
	case 2:
		return &pbgear.PreimagePallet_100_CallRequestPreimageCall{
			CallRequestPreimageCall: To_Preimage_RequestPreimageCall(param),
		}
	case 3:
		return &pbgear.PreimagePallet_100_CallUnrequestPreimageCall{
			CallUnrequestPreimageCall: To_Preimage_UnrequestPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_PreimagePallet_140(in any) *pbgear.PreimagePallet_140 {
	out := &pbgear.PreimagePallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_PreimagePallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_PreimagePallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.PreimagePallet_140_CallNotePreimageCall{
			CallNotePreimageCall: To_Preimage_NotePreimageCall(param),
		}
	case 1:
		return &pbgear.PreimagePallet_140_CallUnnotePreimageCall{
			CallUnnotePreimageCall: To_Preimage_UnnotePreimageCall(param),
		}
	case 2:
		return &pbgear.PreimagePallet_140_CallRequestPreimageCall{
			CallRequestPreimageCall: To_Preimage_RequestPreimageCall(param),
		}
	case 3:
		return &pbgear.PreimagePallet_140_CallUnrequestPreimageCall{
			CallUnrequestPreimageCall: To_Preimage_UnrequestPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_PreimagePallet_310(in any) *pbgear.PreimagePallet_310 {
	out := &pbgear.PreimagePallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_PreimagePallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_PreimagePallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.PreimagePallet_310_CallNotePreimageCall{
			CallNotePreimageCall: To_Preimage_NotePreimageCall(param),
		}
	case 1:
		return &pbgear.PreimagePallet_310_CallUnnotePreimageCall{
			CallUnnotePreimageCall: To_Preimage_UnnotePreimageCall(param),
		}
	case 2:
		return &pbgear.PreimagePallet_310_CallRequestPreimageCall{
			CallRequestPreimageCall: To_Preimage_RequestPreimageCall(param),
		}
	case 3:
		return &pbgear.PreimagePallet_310_CallUnrequestPreimageCall{
			CallUnrequestPreimageCall: To_Preimage_UnrequestPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_PreimagePallet_1030(in any) *pbgear.PreimagePallet_1030 {
	out := &pbgear.PreimagePallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_PreimagePallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_PreimagePallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.PreimagePallet_1030_CallNotePreimageCall{
			CallNotePreimageCall: To_Preimage_NotePreimageCall(param),
		}
	case 1:
		return &pbgear.PreimagePallet_1030_CallUnnotePreimageCall{
			CallUnnotePreimageCall: To_Preimage_UnnotePreimageCall(param),
		}
	case 2:
		return &pbgear.PreimagePallet_1030_CallRequestPreimageCall{
			CallRequestPreimageCall: To_Preimage_RequestPreimageCall(param),
		}
	case 3:
		return &pbgear.PreimagePallet_1030_CallUnrequestPreimageCall{
			CallUnrequestPreimageCall: To_Preimage_UnrequestPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_PreimagePallet_1400(in any) *pbgear.PreimagePallet_1400 {
	out := &pbgear.PreimagePallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_PreimagePallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_PreimagePallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.PreimagePallet_1400_CallNotePreimageCall{
			CallNotePreimageCall: To_Preimage_NotePreimageCall(param),
		}
	case 1:
		return &pbgear.PreimagePallet_1400_CallUnnotePreimageCall{
			CallUnnotePreimageCall: To_Preimage_UnnotePreimageCall(param),
		}
	case 2:
		return &pbgear.PreimagePallet_1400_CallRequestPreimageCall{
			CallRequestPreimageCall: To_Preimage_RequestPreimageCall(param),
		}
	case 3:
		return &pbgear.PreimagePallet_1400_CallUnrequestPreimageCall{
			CallUnrequestPreimageCall: To_Preimage_UnrequestPreimageCall(param),
		}
	case 4:
		return &pbgear.PreimagePallet_1400_CallEnsureUpdatedCall{
			CallEnsureUpdatedCall: To_Preimage_EnsureUpdatedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_PreimagePallet_1410(in any) *pbgear.PreimagePallet_1410 {
	out := &pbgear.PreimagePallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_PreimagePallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_PreimagePallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.PreimagePallet_1410_CallNotePreimageCall{
			CallNotePreimageCall: To_Preimage_NotePreimageCall(param),
		}
	case 1:
		return &pbgear.PreimagePallet_1410_CallUnnotePreimageCall{
			CallUnnotePreimageCall: To_Preimage_UnnotePreimageCall(param),
		}
	case 2:
		return &pbgear.PreimagePallet_1410_CallRequestPreimageCall{
			CallRequestPreimageCall: To_Preimage_RequestPreimageCall(param),
		}
	case 3:
		return &pbgear.PreimagePallet_1410_CallUnrequestPreimageCall{
			CallUnrequestPreimageCall: To_Preimage_UnrequestPreimageCall(param),
		}
	case 4:
		return &pbgear.PreimagePallet_1410_CallEnsureUpdatedCall{
			CallEnsureUpdatedCall: To_Preimage_EnsureUpdatedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Preimage_EnsureUpdatedCall_1400(in any) *pbgear.Preimage_EnsureUpdatedCall_1400 {
	out := &pbgear.Preimage_EnsureUpdatedCall_1400{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Hashes
	out.Hashes = To_Repeated_Preimage_EnsureUpdatedCall_1400_hashes(v.ValueAt(0))

	return out //from message
}
func To_Preimage_EnsureUpdatedCall_1400_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Preimage_EnsureUpdatedCall_1400(in)
	out := &pbgearextrinsic.Extrinsic_PreimageEnsureUpdatedCall{}
	reflect.ValueOf(out).Elem().FieldByName("PreimageEnsureUpdatedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Preimage_EnsureUpdatedCall_1400_hashes(in any) []*pbgear.PrimitiveTypesH256 {
	items := in.([]interface{})

	var out []*pbgear.PrimitiveTypesH256
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_PrimitiveTypesH256(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Preimage_NotePreimageCall_100(in any) *pbgear.Preimage_NotePreimageCall_100 {
	out := &pbgear.Preimage_NotePreimageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Bytes
	out.Bytes = To_bytes(v.ValueAt(0))

	return out //from message
}
func To_Preimage_NotePreimageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Preimage_NotePreimageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_PreimageNotePreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("PreimageNotePreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Preimage_RequestPreimageCall_100(in any) *pbgear.Preimage_RequestPreimageCall_100 {
	out := &pbgear.Preimage_RequestPreimageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}
func To_Preimage_RequestPreimageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Preimage_RequestPreimageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_PreimageRequestPreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("PreimageRequestPreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Preimage_UnnotePreimageCall_100(in any) *pbgear.Preimage_UnnotePreimageCall_100 {
	out := &pbgear.Preimage_UnnotePreimageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}
func To_Preimage_UnnotePreimageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Preimage_UnnotePreimageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_PreimageUnnotePreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("PreimageUnnotePreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Preimage_UnrequestPreimageCall_100(in any) *pbgear.Preimage_UnrequestPreimageCall_100 {
	out := &pbgear.Preimage_UnrequestPreimageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}
func To_Preimage_UnrequestPreimageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Preimage_UnrequestPreimageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_PreimageUnrequestPreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("PreimageUnrequestPreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ProgramGotInitialized_1030(in any) *pbgear.ProgramGotInitialized_1030 {
	out := &pbgear.ProgramGotInitialized_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ProgramIsNotInitialized_1030(in any) *pbgear.ProgramIsNotInitialized_1030 {
	out := &pbgear.ProgramIsNotInitialized_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ProgramSet_1030(in any) *pbgear.ProgramSet_1030 {
	out := &pbgear.ProgramSet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Expiration
	out.Expiration = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Proxy_Address20_210(in any) *pbgear.Proxy_Address20_210 {
	out := &pbgear.Proxy_Address20_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Proxy_Address32_210(in any) *pbgear.Proxy_Address32_210 {
	out := &pbgear.Proxy_Address32_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Proxy_Any_210(in any) *pbgear.Proxy_Any_210 {
	out := &pbgear.Proxy_Any_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Proxy_CancelProxy_210(in any) *pbgear.Proxy_CancelProxy_210 {
	out := &pbgear.Proxy_CancelProxy_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Proxy_Governance_210(in any) *pbgear.Proxy_Governance_210 {
	out := &pbgear.Proxy_Governance_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Proxy_Id_210(in any) *pbgear.Proxy_Id_210 {
	out := &pbgear.Proxy_Id_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Proxy_IdentityJudgement_210(in any) *pbgear.Proxy_IdentityJudgement_210 {
	out := &pbgear.Proxy_IdentityJudgement_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Proxy_Index_210(in any) *pbgear.Proxy_Index_210 {
	out := &pbgear.Proxy_Index_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Proxy_TupleNull(w)
	out.Value0 = To_Proxy_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Proxy_NonTransfer_210(in any) *pbgear.Proxy_NonTransfer_210 {
	out := &pbgear.Proxy_NonTransfer_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Proxy_Raw_210(in any) *pbgear.Proxy_Raw_210 {
	out := &pbgear.Proxy_Raw_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Proxy_Staking_210(in any) *pbgear.Proxy_Staking_210 {
	out := &pbgear.Proxy_Staking_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Proxy_TupleNull_210(in any) *pbgear.Proxy_TupleNull_210 {
	out := &pbgear.Proxy_TupleNull_210{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Proxy_TupleNull_310(in any) *pbgear.Proxy_TupleNull_310 {
	out := &pbgear.Proxy_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Proxy_TupleNull_1030(in any) *pbgear.Proxy_TupleNull_1030 {
	out := &pbgear.Proxy_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_ProxyPallet_210(in any) *pbgear.ProxyPallet_210 {
	out := &pbgear.ProxyPallet_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ProxyPallet_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyPallet_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyPallet_210_CallProxyCall{
			CallProxyCall: To_Proxy_ProxyCall(param),
		}
	case 1:
		return &pbgear.ProxyPallet_210_CallAddProxyCall{
			CallAddProxyCall: To_Proxy_AddProxyCall(param),
		}
	case 2:
		return &pbgear.ProxyPallet_210_CallRemoveProxyCall{
			CallRemoveProxyCall: To_Proxy_RemoveProxyCall(param),
		}
	case 3:
		return &pbgear.ProxyPallet_210_CallRemoveProxiesCall{
			CallRemoveProxiesCall: To_Proxy_RemoveProxiesCall(param),
		}
	case 4:
		return &pbgear.ProxyPallet_210_CallCreatePureCall{
			CallCreatePureCall: To_Proxy_CreatePureCall(param),
		}
	case 5:
		return &pbgear.ProxyPallet_210_CallKillPureCall{
			CallKillPureCall: To_Proxy_KillPureCall(param),
		}
	case 6:
		return &pbgear.ProxyPallet_210_CallAnnounceCall{
			CallAnnounceCall: To_Proxy_AnnounceCall(param),
		}
	case 7:
		return &pbgear.ProxyPallet_210_CallRemoveAnnouncementCall{
			CallRemoveAnnouncementCall: To_Proxy_RemoveAnnouncementCall(param),
		}
	case 8:
		return &pbgear.ProxyPallet_210_CallRejectAnnouncementCall{
			CallRejectAnnouncementCall: To_Proxy_RejectAnnouncementCall(param),
		}
	case 9:
		return &pbgear.ProxyPallet_210_CallProxyAnnouncedCall{
			CallProxyAnnouncedCall: To_Proxy_ProxyAnnouncedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyPallet_310(in any) *pbgear.ProxyPallet_310 {
	out := &pbgear.ProxyPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ProxyPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyPallet_310_CallProxyCall{
			CallProxyCall: To_Proxy_ProxyCall(param),
		}
	case 1:
		return &pbgear.ProxyPallet_310_CallAddProxyCall{
			CallAddProxyCall: To_Proxy_AddProxyCall(param),
		}
	case 2:
		return &pbgear.ProxyPallet_310_CallRemoveProxyCall{
			CallRemoveProxyCall: To_Proxy_RemoveProxyCall(param),
		}
	case 3:
		return &pbgear.ProxyPallet_310_CallRemoveProxiesCall{
			CallRemoveProxiesCall: To_Proxy_RemoveProxiesCall(param),
		}
	case 4:
		return &pbgear.ProxyPallet_310_CallCreatePureCall{
			CallCreatePureCall: To_Proxy_CreatePureCall(param),
		}
	case 5:
		return &pbgear.ProxyPallet_310_CallKillPureCall{
			CallKillPureCall: To_Proxy_KillPureCall(param),
		}
	case 6:
		return &pbgear.ProxyPallet_310_CallAnnounceCall{
			CallAnnounceCall: To_Proxy_AnnounceCall(param),
		}
	case 7:
		return &pbgear.ProxyPallet_310_CallRemoveAnnouncementCall{
			CallRemoveAnnouncementCall: To_Proxy_RemoveAnnouncementCall(param),
		}
	case 8:
		return &pbgear.ProxyPallet_310_CallRejectAnnouncementCall{
			CallRejectAnnouncementCall: To_Proxy_RejectAnnouncementCall(param),
		}
	case 9:
		return &pbgear.ProxyPallet_310_CallProxyAnnouncedCall{
			CallProxyAnnouncedCall: To_Proxy_ProxyAnnouncedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyPallet_1030(in any) *pbgear.ProxyPallet_1030 {
	out := &pbgear.ProxyPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ProxyPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyPallet_1030_CallProxyCall{
			CallProxyCall: To_Proxy_ProxyCall(param),
		}
	case 1:
		return &pbgear.ProxyPallet_1030_CallAddProxyCall{
			CallAddProxyCall: To_Proxy_AddProxyCall(param),
		}
	case 2:
		return &pbgear.ProxyPallet_1030_CallRemoveProxyCall{
			CallRemoveProxyCall: To_Proxy_RemoveProxyCall(param),
		}
	case 3:
		return &pbgear.ProxyPallet_1030_CallRemoveProxiesCall{
			CallRemoveProxiesCall: To_Proxy_RemoveProxiesCall(param),
		}
	case 4:
		return &pbgear.ProxyPallet_1030_CallCreatePureCall{
			CallCreatePureCall: To_Proxy_CreatePureCall(param),
		}
	case 5:
		return &pbgear.ProxyPallet_1030_CallKillPureCall{
			CallKillPureCall: To_Proxy_KillPureCall(param),
		}
	case 6:
		return &pbgear.ProxyPallet_1030_CallAnnounceCall{
			CallAnnounceCall: To_Proxy_AnnounceCall(param),
		}
	case 7:
		return &pbgear.ProxyPallet_1030_CallRemoveAnnouncementCall{
			CallRemoveAnnouncementCall: To_Proxy_RemoveAnnouncementCall(param),
		}
	case 8:
		return &pbgear.ProxyPallet_1030_CallRejectAnnouncementCall{
			CallRejectAnnouncementCall: To_Proxy_RejectAnnouncementCall(param),
		}
	case 9:
		return &pbgear.ProxyPallet_1030_CallProxyAnnouncedCall{
			CallProxyAnnouncedCall: To_Proxy_ProxyAnnouncedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyPallet_1040(in any) *pbgear.ProxyPallet_1040 {
	out := &pbgear.ProxyPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ProxyPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyPallet_1040_CallProxyCall{
			CallProxyCall: To_Proxy_ProxyCall(param),
		}
	case 1:
		return &pbgear.ProxyPallet_1040_CallAddProxyCall{
			CallAddProxyCall: To_Proxy_AddProxyCall(param),
		}
	case 2:
		return &pbgear.ProxyPallet_1040_CallRemoveProxyCall{
			CallRemoveProxyCall: To_Proxy_RemoveProxyCall(param),
		}
	case 3:
		return &pbgear.ProxyPallet_1040_CallRemoveProxiesCall{
			CallRemoveProxiesCall: To_Proxy_RemoveProxiesCall(param),
		}
	case 4:
		return &pbgear.ProxyPallet_1040_CallCreatePureCall{
			CallCreatePureCall: To_Proxy_CreatePureCall(param),
		}
	case 5:
		return &pbgear.ProxyPallet_1040_CallKillPureCall{
			CallKillPureCall: To_Proxy_KillPureCall(param),
		}
	case 6:
		return &pbgear.ProxyPallet_1040_CallAnnounceCall{
			CallAnnounceCall: To_Proxy_AnnounceCall(param),
		}
	case 7:
		return &pbgear.ProxyPallet_1040_CallRemoveAnnouncementCall{
			CallRemoveAnnouncementCall: To_Proxy_RemoveAnnouncementCall(param),
		}
	case 8:
		return &pbgear.ProxyPallet_1040_CallRejectAnnouncementCall{
			CallRejectAnnouncementCall: To_Proxy_RejectAnnouncementCall(param),
		}
	case 9:
		return &pbgear.ProxyPallet_1040_CallProxyAnnouncedCall{
			CallProxyAnnouncedCall: To_Proxy_ProxyAnnouncedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyPallet_1400(in any) *pbgear.ProxyPallet_1400 {
	out := &pbgear.ProxyPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ProxyPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyPallet_1400_CallProxyCall{
			CallProxyCall: To_Proxy_ProxyCall(param),
		}
	case 1:
		return &pbgear.ProxyPallet_1400_CallAddProxyCall{
			CallAddProxyCall: To_Proxy_AddProxyCall(param),
		}
	case 2:
		return &pbgear.ProxyPallet_1400_CallRemoveProxyCall{
			CallRemoveProxyCall: To_Proxy_RemoveProxyCall(param),
		}
	case 3:
		return &pbgear.ProxyPallet_1400_CallRemoveProxiesCall{
			CallRemoveProxiesCall: To_Proxy_RemoveProxiesCall(param),
		}
	case 4:
		return &pbgear.ProxyPallet_1400_CallCreatePureCall{
			CallCreatePureCall: To_Proxy_CreatePureCall(param),
		}
	case 5:
		return &pbgear.ProxyPallet_1400_CallKillPureCall{
			CallKillPureCall: To_Proxy_KillPureCall(param),
		}
	case 6:
		return &pbgear.ProxyPallet_1400_CallAnnounceCall{
			CallAnnounceCall: To_Proxy_AnnounceCall(param),
		}
	case 7:
		return &pbgear.ProxyPallet_1400_CallRemoveAnnouncementCall{
			CallRemoveAnnouncementCall: To_Proxy_RemoveAnnouncementCall(param),
		}
	case 8:
		return &pbgear.ProxyPallet_1400_CallRejectAnnouncementCall{
			CallRejectAnnouncementCall: To_Proxy_RejectAnnouncementCall(param),
		}
	case 9:
		return &pbgear.ProxyPallet_1400_CallProxyAnnouncedCall{
			CallProxyAnnouncedCall: To_Proxy_ProxyAnnouncedCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_AddProxyCall_210(in any) *pbgear.Proxy_AddProxyCall_210 {
	out := &pbgear.Proxy_AddProxyCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_AddProxyCall_210_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))
	// oneOf field ProxyType
	v1 := To_OneOf_Proxy_AddProxyCall_210_proxy_type(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v1))
	// primitive field Delay
	out.Delay = To_uint32(v.ValueAt(2))

	return out //from message
}
func To_Proxy_AddProxyCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_AddProxyCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyAddProxyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyAddProxyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_AddProxyCall_210_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_AddProxyCall_210_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_AddProxyCall_210_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_AddProxyCall_210_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_AddProxyCall_210_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_AddProxyCall_210_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_AddProxyCall_210_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_AddProxyCall_210_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_AddProxyCall_210_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_AddProxyCall_210_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_AddProxyCall_210_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_AddProxyCall_210_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_AddProxyCall_210_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_AnnounceCall_210(in any) *pbgear.Proxy_AnnounceCall_210 {
	out := &pbgear.Proxy_AnnounceCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_AnnounceCall_210_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))
	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(1))

	return out //from message
}
func To_Proxy_AnnounceCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_AnnounceCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyAnnounceCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyAnnounceCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_AnnounceCall_210_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_AnnounceCall_210_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_AnnounceCall_210_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_AnnounceCall_210_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_AnnounceCall_210_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_AnnounceCall_210_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Proxy_CreatePureCall_210(in any) *pbgear.Proxy_CreatePureCall_210 {
	out := &pbgear.Proxy_CreatePureCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_Proxy_CreatePureCall_210_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))
	// primitive field Delay
	out.Delay = To_uint32(v.ValueAt(1))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(2))

	return out //from message
}
func To_Proxy_CreatePureCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_CreatePureCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyCreatePureCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyCreatePureCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_CreatePureCall_210_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_CreatePureCall_210_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_CreatePureCall_210_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_CreatePureCall_210_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_CreatePureCall_210_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_CreatePureCall_210_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_CreatePureCall_210_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Delegate_210(in any) *pbgear.Proxy_Delegate_210 {
	out := &pbgear.Proxy_Delegate_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_Delegate_210_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Delegate_210_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Delegate_210_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Delegate_210_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Delegate_210_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Delegate_210_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Delegate_210_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Delegate_310(in any) *pbgear.Proxy_Delegate_310 {
	out := &pbgear.Proxy_Delegate_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_Delegate_310_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Delegate_310_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Delegate_310_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Delegate_310_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Delegate_310_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Delegate_310_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Delegate_310_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Delegate_1030(in any) *pbgear.Proxy_Delegate_1030 {
	out := &pbgear.Proxy_Delegate_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_Delegate_1030_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Delegate_1030_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Delegate_1030_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Delegate_1030_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Delegate_1030_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Delegate_1030_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Delegate_1030_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ForceProxyType_210(in any) *pbgear.Proxy_ForceProxyType_210 {
	out := &pbgear.Proxy_ForceProxyType_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ForceProxyType
	v0 := To_OneOf_Proxy_ForceProxyType_210_force_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ForceProxyType_210_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ForceProxyType_210_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ForceProxyType_210_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ForceProxyType_210_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ForceProxyType_210_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ForceProxyType_210_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ForceProxyType_210_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ForceProxyType_310(in any) *pbgear.Proxy_ForceProxyType_310 {
	out := &pbgear.Proxy_ForceProxyType_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ForceProxyType
	v0 := To_OneOf_Proxy_ForceProxyType_310_force_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ForceProxyType_310_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ForceProxyType_310_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ForceProxyType_310_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ForceProxyType_310_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ForceProxyType_310_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ForceProxyType_310_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ForceProxyType_310_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ForceProxyType_1030(in any) *pbgear.Proxy_ForceProxyType_1030 {
	out := &pbgear.Proxy_ForceProxyType_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ForceProxyType
	v0 := To_OneOf_Proxy_ForceProxyType_1030_force_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ForceProxyType_1030_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ForceProxyType_1030_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ForceProxyType_1030_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ForceProxyType_1030_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ForceProxyType_1030_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ForceProxyType_1030_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ForceProxyType_1030_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ForceProxyType_1040(in any) *pbgear.Proxy_ForceProxyType_1040 {
	out := &pbgear.Proxy_ForceProxyType_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ForceProxyType
	v0 := To_OneOf_Proxy_ForceProxyType_1040_force_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ForceProxyType_1040_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ForceProxyType_1040_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ForceProxyType_1040_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ForceProxyType_1040_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ForceProxyType_1040_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ForceProxyType_1040_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ForceProxyType_1040_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ForceProxyType_1400(in any) *pbgear.Proxy_ForceProxyType_1400 {
	out := &pbgear.Proxy_ForceProxyType_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ForceProxyType
	v0 := To_OneOf_Proxy_ForceProxyType_1400_force_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ForceProxyType_1400_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ForceProxyType_1400_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ForceProxyType_1400_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ForceProxyType_1400_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ForceProxyType_1400_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ForceProxyType_1400_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ForceProxyType_1400_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_KillPureCall_210(in any) *pbgear.Proxy_KillPureCall_210 {
	out := &pbgear.Proxy_KillPureCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Spawner
	v0 := To_OneOf_Proxy_KillPureCall_210_spawner(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Spawner").Set(reflect.ValueOf(v0))
	// oneOf field ProxyType
	v1 := To_OneOf_Proxy_KillPureCall_210_proxy_type(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v1))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(2))
	// primitive field Height
	out.Height = To_uint32(v.ValueAt(3))
	// primitive field ExtIndex
	out.ExtIndex = To_uint32(v.ValueAt(4))

	return out //from message
}
func To_Proxy_KillPureCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_KillPureCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyKillPureCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyKillPureCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_KillPureCall_210_spawner(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_KillPureCall_210_SpawnerId{
			SpawnerId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_KillPureCall_210_SpawnerIndex{
			SpawnerIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_KillPureCall_210_SpawnerRaw{
			SpawnerRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_KillPureCall_210_SpawnerAddress32{
			SpawnerAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_KillPureCall_210_SpawnerAddress20{
			SpawnerAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_KillPureCall_210_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_KillPureCall_210_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_KillPureCall_210_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_KillPureCall_210_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_KillPureCall_210_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_KillPureCall_210_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_KillPureCall_210_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyAnnouncedCall_210(in any) *pbgear.Proxy_ProxyAnnouncedCall_210 {
	out := &pbgear.Proxy_ProxyAnnouncedCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_ProxyAnnouncedCall_210_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))
	// oneOf field Real
	v1 := To_OneOf_Proxy_ProxyAnnouncedCall_210_real(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v1))
	// oneOf field ForceProxyType
	v2 := To_OneOf_Proxy_ProxyAnnouncedCall_210_force_proxy_type(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v2))
	// oneOf field Call
	v3 := To_OneOf_Proxy_ProxyAnnouncedCall_210_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Proxy_ProxyAnnouncedCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_ProxyAnnouncedCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyProxyAnnouncedCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyProxyAnnouncedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_ProxyAnnouncedCall_210_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_210_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_210_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Proxy_ProxyAnnouncedCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyAnnouncedCall_310(in any) *pbgear.Proxy_ProxyAnnouncedCall_310 {
	out := &pbgear.Proxy_ProxyAnnouncedCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_ProxyAnnouncedCall_310_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))
	// oneOf field Real
	v1 := To_OneOf_Proxy_ProxyAnnouncedCall_310_real(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v1))
	// oneOf field ForceProxyType
	v2 := To_OneOf_Proxy_ProxyAnnouncedCall_310_force_proxy_type(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v2))
	// oneOf field Call
	v3 := To_OneOf_Proxy_ProxyAnnouncedCall_310_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Proxy_ProxyAnnouncedCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_ProxyAnnouncedCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ProxyProxyAnnouncedCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyProxyAnnouncedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_ProxyAnnouncedCall_310_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_310_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_310_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Proxy_ProxyAnnouncedCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyAnnouncedCall_1000(in any) *pbgear.Proxy_ProxyAnnouncedCall_1000 {
	out := &pbgear.Proxy_ProxyAnnouncedCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_ProxyAnnouncedCall_1000_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))
	// oneOf field Real
	v1 := To_OneOf_Proxy_ProxyAnnouncedCall_1000_real(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v1))
	// oneOf field ForceProxyType
	v2 := To_OneOf_Proxy_ProxyAnnouncedCall_1000_force_proxy_type(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v2))
	// oneOf field Call
	v3 := To_OneOf_Proxy_ProxyAnnouncedCall_1000_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Proxy_ProxyAnnouncedCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_ProxyAnnouncedCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_ProxyProxyAnnouncedCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyProxyAnnouncedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_ProxyAnnouncedCall_1000_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_1000_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_1000_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyAnnouncedCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Proxy_ProxyAnnouncedCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyCall_210(in any) *pbgear.Proxy_ProxyCall_210 {
	out := &pbgear.Proxy_ProxyCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_ProxyCall_210_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))
	// oneOf field ForceProxyType
	v1 := To_OneOf_Proxy_ProxyCall_210_force_proxy_type(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v1))
	// oneOf field Call
	v2 := To_OneOf_Proxy_ProxyCall_210_call(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v2))

	return out //from message
}
func To_Proxy_ProxyCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_ProxyCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyProxyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyProxyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_ProxyCall_210_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_210_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_210_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyCall_210_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_210_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_210_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyCall_210_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_210_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_210_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyCall_210_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_210_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_210_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyCall_210_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Proxy_ProxyCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Proxy_ProxyCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Proxy_ProxyCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Proxy_ProxyCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Proxy_ProxyCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Proxy_ProxyCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Proxy_ProxyCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Proxy_ProxyCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Proxy_ProxyCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Proxy_ProxyCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Proxy_ProxyCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Proxy_ProxyCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Proxy_ProxyCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Proxy_ProxyCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Proxy_ProxyCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Proxy_ProxyCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Proxy_ProxyCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Proxy_ProxyCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Proxy_ProxyCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Proxy_ProxyCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Proxy_ProxyCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Proxy_ProxyCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Proxy_ProxyCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyCall_310(in any) *pbgear.Proxy_ProxyCall_310 {
	out := &pbgear.Proxy_ProxyCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_ProxyCall_310_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))
	// oneOf field ForceProxyType
	v1 := To_OneOf_Proxy_ProxyCall_310_force_proxy_type(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v1))
	// oneOf field Call
	v2 := To_OneOf_Proxy_ProxyCall_310_call(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v2))

	return out //from message
}
func To_Proxy_ProxyCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_ProxyCall_310(in)
	out := &pbgearextrinsic.Extrinsic_ProxyProxyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyProxyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_ProxyCall_310_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_310_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_310_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyCall_310_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_310_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_310_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyCall_310_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_310_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_310_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyCall_310_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_310_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_310_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyCall_310_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Proxy_ProxyCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Proxy_ProxyCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Proxy_ProxyCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Proxy_ProxyCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Proxy_ProxyCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Proxy_ProxyCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Proxy_ProxyCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Proxy_ProxyCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Proxy_ProxyCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Proxy_ProxyCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Proxy_ProxyCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Proxy_ProxyCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Proxy_ProxyCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Proxy_ProxyCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Proxy_ProxyCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Proxy_ProxyCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Proxy_ProxyCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Proxy_ProxyCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Proxy_ProxyCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Proxy_ProxyCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Proxy_ProxyCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Proxy_ProxyCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Proxy_ProxyCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Proxy_ProxyCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Proxy_ProxyCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Proxy_ProxyCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyCall_1000(in any) *pbgear.Proxy_ProxyCall_1000 {
	out := &pbgear.Proxy_ProxyCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_ProxyCall_1000_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))
	// oneOf field ForceProxyType
	v1 := To_OneOf_Proxy_ProxyCall_1000_force_proxy_type(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("ForceProxyType").Set(reflect.ValueOf(v1))
	// oneOf field Call
	v2 := To_OneOf_Proxy_ProxyCall_1000_call(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v2))

	return out //from message
}
func To_Proxy_ProxyCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_ProxyCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_ProxyProxyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyProxyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_ProxyCall_1000_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_1000_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_1000_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyCall_1000_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_1000_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_1000_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyCall_1000_force_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_1000_ForceProxyTypeAny{
			ForceProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_1000_ForceProxyTypeNonTransfer{
			ForceProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyCall_1000_ForceProxyTypeGovernance{
			ForceProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_1000_ForceProxyTypeStaking{
			ForceProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_1000_ForceProxyTypeIdentityJudgement{
			ForceProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyCall_1000_ForceProxyTypeCancelProxy{
			ForceProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_ProxyCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Proxy_ProxyCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Proxy_ProxyCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Proxy_ProxyCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Proxy_ProxyCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Proxy_ProxyCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Proxy_ProxyCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Proxy_ProxyCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Proxy_ProxyCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Proxy_ProxyCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Proxy_ProxyCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Proxy_ProxyCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Proxy_ProxyCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Proxy_ProxyCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Proxy_ProxyCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Proxy_ProxyCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Proxy_ProxyCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Proxy_ProxyCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Proxy_ProxyCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Proxy_ProxyCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Proxy_ProxyCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Proxy_ProxyCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Proxy_ProxyCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Proxy_ProxyCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Proxy_ProxyCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyType_210(in any) *pbgear.Proxy_ProxyType_210 {
	out := &pbgear.Proxy_ProxyType_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_Proxy_ProxyType_210_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ProxyType_210_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyType_210_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyType_210_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyType_210_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyType_210_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyType_210_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyType_210_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyType_310(in any) *pbgear.Proxy_ProxyType_310 {
	out := &pbgear.Proxy_ProxyType_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_Proxy_ProxyType_310_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ProxyType_310_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyType_310_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyType_310_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyType_310_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyType_310_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyType_310_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyType_310_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyType_1030(in any) *pbgear.Proxy_ProxyType_1030 {
	out := &pbgear.Proxy_ProxyType_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_Proxy_ProxyType_1030_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ProxyType_1030_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyType_1030_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyType_1030_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyType_1030_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyType_1030_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyType_1030_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyType_1030_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyType_1040(in any) *pbgear.Proxy_ProxyType_1040 {
	out := &pbgear.Proxy_ProxyType_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_Proxy_ProxyType_1040_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ProxyType_1040_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyType_1040_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyType_1040_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyType_1040_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyType_1040_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyType_1040_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyType_1040_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_ProxyType_1400(in any) *pbgear.Proxy_ProxyType_1400 {
	out := &pbgear.Proxy_ProxyType_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_Proxy_ProxyType_1400_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_ProxyType_1400_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_ProxyType_1400_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_ProxyType_1400_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_ProxyType_1400_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_ProxyType_1400_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_ProxyType_1400_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_ProxyType_1400_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Real_210(in any) *pbgear.Proxy_Real_210 {
	out := &pbgear.Proxy_Real_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_Real_210_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Real_210_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Real_210_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Real_210_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Real_210_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Real_210_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Real_210_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Real_310(in any) *pbgear.Proxy_Real_310 {
	out := &pbgear.Proxy_Real_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_Real_310_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Real_310_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Real_310_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Real_310_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Real_310_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Real_310_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Real_310_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Real_1030(in any) *pbgear.Proxy_Real_1030 {
	out := &pbgear.Proxy_Real_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_Real_1030_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Real_1030_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Real_1030_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Real_1030_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Real_1030_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Real_1030_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Real_1030_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_RejectAnnouncementCall_210(in any) *pbgear.Proxy_RejectAnnouncementCall_210 {
	out := &pbgear.Proxy_RejectAnnouncementCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_RejectAnnouncementCall_210_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))
	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(1))

	return out //from message
}
func To_Proxy_RejectAnnouncementCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_RejectAnnouncementCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyRejectAnnouncementCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyRejectAnnouncementCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_RejectAnnouncementCall_210_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_RejectAnnouncementCall_210_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_RejectAnnouncementCall_210_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_RejectAnnouncementCall_210_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_RejectAnnouncementCall_210_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_RejectAnnouncementCall_210_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Proxy_RemoveAnnouncementCall_210(in any) *pbgear.Proxy_RemoveAnnouncementCall_210 {
	out := &pbgear.Proxy_RemoveAnnouncementCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Real
	v0 := To_OneOf_Proxy_RemoveAnnouncementCall_210_real(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Real").Set(reflect.ValueOf(v0))
	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(1))

	return out //from message
}
func To_Proxy_RemoveAnnouncementCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_RemoveAnnouncementCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyRemoveAnnouncementCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyRemoveAnnouncementCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_RemoveAnnouncementCall_210_real(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_RemoveAnnouncementCall_210_RealId{
			RealId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_RemoveAnnouncementCall_210_RealIndex{
			RealIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_RemoveAnnouncementCall_210_RealRaw{
			RealRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_RemoveAnnouncementCall_210_RealAddress32{
			RealAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_RemoveAnnouncementCall_210_RealAddress20{
			RealAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Proxy_RemoveProxiesCall_210(in any) *pbgear.Proxy_RemoveProxiesCall_210 {
	out := &pbgear.Proxy_RemoveProxiesCall_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Proxy_RemoveProxyCall_210(in any) *pbgear.Proxy_RemoveProxyCall_210 {
	out := &pbgear.Proxy_RemoveProxyCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Delegate
	v0 := To_OneOf_Proxy_RemoveProxyCall_210_delegate(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Delegate").Set(reflect.ValueOf(v0))
	// oneOf field ProxyType
	v1 := To_OneOf_Proxy_RemoveProxyCall_210_proxy_type(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v1))
	// primitive field Delay
	out.Delay = To_uint32(v.ValueAt(2))

	return out //from message
}
func To_Proxy_RemoveProxyCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Proxy_RemoveProxyCall_210(in)
	out := &pbgearextrinsic.Extrinsic_ProxyRemoveProxyCall{}
	reflect.ValueOf(out).Elem().FieldByName("ProxyRemoveProxyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Proxy_RemoveProxyCall_210_delegate(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_RemoveProxyCall_210_DelegateId{
			DelegateId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_RemoveProxyCall_210_DelegateIndex{
			DelegateIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_RemoveProxyCall_210_DelegateRaw{
			DelegateRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_RemoveProxyCall_210_DelegateAddress32{
			DelegateAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_RemoveProxyCall_210_DelegateAddress20{
			DelegateAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Proxy_RemoveProxyCall_210_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_RemoveProxyCall_210_ProxyTypeAny{
			ProxyTypeAny: To_Proxy_Any(param),
		}
	case 1:
		return &pbgear.Proxy_RemoveProxyCall_210_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_Proxy_NonTransfer(param),
		}
	case 2:
		return &pbgear.Proxy_RemoveProxyCall_210_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Proxy_Governance(param),
		}
	case 3:
		return &pbgear.Proxy_RemoveProxyCall_210_ProxyTypeStaking{
			ProxyTypeStaking: To_Proxy_Staking(param),
		}
	case 4:
		return &pbgear.Proxy_RemoveProxyCall_210_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_Proxy_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.Proxy_RemoveProxyCall_210_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_Proxy_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Spawner_210(in any) *pbgear.Proxy_Spawner_210 {
	out := &pbgear.Proxy_Spawner_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Spawner
	v0 := To_OneOf_Proxy_Spawner_210_spawner(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Spawner").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Spawner_210_spawner(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Spawner_210_SpawnerId{
			SpawnerId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Spawner_210_SpawnerIndex{
			SpawnerIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Spawner_210_SpawnerRaw{
			SpawnerRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Spawner_210_SpawnerAddress32{
			SpawnerAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Spawner_210_SpawnerAddress20{
			SpawnerAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Spawner_310(in any) *pbgear.Proxy_Spawner_310 {
	out := &pbgear.Proxy_Spawner_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Spawner
	v0 := To_OneOf_Proxy_Spawner_310_spawner(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Spawner").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Spawner_310_spawner(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Spawner_310_SpawnerId{
			SpawnerId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Spawner_310_SpawnerIndex{
			SpawnerIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Spawner_310_SpawnerRaw{
			SpawnerRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Spawner_310_SpawnerAddress32{
			SpawnerAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Spawner_310_SpawnerAddress20{
			SpawnerAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proxy_Spawner_1030(in any) *pbgear.Proxy_Spawner_1030 {
	out := &pbgear.Proxy_Spawner_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Spawner
	v0 := To_OneOf_Proxy_Spawner_1030_spawner(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Spawner").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proxy_Spawner_1030_spawner(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proxy_Spawner_1030_SpawnerId{
			SpawnerId: To_Proxy_Id(param),
		}
	case 1:
		return &pbgear.Proxy_Spawner_1030_SpawnerIndex{
			SpawnerIndex: To_Proxy_Index(param),
		}
	case 2:
		return &pbgear.Proxy_Spawner_1030_SpawnerRaw{
			SpawnerRaw: To_Proxy_Raw(param),
		}
	case 3:
		return &pbgear.Proxy_Spawner_1030_SpawnerAddress32{
			SpawnerAddress32: To_Proxy_Address32(param),
		}
	case 4:
		return &pbgear.Proxy_Spawner_1030_SpawnerAddress20{
			SpawnerAddress20: To_Proxy_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_RanOutOfGas_1030(in any) *pbgear.RanOutOfGas_1030 {
	out := &pbgear.RanOutOfGas_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Referenda_After_100(in any) *pbgear.Referenda_After_100 {
	out := &pbgear.Referenda_After_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Referenda_At_100(in any) *pbgear.Referenda_At_100 {
	out := &pbgear.Referenda_At_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Referenda_ConsensusEvent_140(in any) *pbgear.Referenda_ConsensusEvent_140 {
	out := &pbgear.Referenda_ConsensusEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Referenda_Inline_100(in any) *pbgear.Referenda_Inline_100 {
	out := &pbgear.Referenda_Inline_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreBoundedBoundedVecBoundedVec(w)
	out.Value0 = To_SpCoreBoundedBoundedVecBoundedVec(v.ValueAt(0))

	return out //from message
}

func To_Referenda_Inline_140(in any) *pbgear.Referenda_Inline_140 {
	out := &pbgear.Referenda_Inline_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Value0 = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))

	return out //from message
}

func To_Referenda_Legacy_100(in any) *pbgear.Referenda_Legacy_100 {
	out := &pbgear.Referenda_Legacy_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_Referenda_Lookup_100(in any) *pbgear.Referenda_Lookup_100 {
	out := &pbgear.Referenda_Lookup_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Hash To_PrimitiveTypesH256(w)
	out.Hash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field Len
	out.Len = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Referenda_Origins_100(in any) *pbgear.Referenda_Origins_100 {
	out := &pbgear.Referenda_Origins_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Referenda_Origins_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Origins_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_Origins_100_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Referenda_Origins_100_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Referenda_Origins_100_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Referenda_Origins_100_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Referenda_Origins_100_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Referenda_Origins_100_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Referenda_Origins_100_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.Referenda_Origins_100_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.Referenda_Origins_100_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.Referenda_Origins_100_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.Referenda_Origins_100_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_Origins_130(in any) *pbgear.Referenda_Origins_130 {
	out := &pbgear.Referenda_Origins_130{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Referenda_Origins_130_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Origins_130_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_Origins_130_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Referenda_Origins_130_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Referenda_Origins_130_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Referenda_Origins_130_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Referenda_Origins_130_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Referenda_Origins_130_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Referenda_Origins_130_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.Referenda_Origins_130_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.Referenda_Origins_130_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.Referenda_Origins_130_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.Referenda_Origins_130_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 11:
		return &pbgear.Referenda_Origins_130_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 12:
		return &pbgear.Referenda_Origins_130_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 13:
		return &pbgear.Referenda_Origins_130_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 14:
		return &pbgear.Referenda_Origins_130_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 15:
		return &pbgear.Referenda_Origins_130_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 16:
		return &pbgear.Referenda_Origins_130_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 17:
		return &pbgear.Referenda_Origins_130_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 18:
		return &pbgear.Referenda_Origins_130_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 19:
		return &pbgear.Referenda_Origins_130_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_Origins_210(in any) *pbgear.Referenda_Origins_210 {
	out := &pbgear.Referenda_Origins_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Referenda_Origins_210_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Origins_210_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_Origins_210_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Referenda_Origins_210_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Referenda_Origins_210_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Referenda_Origins_210_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Referenda_Origins_210_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Referenda_Origins_210_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Referenda_Origins_210_Value0SmallTipper{
			Value0SmallTipper: To_SmallTipper(param),
		}
	case 7:
		return &pbgear.Referenda_Origins_210_Value0BigTipper{
			Value0BigTipper: To_BigTipper(param),
		}
	case 8:
		return &pbgear.Referenda_Origins_210_Value0SmallSpender{
			Value0SmallSpender: To_SmallSpender(param),
		}
	case 9:
		return &pbgear.Referenda_Origins_210_Value0MediumSpender{
			Value0MediumSpender: To_MediumSpender(param),
		}
	case 10:
		return &pbgear.Referenda_Origins_210_Value0BigSpender{
			Value0BigSpender: To_BigSpender(param),
		}
	case 11:
		return &pbgear.Referenda_Origins_210_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 12:
		return &pbgear.Referenda_Origins_210_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 13:
		return &pbgear.Referenda_Origins_210_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 14:
		return &pbgear.Referenda_Origins_210_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 15:
		return &pbgear.Referenda_Origins_210_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 16:
		return &pbgear.Referenda_Origins_210_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 17:
		return &pbgear.Referenda_Origins_210_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 18:
		return &pbgear.Referenda_Origins_210_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 19:
		return &pbgear.Referenda_Origins_210_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 20:
		return &pbgear.Referenda_Origins_210_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 21:
		return &pbgear.Referenda_Origins_210_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 22:
		return &pbgear.Referenda_Origins_210_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 23:
		return &pbgear.Referenda_Origins_210_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 24:
		return &pbgear.Referenda_Origins_210_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_OtherEvent_140(in any) *pbgear.Referenda_OtherEvent_140 {
	out := &pbgear.Referenda_OtherEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Referenda_PreRuntimeEvent_140(in any) *pbgear.Referenda_PreRuntimeEvent_140 {
	out := &pbgear.Referenda_PreRuntimeEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Referenda_RuntimeEnvironmentUpdatedEvent_140(in any) *pbgear.Referenda_RuntimeEnvironmentUpdatedEvent_140 {
	out := &pbgear.Referenda_RuntimeEnvironmentUpdatedEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Referenda_SealEvent_140(in any) *pbgear.Referenda_SealEvent_140 {
	out := &pbgear.Referenda_SealEvent_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Referenda_Void_100(in any) *pbgear.Referenda_Void_100 {
	out := &pbgear.Referenda_Void_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Referenda_Void_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Void_100_value0(in any) any {
	return nil
}
func To_ReferendaPallet_100(in any) *pbgear.ReferendaPallet_100 {
	out := &pbgear.ReferendaPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ReferendaPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ReferendaPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ReferendaPallet_100_CallSubmitCall{
			CallSubmitCall: To_Referenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.ReferendaPallet_100_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_Referenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.ReferendaPallet_100_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_Referenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.ReferendaPallet_100_CallCancelCall{
			CallCancelCall: To_Referenda_CancelCall(param),
		}
	case 4:
		return &pbgear.ReferendaPallet_100_CallKillCall{
			CallKillCall: To_Referenda_KillCall(param),
		}
	case 5:
		return &pbgear.ReferendaPallet_100_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_Referenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.ReferendaPallet_100_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_Referenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.ReferendaPallet_100_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_Referenda_RefundSubmissionDepositCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ReferendaPallet_140(in any) *pbgear.ReferendaPallet_140 {
	out := &pbgear.ReferendaPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ReferendaPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ReferendaPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ReferendaPallet_140_CallSubmitCall{
			CallSubmitCall: To_Referenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.ReferendaPallet_140_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_Referenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.ReferendaPallet_140_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_Referenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.ReferendaPallet_140_CallCancelCall{
			CallCancelCall: To_Referenda_CancelCall(param),
		}
	case 4:
		return &pbgear.ReferendaPallet_140_CallKillCall{
			CallKillCall: To_Referenda_KillCall(param),
		}
	case 5:
		return &pbgear.ReferendaPallet_140_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_Referenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.ReferendaPallet_140_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_Referenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.ReferendaPallet_140_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_Referenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.ReferendaPallet_140_CallSetMetadataCall{
			CallSetMetadataCall: To_Referenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ReferendaPallet_310(in any) *pbgear.ReferendaPallet_310 {
	out := &pbgear.ReferendaPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ReferendaPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ReferendaPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ReferendaPallet_310_CallSubmitCall{
			CallSubmitCall: To_Referenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.ReferendaPallet_310_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_Referenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.ReferendaPallet_310_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_Referenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.ReferendaPallet_310_CallCancelCall{
			CallCancelCall: To_Referenda_CancelCall(param),
		}
	case 4:
		return &pbgear.ReferendaPallet_310_CallKillCall{
			CallKillCall: To_Referenda_KillCall(param),
		}
	case 5:
		return &pbgear.ReferendaPallet_310_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_Referenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.ReferendaPallet_310_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_Referenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.ReferendaPallet_310_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_Referenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.ReferendaPallet_310_CallSetMetadataCall{
			CallSetMetadataCall: To_Referenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ReferendaPallet_1030(in any) *pbgear.ReferendaPallet_1030 {
	out := &pbgear.ReferendaPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ReferendaPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ReferendaPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ReferendaPallet_1030_CallSubmitCall{
			CallSubmitCall: To_Referenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.ReferendaPallet_1030_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_Referenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.ReferendaPallet_1030_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_Referenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.ReferendaPallet_1030_CallCancelCall{
			CallCancelCall: To_Referenda_CancelCall(param),
		}
	case 4:
		return &pbgear.ReferendaPallet_1030_CallKillCall{
			CallKillCall: To_Referenda_KillCall(param),
		}
	case 5:
		return &pbgear.ReferendaPallet_1030_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_Referenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.ReferendaPallet_1030_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_Referenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.ReferendaPallet_1030_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_Referenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.ReferendaPallet_1030_CallSetMetadataCall{
			CallSetMetadataCall: To_Referenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ReferendaPallet_1040(in any) *pbgear.ReferendaPallet_1040 {
	out := &pbgear.ReferendaPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ReferendaPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ReferendaPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ReferendaPallet_1040_CallSubmitCall{
			CallSubmitCall: To_Referenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.ReferendaPallet_1040_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_Referenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.ReferendaPallet_1040_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_Referenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.ReferendaPallet_1040_CallCancelCall{
			CallCancelCall: To_Referenda_CancelCall(param),
		}
	case 4:
		return &pbgear.ReferendaPallet_1040_CallKillCall{
			CallKillCall: To_Referenda_KillCall(param),
		}
	case 5:
		return &pbgear.ReferendaPallet_1040_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_Referenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.ReferendaPallet_1040_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_Referenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.ReferendaPallet_1040_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_Referenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.ReferendaPallet_1040_CallSetMetadataCall{
			CallSetMetadataCall: To_Referenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ReferendaPallet_1410(in any) *pbgear.ReferendaPallet_1410 {
	out := &pbgear.ReferendaPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ReferendaPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ReferendaPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ReferendaPallet_1410_CallSubmitCall{
			CallSubmitCall: To_Referenda_SubmitCall(param),
		}
	case 1:
		return &pbgear.ReferendaPallet_1410_CallPlaceDecisionDepositCall{
			CallPlaceDecisionDepositCall: To_Referenda_PlaceDecisionDepositCall(param),
		}
	case 2:
		return &pbgear.ReferendaPallet_1410_CallRefundDecisionDepositCall{
			CallRefundDecisionDepositCall: To_Referenda_RefundDecisionDepositCall(param),
		}
	case 3:
		return &pbgear.ReferendaPallet_1410_CallCancelCall{
			CallCancelCall: To_Referenda_CancelCall(param),
		}
	case 4:
		return &pbgear.ReferendaPallet_1410_CallKillCall{
			CallKillCall: To_Referenda_KillCall(param),
		}
	case 5:
		return &pbgear.ReferendaPallet_1410_CallNudgeReferendumCall{
			CallNudgeReferendumCall: To_Referenda_NudgeReferendumCall(param),
		}
	case 6:
		return &pbgear.ReferendaPallet_1410_CallOneFewerDecidingCall{
			CallOneFewerDecidingCall: To_Referenda_OneFewerDecidingCall(param),
		}
	case 7:
		return &pbgear.ReferendaPallet_1410_CallRefundSubmissionDepositCall{
			CallRefundSubmissionDepositCall: To_Referenda_RefundSubmissionDepositCall(param),
		}
	case 8:
		return &pbgear.ReferendaPallet_1410_CallSetMetadataCall{
			CallSetMetadataCall: To_Referenda_SetMetadataCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_CancelCall_100(in any) *pbgear.Referenda_CancelCall_100 {
	out := &pbgear.Referenda_CancelCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Referenda_CancelCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_CancelCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaCancelCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaCancelCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Referenda_EnactmentMoment_100(in any) *pbgear.Referenda_EnactmentMoment_100 {
	out := &pbgear.Referenda_EnactmentMoment_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_Referenda_EnactmentMoment_100_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_EnactmentMoment_100_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_EnactmentMoment_100_EnactmentMomentAt{
			EnactmentMomentAt: To_Referenda_At(param),
		}
	case 1:
		return &pbgear.Referenda_EnactmentMoment_100_EnactmentMomentAfter{
			EnactmentMomentAfter: To_Referenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_EnactmentMoment_310(in any) *pbgear.Referenda_EnactmentMoment_310 {
	out := &pbgear.Referenda_EnactmentMoment_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_Referenda_EnactmentMoment_310_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_EnactmentMoment_310_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_EnactmentMoment_310_EnactmentMomentAt{
			EnactmentMomentAt: To_Referenda_At(param),
		}
	case 1:
		return &pbgear.Referenda_EnactmentMoment_310_EnactmentMomentAfter{
			EnactmentMomentAfter: To_Referenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_EnactmentMoment_1030(in any) *pbgear.Referenda_EnactmentMoment_1030 {
	out := &pbgear.Referenda_EnactmentMoment_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_Referenda_EnactmentMoment_1030_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_EnactmentMoment_1030_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_EnactmentMoment_1030_EnactmentMomentAt{
			EnactmentMomentAt: To_Referenda_At(param),
		}
	case 1:
		return &pbgear.Referenda_EnactmentMoment_1030_EnactmentMomentAfter{
			EnactmentMomentAfter: To_Referenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_EnactmentMoment_1410(in any) *pbgear.Referenda_EnactmentMoment_1410 {
	out := &pbgear.Referenda_EnactmentMoment_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field EnactmentMoment
	v0 := To_OneOf_Referenda_EnactmentMoment_1410_enactment_moment(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_EnactmentMoment_1410_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_EnactmentMoment_1410_EnactmentMomentAt{
			EnactmentMomentAt: To_Referenda_At(param),
		}
	case 1:
		return &pbgear.Referenda_EnactmentMoment_1410_EnactmentMomentAfter{
			EnactmentMomentAfter: To_Referenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_KillCall_100(in any) *pbgear.Referenda_KillCall_100 {
	out := &pbgear.Referenda_KillCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Referenda_KillCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_KillCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaKillCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaKillCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Referenda_NudgeReferendumCall_100(in any) *pbgear.Referenda_NudgeReferendumCall_100 {
	out := &pbgear.Referenda_NudgeReferendumCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Referenda_NudgeReferendumCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_NudgeReferendumCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaNudgeReferendumCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaNudgeReferendumCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Referenda_OneFewerDecidingCall_100(in any) *pbgear.Referenda_OneFewerDecidingCall_100 {
	out := &pbgear.Referenda_OneFewerDecidingCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Track
	out.Track = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Referenda_OneFewerDecidingCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_OneFewerDecidingCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaOneFewerDecidingCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaOneFewerDecidingCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Referenda_PlaceDecisionDepositCall_100(in any) *pbgear.Referenda_PlaceDecisionDepositCall_100 {
	out := &pbgear.Referenda_PlaceDecisionDepositCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Referenda_PlaceDecisionDepositCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_PlaceDecisionDepositCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaPlaceDecisionDepositCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaPlaceDecisionDepositCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Referenda_Proposal_100(in any) *pbgear.Referenda_Proposal_100 {
	out := &pbgear.Referenda_Proposal_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_Referenda_Proposal_100_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Proposal_100_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_Proposal_100_ProposalLegacy{
			ProposalLegacy: To_Referenda_Legacy(param),
		}
	case 1:
		return &pbgear.Referenda_Proposal_100_ProposalInline{
			ProposalInline: To_Referenda_Inline(param),
		}
	case 2:
		return &pbgear.Referenda_Proposal_100_ProposalLookup{
			ProposalLookup: To_Referenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_Proposal_310(in any) *pbgear.Referenda_Proposal_310 {
	out := &pbgear.Referenda_Proposal_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_Referenda_Proposal_310_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Proposal_310_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_Proposal_310_ProposalLegacy{
			ProposalLegacy: To_Referenda_Legacy(param),
		}
	case 1:
		return &pbgear.Referenda_Proposal_310_ProposalInline{
			ProposalInline: To_Referenda_Inline(param),
		}
	case 2:
		return &pbgear.Referenda_Proposal_310_ProposalLookup{
			ProposalLookup: To_Referenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_Proposal_1030(in any) *pbgear.Referenda_Proposal_1030 {
	out := &pbgear.Referenda_Proposal_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_Referenda_Proposal_1030_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Proposal_1030_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_Proposal_1030_ProposalLegacy{
			ProposalLegacy: To_Referenda_Legacy(param),
		}
	case 1:
		return &pbgear.Referenda_Proposal_1030_ProposalInline{
			ProposalInline: To_Referenda_Inline(param),
		}
	case 2:
		return &pbgear.Referenda_Proposal_1030_ProposalLookup{
			ProposalLookup: To_Referenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_Proposal_1400(in any) *pbgear.Referenda_Proposal_1400 {
	out := &pbgear.Referenda_Proposal_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_Referenda_Proposal_1400_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_Proposal_1400_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_Proposal_1400_ProposalLegacy{
			ProposalLegacy: To_Referenda_Legacy(param),
		}
	case 1:
		return &pbgear.Referenda_Proposal_1400_ProposalInline{
			ProposalInline: To_Referenda_Inline(param),
		}
	case 2:
		return &pbgear.Referenda_Proposal_1400_ProposalLookup{
			ProposalLookup: To_Referenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_ProposalOrigin_100(in any) *pbgear.Referenda_ProposalOrigin_100 {
	out := &pbgear.Referenda_ProposalOrigin_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_Referenda_ProposalOrigin_100_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_ProposalOrigin_100_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_ProposalOrigin_100_ProposalOriginSystem{
			ProposalOriginSystem: To_Referenda_System(param),
		}
	case 20:
		return &pbgear.Referenda_ProposalOrigin_100_ProposalOriginOrigins{
			ProposalOriginOrigins: To_Referenda_Origins(param),
		}
	case 2:
		return &pbgear.Referenda_ProposalOrigin_100_ProposalOriginVoid{
			ProposalOriginVoid: To_Referenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_ProposalOrigin_310(in any) *pbgear.Referenda_ProposalOrigin_310 {
	out := &pbgear.Referenda_ProposalOrigin_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_Referenda_ProposalOrigin_310_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_ProposalOrigin_310_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_ProposalOrigin_310_ProposalOriginSystem{
			ProposalOriginSystem: To_Referenda_System(param),
		}
	case 20:
		return &pbgear.Referenda_ProposalOrigin_310_ProposalOriginOrigins{
			ProposalOriginOrigins: To_Referenda_Origins(param),
		}
	case 2:
		return &pbgear.Referenda_ProposalOrigin_310_ProposalOriginVoid{
			ProposalOriginVoid: To_Referenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_ProposalOrigin_1030(in any) *pbgear.Referenda_ProposalOrigin_1030 {
	out := &pbgear.Referenda_ProposalOrigin_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_Referenda_ProposalOrigin_1030_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_ProposalOrigin_1030_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_ProposalOrigin_1030_ProposalOriginSystem{
			ProposalOriginSystem: To_Referenda_System(param),
		}
	case 20:
		return &pbgear.Referenda_ProposalOrigin_1030_ProposalOriginOrigins{
			ProposalOriginOrigins: To_Referenda_Origins(param),
		}
	case 2:
		return &pbgear.Referenda_ProposalOrigin_1030_ProposalOriginVoid{
			ProposalOriginVoid: To_Referenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_ProposalOrigin_1040(in any) *pbgear.Referenda_ProposalOrigin_1040 {
	out := &pbgear.Referenda_ProposalOrigin_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_Referenda_ProposalOrigin_1040_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_ProposalOrigin_1040_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_ProposalOrigin_1040_ProposalOriginSystem{
			ProposalOriginSystem: To_Referenda_System(param),
		}
	case 20:
		return &pbgear.Referenda_ProposalOrigin_1040_ProposalOriginOrigins{
			ProposalOriginOrigins: To_Referenda_Origins(param),
		}
	case 2:
		return &pbgear.Referenda_ProposalOrigin_1040_ProposalOriginVoid{
			ProposalOriginVoid: To_Referenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_ProposalOrigin_1410(in any) *pbgear.Referenda_ProposalOrigin_1410 {
	out := &pbgear.Referenda_ProposalOrigin_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_Referenda_ProposalOrigin_1410_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_ProposalOrigin_1410_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_ProposalOrigin_1410_ProposalOriginSystem{
			ProposalOriginSystem: To_Referenda_System(param),
		}
	case 20:
		return &pbgear.Referenda_ProposalOrigin_1410_ProposalOriginOrigins{
			ProposalOriginOrigins: To_Referenda_Origins(param),
		}
	case 2:
		return &pbgear.Referenda_ProposalOrigin_1410_ProposalOriginVoid{
			ProposalOriginVoid: To_Referenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_RefundDecisionDepositCall_100(in any) *pbgear.Referenda_RefundDecisionDepositCall_100 {
	out := &pbgear.Referenda_RefundDecisionDepositCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Referenda_RefundDecisionDepositCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_RefundDecisionDepositCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaRefundDecisionDepositCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaRefundDecisionDepositCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Referenda_RefundSubmissionDepositCall_100(in any) *pbgear.Referenda_RefundSubmissionDepositCall_100 {
	out := &pbgear.Referenda_RefundSubmissionDepositCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Referenda_RefundSubmissionDepositCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_RefundSubmissionDepositCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaRefundSubmissionDepositCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaRefundSubmissionDepositCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Referenda_SetMetadataCall_140(in any) *pbgear.Referenda_SetMetadataCall_140 {
	out := &pbgear.Referenda_SetMetadataCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// optional field MaybeHash true
	if v.HasValue() {
		out.MaybeHash = To_Optional_Referenda_SetMetadataCall_140_maybe_hash(v.ValueAt(1))
	}

	return out //from message
}
func To_Referenda_SetMetadataCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_SetMetadataCall_140(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaSetMetadataCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaSetMetadataCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Referenda_SetMetadataCall_140_maybe_hash(in any) *pbgear.PrimitiveTypesH256 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_Referenda_SubmitCall_100(in any) *pbgear.Referenda_SubmitCall_100 {
	out := &pbgear.Referenda_SubmitCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProposalOrigin
	v0 := To_OneOf_Referenda_SubmitCall_100_proposal_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProposalOrigin").Set(reflect.ValueOf(v0))
	// oneOf field Proposal
	v1 := To_OneOf_Referenda_SubmitCall_100_proposal(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v1))
	// oneOf field EnactmentMoment
	v2 := To_OneOf_Referenda_SubmitCall_100_enactment_moment(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("EnactmentMoment").Set(reflect.ValueOf(v2))

	return out //from message
}
func To_Referenda_SubmitCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Referenda_SubmitCall_100(in)
	out := &pbgearextrinsic.Extrinsic_ReferendaSubmitCall{}
	reflect.ValueOf(out).Elem().FieldByName("ReferendaSubmitCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Referenda_SubmitCall_100_proposal_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_SubmitCall_100_ProposalOriginSystem{
			ProposalOriginSystem: To_Referenda_System(param),
		}
	case 20:
		return &pbgear.Referenda_SubmitCall_100_ProposalOriginOrigins{
			ProposalOriginOrigins: To_Referenda_Origins(param),
		}
	case 2:
		return &pbgear.Referenda_SubmitCall_100_ProposalOriginVoid{
			ProposalOriginVoid: To_Referenda_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Referenda_SubmitCall_100_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_SubmitCall_100_ProposalLegacy{
			ProposalLegacy: To_Referenda_Legacy(param),
		}
	case 1:
		return &pbgear.Referenda_SubmitCall_100_ProposalInline{
			ProposalInline: To_Referenda_Inline(param),
		}
	case 2:
		return &pbgear.Referenda_SubmitCall_100_ProposalLookup{
			ProposalLookup: To_Referenda_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Referenda_SubmitCall_100_enactment_moment(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_SubmitCall_100_EnactmentMomentAt{
			EnactmentMomentAt: To_Referenda_At(param),
		}
	case 1:
		return &pbgear.Referenda_SubmitCall_100_EnactmentMomentAfter{
			EnactmentMomentAfter: To_Referenda_After(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Referenda_System_100(in any) *pbgear.Referenda_System_100 {
	out := &pbgear.Referenda_System_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Referenda_System_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Referenda_System_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Referenda_System_100_Value0Root{
			Value0Root: To_Root(param),
		}
	case 1:
		return &pbgear.Referenda_System_100_Value0Signed{
			Value0Signed: To_Signed(param),
		}
	case 2:
		return &pbgear.Referenda_System_100_Value0None{
			Value0None: To_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ReferendumCanceller_100(in any) *pbgear.ReferendumCanceller_100 {
	out := &pbgear.ReferendumCanceller_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ReferendumKiller_100(in any) *pbgear.ReferendumKiller_100 {
	out := &pbgear.ReferendumKiller_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ReinstrumentationFailure_1110(in any) *pbgear.ReinstrumentationFailure_1110 {
	out := &pbgear.ReinstrumentationFailure_1110{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Reinstrumented_1030(in any) *pbgear.Reinstrumented_1030 {
	out := &pbgear.Reinstrumented_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_RemovedFromWaitlist_1030(in any) *pbgear.RemovedFromWaitlist_1030 {
	out := &pbgear.RemovedFromWaitlist_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Reply_1030(in any) *pbgear.Reply_1030 {
	out := &pbgear.Reply_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsMessageId(w)
	out.Value0 = To_GearCoreIdsMessageId(v.ValueAt(0))

	return out //from message
}

func To_Reply_1420(in any) *pbgear.Reply_1420 {
	out := &pbgear.Reply_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GprimitivesMessageId(w)
	out.Value0 = To_GprimitivesMessageId(v.ValueAt(0))

	return out //from message
}

func To_Reservation_1030(in any) *pbgear.Reservation_1030 {
	out := &pbgear.Reservation_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsReservationId(w)
	out.Value0 = To_GearCoreIdsReservationId(v.ValueAt(0))

	return out //from message
}

func To_Reservation_1420(in any) *pbgear.Reservation_1420 {
	out := &pbgear.Reservation_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GprimitivesReservationId(w)
	out.Value0 = To_GprimitivesReservationId(v.ValueAt(0))

	return out //from message
}

func To_Reserved_1030(in any) *pbgear.Reserved_1030 {
	out := &pbgear.Reserved_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Root_100(in any) *pbgear.Root_100 {
	out := &pbgear.Root_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_RootNotAllowed_1030(in any) *pbgear.RootNotAllowed_1030 {
	out := &pbgear.RootNotAllowed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Runtime_1030(in any) *pbgear.Runtime_1030 {
	out := &pbgear.Runtime_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Runtime_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Runtime_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Runtime_1030_Value0MessageReplied{
			Value0MessageReplied: To_MessageReplied(param),
		}
	case 1:
		return &pbgear.Runtime_1030_Value0MessageClaimed{
			Value0MessageClaimed: To_MessageClaimed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_TupleUint32Uint32_100(in any) *pbgear.Scheduler_TupleUint32Uint32_100 {
	out := &pbgear.Scheduler_TupleUint32Uint32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Scheduler_TupleUint32Uint32_140(in any) *pbgear.Scheduler_TupleUint32Uint32_140 {
	out := &pbgear.Scheduler_TupleUint32Uint32_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Scheduler_TupleUint32Uint32_310(in any) *pbgear.Scheduler_TupleUint32Uint32_310 {
	out := &pbgear.Scheduler_TupleUint32Uint32_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Scheduler_TupleUint32Uint32_1030(in any) *pbgear.Scheduler_TupleUint32Uint32_1030 {
	out := &pbgear.Scheduler_TupleUint32Uint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Scheduler_TupleUint32Uint32_1410(in any) *pbgear.Scheduler_TupleUint32Uint32_1410 {
	out := &pbgear.Scheduler_TupleUint32Uint32_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_SchedulerPallet_100(in any) *pbgear.SchedulerPallet_100 {
	out := &pbgear.SchedulerPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SchedulerPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SchedulerPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SchedulerPallet_100_CallScheduleCall{
			CallScheduleCall: To_Scheduler_ScheduleCall(param),
		}
	case 1:
		return &pbgear.SchedulerPallet_100_CallCancelCall{
			CallCancelCall: To_Scheduler_CancelCall(param),
		}
	case 2:
		return &pbgear.SchedulerPallet_100_CallScheduleNamedCall{
			CallScheduleNamedCall: To_Scheduler_ScheduleNamedCall(param),
		}
	case 3:
		return &pbgear.SchedulerPallet_100_CallCancelNamedCall{
			CallCancelNamedCall: To_Scheduler_CancelNamedCall(param),
		}
	case 4:
		return &pbgear.SchedulerPallet_100_CallScheduleAfterCall{
			CallScheduleAfterCall: To_Scheduler_ScheduleAfterCall(param),
		}
	case 5:
		return &pbgear.SchedulerPallet_100_CallScheduleNamedAfterCall{
			CallScheduleNamedAfterCall: To_Scheduler_ScheduleNamedAfterCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SchedulerPallet_140(in any) *pbgear.SchedulerPallet_140 {
	out := &pbgear.SchedulerPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SchedulerPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SchedulerPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SchedulerPallet_140_CallScheduleCall{
			CallScheduleCall: To_Scheduler_ScheduleCall(param),
		}
	case 1:
		return &pbgear.SchedulerPallet_140_CallCancelCall{
			CallCancelCall: To_Scheduler_CancelCall(param),
		}
	case 2:
		return &pbgear.SchedulerPallet_140_CallScheduleNamedCall{
			CallScheduleNamedCall: To_Scheduler_ScheduleNamedCall(param),
		}
	case 3:
		return &pbgear.SchedulerPallet_140_CallCancelNamedCall{
			CallCancelNamedCall: To_Scheduler_CancelNamedCall(param),
		}
	case 4:
		return &pbgear.SchedulerPallet_140_CallScheduleAfterCall{
			CallScheduleAfterCall: To_Scheduler_ScheduleAfterCall(param),
		}
	case 5:
		return &pbgear.SchedulerPallet_140_CallScheduleNamedAfterCall{
			CallScheduleNamedAfterCall: To_Scheduler_ScheduleNamedAfterCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SchedulerPallet_310(in any) *pbgear.SchedulerPallet_310 {
	out := &pbgear.SchedulerPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SchedulerPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SchedulerPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SchedulerPallet_310_CallScheduleCall{
			CallScheduleCall: To_Scheduler_ScheduleCall(param),
		}
	case 1:
		return &pbgear.SchedulerPallet_310_CallCancelCall{
			CallCancelCall: To_Scheduler_CancelCall(param),
		}
	case 2:
		return &pbgear.SchedulerPallet_310_CallScheduleNamedCall{
			CallScheduleNamedCall: To_Scheduler_ScheduleNamedCall(param),
		}
	case 3:
		return &pbgear.SchedulerPallet_310_CallCancelNamedCall{
			CallCancelNamedCall: To_Scheduler_CancelNamedCall(param),
		}
	case 4:
		return &pbgear.SchedulerPallet_310_CallScheduleAfterCall{
			CallScheduleAfterCall: To_Scheduler_ScheduleAfterCall(param),
		}
	case 5:
		return &pbgear.SchedulerPallet_310_CallScheduleNamedAfterCall{
			CallScheduleNamedAfterCall: To_Scheduler_ScheduleNamedAfterCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SchedulerPallet_1030(in any) *pbgear.SchedulerPallet_1030 {
	out := &pbgear.SchedulerPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SchedulerPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SchedulerPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SchedulerPallet_1030_CallScheduleCall{
			CallScheduleCall: To_Scheduler_ScheduleCall(param),
		}
	case 1:
		return &pbgear.SchedulerPallet_1030_CallCancelCall{
			CallCancelCall: To_Scheduler_CancelCall(param),
		}
	case 2:
		return &pbgear.SchedulerPallet_1030_CallScheduleNamedCall{
			CallScheduleNamedCall: To_Scheduler_ScheduleNamedCall(param),
		}
	case 3:
		return &pbgear.SchedulerPallet_1030_CallCancelNamedCall{
			CallCancelNamedCall: To_Scheduler_CancelNamedCall(param),
		}
	case 4:
		return &pbgear.SchedulerPallet_1030_CallScheduleAfterCall{
			CallScheduleAfterCall: To_Scheduler_ScheduleAfterCall(param),
		}
	case 5:
		return &pbgear.SchedulerPallet_1030_CallScheduleNamedAfterCall{
			CallScheduleNamedAfterCall: To_Scheduler_ScheduleNamedAfterCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SchedulerPallet_1410(in any) *pbgear.SchedulerPallet_1410 {
	out := &pbgear.SchedulerPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SchedulerPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SchedulerPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SchedulerPallet_1410_CallScheduleCall{
			CallScheduleCall: To_Scheduler_ScheduleCall(param),
		}
	case 1:
		return &pbgear.SchedulerPallet_1410_CallCancelCall{
			CallCancelCall: To_Scheduler_CancelCall(param),
		}
	case 2:
		return &pbgear.SchedulerPallet_1410_CallScheduleNamedCall{
			CallScheduleNamedCall: To_Scheduler_ScheduleNamedCall(param),
		}
	case 3:
		return &pbgear.SchedulerPallet_1410_CallCancelNamedCall{
			CallCancelNamedCall: To_Scheduler_CancelNamedCall(param),
		}
	case 4:
		return &pbgear.SchedulerPallet_1410_CallScheduleAfterCall{
			CallScheduleAfterCall: To_Scheduler_ScheduleAfterCall(param),
		}
	case 5:
		return &pbgear.SchedulerPallet_1410_CallScheduleNamedAfterCall{
			CallScheduleNamedAfterCall: To_Scheduler_ScheduleNamedAfterCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_CancelCall_100(in any) *pbgear.Scheduler_CancelCall_100 {
	out := &pbgear.Scheduler_CancelCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field When
	out.When = To_uint32(v.ValueAt(0))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Scheduler_CancelCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_CancelCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerCancelCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerCancelCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Scheduler_CancelNamedCall_100(in any) *pbgear.Scheduler_CancelNamedCall_100 {
	out := &pbgear.Scheduler_CancelNamedCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))

	return out //from message
}
func To_Scheduler_CancelNamedCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_CancelNamedCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerCancelNamedCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerCancelNamedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Scheduler_ScheduleAfterCall_100(in any) *pbgear.Scheduler_ScheduleAfterCall_100 {
	out := &pbgear.Scheduler_ScheduleAfterCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field After
	out.After = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleAfterCall_100_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleAfterCall_100_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleAfterCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleAfterCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleAfterCall_100_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleAfterCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleAfterCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleAfterCall_140(in any) *pbgear.Scheduler_ScheduleAfterCall_140 {
	out := &pbgear.Scheduler_ScheduleAfterCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field After
	out.After = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleAfterCall_140_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleAfterCall_140_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleAfterCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleAfterCall_140(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleAfterCall_140_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleAfterCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleAfterCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleAfterCall_210(in any) *pbgear.Scheduler_ScheduleAfterCall_210 {
	out := &pbgear.Scheduler_ScheduleAfterCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field After
	out.After = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleAfterCall_210_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleAfterCall_210_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleAfterCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleAfterCall_210(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleAfterCall_210_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleAfterCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleAfterCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleAfterCall_310(in any) *pbgear.Scheduler_ScheduleAfterCall_310 {
	out := &pbgear.Scheduler_ScheduleAfterCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field After
	out.After = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleAfterCall_310_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleAfterCall_310_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleAfterCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleAfterCall_310(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleAfterCall_310_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleAfterCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleAfterCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleAfterCall_1000(in any) *pbgear.Scheduler_ScheduleAfterCall_1000 {
	out := &pbgear.Scheduler_ScheduleAfterCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field After
	out.After = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleAfterCall_1000_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleAfterCall_1000_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleAfterCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleAfterCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleAfterCall_1000_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleAfterCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleAfterCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleCall_100(in any) *pbgear.Scheduler_ScheduleCall_100 {
	out := &pbgear.Scheduler_ScheduleCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field When
	out.When = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleCall_100_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleCall_100_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleCall_100_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleCall_140(in any) *pbgear.Scheduler_ScheduleCall_140 {
	out := &pbgear.Scheduler_ScheduleCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field When
	out.When = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleCall_140_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleCall_140_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleCall_140(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleCall_140_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleCall_210(in any) *pbgear.Scheduler_ScheduleCall_210 {
	out := &pbgear.Scheduler_ScheduleCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field When
	out.When = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleCall_210_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleCall_210_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleCall_210(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleCall_210_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleCall_310(in any) *pbgear.Scheduler_ScheduleCall_310 {
	out := &pbgear.Scheduler_ScheduleCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field When
	out.When = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleCall_310_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleCall_310_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleCall_310(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleCall_310_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleCall_1000(in any) *pbgear.Scheduler_ScheduleCall_1000 {
	out := &pbgear.Scheduler_ScheduleCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field When
	out.When = To_uint32(v.ValueAt(0))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleCall_1000_maybe_periodic(v.ValueAt(1))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(2))
	// oneOf field Call
	v3 := To_OneOf_Scheduler_ScheduleCall_1000_call(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v3))

	return out //from message
}
func To_Scheduler_ScheduleCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleCall_1000_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedAfterCall_100(in any) *pbgear.Scheduler_ScheduleNamedAfterCall_100 {
	out := &pbgear.Scheduler_ScheduleNamedAfterCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field After
	out.After = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedAfterCall_100_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedAfterCall_100_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedAfterCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedAfterCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedAfterCall_100_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedAfterCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedAfterCall_140(in any) *pbgear.Scheduler_ScheduleNamedAfterCall_140 {
	out := &pbgear.Scheduler_ScheduleNamedAfterCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field After
	out.After = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedAfterCall_140_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedAfterCall_140_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedAfterCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedAfterCall_140(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedAfterCall_140_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedAfterCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedAfterCall_210(in any) *pbgear.Scheduler_ScheduleNamedAfterCall_210 {
	out := &pbgear.Scheduler_ScheduleNamedAfterCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field After
	out.After = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedAfterCall_210_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedAfterCall_210_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedAfterCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedAfterCall_210(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedAfterCall_210_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedAfterCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedAfterCall_310(in any) *pbgear.Scheduler_ScheduleNamedAfterCall_310 {
	out := &pbgear.Scheduler_ScheduleNamedAfterCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field After
	out.After = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedAfterCall_310_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedAfterCall_310_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedAfterCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedAfterCall_310(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedAfterCall_310_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedAfterCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedAfterCall_1000(in any) *pbgear.Scheduler_ScheduleNamedAfterCall_1000 {
	out := &pbgear.Scheduler_ScheduleNamedAfterCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field After
	out.After = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedAfterCall_1000_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedAfterCall_1000_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedAfterCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedAfterCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedAfterCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedAfterCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedAfterCall_1000_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedAfterCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleNamedAfterCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedCall_100(in any) *pbgear.Scheduler_ScheduleNamedCall_100 {
	out := &pbgear.Scheduler_ScheduleNamedCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field When
	out.When = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedCall_100_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedCall_100_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedCall_100_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedCall_140(in any) *pbgear.Scheduler_ScheduleNamedCall_140 {
	out := &pbgear.Scheduler_ScheduleNamedCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field When
	out.When = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedCall_140_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedCall_140_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedCall_140(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedCall_140_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedCall_210(in any) *pbgear.Scheduler_ScheduleNamedCall_210 {
	out := &pbgear.Scheduler_ScheduleNamedCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field When
	out.When = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedCall_210_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedCall_210_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedCall_210(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedCall_210_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedCall_310(in any) *pbgear.Scheduler_ScheduleNamedCall_310 {
	out := &pbgear.Scheduler_ScheduleNamedCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field When
	out.When = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedCall_310_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedCall_310_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedCall_310(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedCall_310_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Scheduler_ScheduleNamedCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Scheduler_ScheduleNamedCall_1000(in any) *pbgear.Scheduler_ScheduleNamedCall_1000 {
	out := &pbgear.Scheduler_ScheduleNamedCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Id
	out.Id = To_bytes(v.ValueAt(0))
	// primitive field When
	out.When = To_uint32(v.ValueAt(1))
	// optional field MaybePeriodic true
	if v.HasValue() {
		out.MaybePeriodic = To_Optional_Scheduler_ScheduleNamedCall_1000_maybe_periodic(v.ValueAt(2))
	}
	// primitive field Priority
	out.Priority = To_uint32(v.ValueAt(3))
	// oneOf field Call
	v4 := To_OneOf_Scheduler_ScheduleNamedCall_1000_call(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v4))

	return out //from message
}
func To_Scheduler_ScheduleNamedCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Scheduler_ScheduleNamedCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_SchedulerScheduleNamedCall{}
	reflect.ValueOf(out).Elem().FieldByName("SchedulerScheduleNamedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Optional_Scheduler_ScheduleNamedCall_1000_maybe_periodic(in any) *pbgear.Scheduler_TupleUint32Uint32 {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_Scheduler_ScheduleNamedCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Scheduler_ScheduleNamedCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SessionPallet_100(in any) *pbgear.SessionPallet_100 {
	out := &pbgear.SessionPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SessionPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SessionPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SessionPallet_100_CallSetKeysCall{
			CallSetKeysCall: To_Session_SetKeysCall(param),
		}
	case 1:
		return &pbgear.SessionPallet_100_CallPurgeKeysCall{
			CallPurgeKeysCall: To_Session_PurgeKeysCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SessionPallet_310(in any) *pbgear.SessionPallet_310 {
	out := &pbgear.SessionPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SessionPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SessionPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SessionPallet_310_CallSetKeysCall{
			CallSetKeysCall: To_Session_SetKeysCall(param),
		}
	case 1:
		return &pbgear.SessionPallet_310_CallPurgeKeysCall{
			CallPurgeKeysCall: To_Session_PurgeKeysCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SessionPallet_1030(in any) *pbgear.SessionPallet_1030 {
	out := &pbgear.SessionPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SessionPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SessionPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SessionPallet_1030_CallSetKeysCall{
			CallSetKeysCall: To_Session_SetKeysCall(param),
		}
	case 1:
		return &pbgear.SessionPallet_1030_CallPurgeKeysCall{
			CallPurgeKeysCall: To_Session_PurgeKeysCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SessionPallet_1040(in any) *pbgear.SessionPallet_1040 {
	out := &pbgear.SessionPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SessionPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SessionPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SessionPallet_1040_CallSetKeysCall{
			CallSetKeysCall: To_Session_SetKeysCall(param),
		}
	case 1:
		return &pbgear.SessionPallet_1040_CallPurgeKeysCall{
			CallPurgeKeysCall: To_Session_PurgeKeysCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Session_PurgeKeysCall_100(in any) *pbgear.Session_PurgeKeysCall_100 {
	out := &pbgear.Session_PurgeKeysCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Session_SetKeysCall_100(in any) *pbgear.Session_SetKeysCall_100 {
	out := &pbgear.Session_SetKeysCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Keys To_VaraRuntimeSessionKeys(w)
	out.Keys = To_VaraRuntimeSessionKeys(v.ValueAt(0))
	// primitive field Proof
	out.Proof = To_bytes(v.ValueAt(1))

	return out //from message
}
func To_Session_SetKeysCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Session_SetKeysCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SessionSetKeysCall{}
	reflect.ValueOf(out).Elem().FieldByName("SessionSetKeysCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Signal_1030(in any) *pbgear.Signal_1030 {
	out := &pbgear.Signal_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Signed_100(in any) *pbgear.Signed_100 {
	out := &pbgear.Signed_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_SmallSpender_210(in any) *pbgear.SmallSpender_210 {
	out := &pbgear.SmallSpender_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_SmallTipper_210(in any) *pbgear.SmallTipper_210 {
	out := &pbgear.SmallTipper_210{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_StackLimitExceeded_1110(in any) *pbgear.StackLimitExceeded_1110 {
	out := &pbgear.StackLimitExceeded_1110{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_1030(in any) *pbgear.Staking_1030 {
	out := &pbgear.Staking_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_Account_100(in any) *pbgear.Staking_Account_100 {
	out := &pbgear.Staking_Account_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Staking_Address20_100(in any) *pbgear.Staking_Address20_100 {
	out := &pbgear.Staking_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Staking_Address32_100(in any) *pbgear.Staking_Address32_100 {
	out := &pbgear.Staking_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_StakingAdmin_100(in any) *pbgear.StakingAdmin_100 {
	out := &pbgear.StakingAdmin_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ConsensusEvent_1300(in any) *pbgear.Staking_ConsensusEvent_1300 {
	out := &pbgear.Staking_ConsensusEvent_1300{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Staking_Controller_100(in any) *pbgear.Staking_Controller_100 {
	out := &pbgear.Staking_Controller_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_Id_100(in any) *pbgear.Staking_Id_100 {
	out := &pbgear.Staking_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Staking_Index_100(in any) *pbgear.Staking_Index_100 {
	out := &pbgear.Staking_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Staking_TupleNull(w)
	out.Value0 = To_Staking_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Staking_None_100(in any) *pbgear.Staking_None_100 {
	out := &pbgear.Staking_None_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_Noop_100(in any) *pbgear.Staking_Noop_100 {
	out := &pbgear.Staking_Noop_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_OtherEvent_1300(in any) *pbgear.Staking_OtherEvent_1300 {
	out := &pbgear.Staking_OtherEvent_1300{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Staking_PreRuntimeEvent_1300(in any) *pbgear.Staking_PreRuntimeEvent_1300 {
	out := &pbgear.Staking_PreRuntimeEvent_1300{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Staking_Raw_100(in any) *pbgear.Staking_Raw_100 {
	out := &pbgear.Staking_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Staking_Remove_100(in any) *pbgear.Staking_Remove_100 {
	out := &pbgear.Staking_Remove_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_StakingRewards_Address20_100(in any) *pbgear.StakingRewards_Address20_100 {
	out := &pbgear.StakingRewards_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_StakingRewards_Address32_100(in any) *pbgear.StakingRewards_Address32_100 {
	out := &pbgear.StakingRewards_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_StakingRewards_Id_100(in any) *pbgear.StakingRewards_Id_100 {
	out := &pbgear.StakingRewards_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_StakingRewards_Index_100(in any) *pbgear.StakingRewards_Index_100 {
	out := &pbgear.StakingRewards_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_StakingRewards_TupleNull(w)
	out.Value0 = To_StakingRewards_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_StakingRewards_Raw_100(in any) *pbgear.StakingRewards_Raw_100 {
	out := &pbgear.StakingRewards_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_StakingRewards_TupleNull_100(in any) *pbgear.StakingRewards_TupleNull_100 {
	out := &pbgear.StakingRewards_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_StakingRewards_TupleNull_310(in any) *pbgear.StakingRewards_TupleNull_310 {
	out := &pbgear.StakingRewards_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_StakingRewards_TupleNull_1030(in any) *pbgear.StakingRewards_TupleNull_1030 {
	out := &pbgear.StakingRewards_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_StakingRewardsPallet_100(in any) *pbgear.StakingRewardsPallet_100 {
	out := &pbgear.StakingRewardsPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_100_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_100_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_100_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_140(in any) *pbgear.StakingRewardsPallet_140 {
	out := &pbgear.StakingRewardsPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_140_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_140_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_140_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_210(in any) *pbgear.StakingRewardsPallet_210 {
	out := &pbgear.StakingRewardsPallet_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_210_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_210_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_210_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_310(in any) *pbgear.StakingRewardsPallet_310 {
	out := &pbgear.StakingRewardsPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_310_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_310_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_310_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_1010(in any) *pbgear.StakingRewardsPallet_1010 {
	out := &pbgear.StakingRewardsPallet_1010{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_1010_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_1010_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_1010_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_1010_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_1010_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	case 3:
		return &pbgear.StakingRewardsPallet_1010_CallAlignSupplyCall{
			CallAlignSupplyCall: To_StakingRewards_AlignSupplyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_1030(in any) *pbgear.StakingRewardsPallet_1030 {
	out := &pbgear.StakingRewardsPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_1030_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_1030_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_1030_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	case 3:
		return &pbgear.StakingRewardsPallet_1030_CallAlignSupplyCall{
			CallAlignSupplyCall: To_StakingRewards_AlignSupplyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_1040(in any) *pbgear.StakingRewardsPallet_1040 {
	out := &pbgear.StakingRewardsPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_1040_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_1040_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_1040_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	case 3:
		return &pbgear.StakingRewardsPallet_1040_CallAlignSupplyCall{
			CallAlignSupplyCall: To_StakingRewards_AlignSupplyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_1110(in any) *pbgear.StakingRewardsPallet_1110 {
	out := &pbgear.StakingRewardsPallet_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_1110_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_1110_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_1110_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_1110_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_1110_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	case 3:
		return &pbgear.StakingRewardsPallet_1110_CallAlignSupplyCall{
			CallAlignSupplyCall: To_StakingRewards_AlignSupplyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewardsPallet_1400(in any) *pbgear.StakingRewardsPallet_1400 {
	out := &pbgear.StakingRewardsPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingRewardsPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewardsPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewardsPallet_1400_CallRefillCall{
			CallRefillCall: To_StakingRewards_RefillCall(param),
		}
	case 1:
		return &pbgear.StakingRewardsPallet_1400_CallForceRefillCall{
			CallForceRefillCall: To_StakingRewards_ForceRefillCall(param),
		}
	case 2:
		return &pbgear.StakingRewardsPallet_1400_CallWithdrawCall{
			CallWithdrawCall: To_StakingRewards_WithdrawCall(param),
		}
	case 3:
		return &pbgear.StakingRewardsPallet_1400_CallAlignSupplyCall{
			CallAlignSupplyCall: To_StakingRewards_AlignSupplyCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_AlignSupplyCall_1010(in any) *pbgear.StakingRewards_AlignSupplyCall_1010 {
	out := &pbgear.StakingRewards_AlignSupplyCall_1010{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Target
	out.Target = To_string(v.ValueAt(0))

	return out //from message
}
func To_StakingRewards_AlignSupplyCall_1010_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_StakingRewards_AlignSupplyCall_1010(in)
	out := &pbgearextrinsic.Extrinsic_StakingrewardsAlignSupplyCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingrewardsAlignSupplyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_StakingRewards_ForceRefillCall_100(in any) *pbgear.StakingRewards_ForceRefillCall_100 {
	out := &pbgear.StakingRewards_ForceRefillCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_StakingRewards_ForceRefillCall_100_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))
	// primitive field Value
	out.Value = To_string(v.ValueAt(1))

	return out //from message
}
func To_StakingRewards_ForceRefillCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_StakingRewards_ForceRefillCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingrewardsForceRefillCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingrewardsForceRefillCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_StakingRewards_ForceRefillCall_100_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_ForceRefillCall_100_FromId{
			FromId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_ForceRefillCall_100_FromIndex{
			FromIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_ForceRefillCall_100_FromRaw{
			FromRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_ForceRefillCall_100_FromAddress32{
			FromAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_ForceRefillCall_100_FromAddress20{
			FromAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_From_100(in any) *pbgear.StakingRewards_From_100 {
	out := &pbgear.StakingRewards_From_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_StakingRewards_From_100_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewards_From_100_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_From_100_FromId{
			FromId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_From_100_FromIndex{
			FromIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_From_100_FromRaw{
			FromRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_From_100_FromAddress32{
			FromAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_From_100_FromAddress20{
			FromAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_From_310(in any) *pbgear.StakingRewards_From_310 {
	out := &pbgear.StakingRewards_From_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_StakingRewards_From_310_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewards_From_310_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_From_310_FromId{
			FromId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_From_310_FromIndex{
			FromIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_From_310_FromRaw{
			FromRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_From_310_FromAddress32{
			FromAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_From_310_FromAddress20{
			FromAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_From_1030(in any) *pbgear.StakingRewards_From_1030 {
	out := &pbgear.StakingRewards_From_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_StakingRewards_From_1030_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewards_From_1030_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_From_1030_FromId{
			FromId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_From_1030_FromIndex{
			FromIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_From_1030_FromRaw{
			FromRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_From_1030_FromAddress32{
			FromAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_From_1030_FromAddress20{
			FromAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_RefillCall_100(in any) *pbgear.StakingRewards_RefillCall_100 {
	out := &pbgear.StakingRewards_RefillCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value
	out.Value = To_string(v.ValueAt(0))

	return out //from message
}
func To_StakingRewards_RefillCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_StakingRewards_RefillCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingrewardsRefillCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingrewardsRefillCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_StakingRewards_To_100(in any) *pbgear.StakingRewards_To_100 {
	out := &pbgear.StakingRewards_To_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_StakingRewards_To_100_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewards_To_100_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_To_100_ToId{
			ToId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_To_100_ToIndex{
			ToIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_To_100_ToRaw{
			ToRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_To_100_ToAddress32{
			ToAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_To_100_ToAddress20{
			ToAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_To_310(in any) *pbgear.StakingRewards_To_310 {
	out := &pbgear.StakingRewards_To_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_StakingRewards_To_310_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewards_To_310_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_To_310_ToId{
			ToId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_To_310_ToIndex{
			ToIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_To_310_ToRaw{
			ToRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_To_310_ToAddress32{
			ToAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_To_310_ToAddress20{
			ToAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_To_1030(in any) *pbgear.StakingRewards_To_1030 {
	out := &pbgear.StakingRewards_To_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_StakingRewards_To_1030_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingRewards_To_1030_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_To_1030_ToId{
			ToId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_To_1030_ToIndex{
			ToIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_To_1030_ToRaw{
			ToRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_To_1030_ToAddress32{
			ToAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_To_1030_ToAddress20{
			ToAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingRewards_WithdrawCall_100(in any) *pbgear.StakingRewards_WithdrawCall_100 {
	out := &pbgear.StakingRewards_WithdrawCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_StakingRewards_WithdrawCall_100_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))
	// primitive field Value
	out.Value = To_string(v.ValueAt(1))

	return out //from message
}
func To_StakingRewards_WithdrawCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_StakingRewards_WithdrawCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingrewardsWithdrawCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingrewardsWithdrawCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_StakingRewards_WithdrawCall_100_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingRewards_WithdrawCall_100_ToId{
			ToId: To_StakingRewards_Id(param),
		}
	case 1:
		return &pbgear.StakingRewards_WithdrawCall_100_ToIndex{
			ToIndex: To_StakingRewards_Index(param),
		}
	case 2:
		return &pbgear.StakingRewards_WithdrawCall_100_ToRaw{
			ToRaw: To_StakingRewards_Raw(param),
		}
	case 3:
		return &pbgear.StakingRewards_WithdrawCall_100_ToAddress32{
			ToAddress32: To_StakingRewards_Address32(param),
		}
	case 4:
		return &pbgear.StakingRewards_WithdrawCall_100_ToAddress20{
			ToAddress20: To_StakingRewards_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_RuntimeEnvironmentUpdatedEvent_1300(in any) *pbgear.Staking_RuntimeEnvironmentUpdatedEvent_1300 {
	out := &pbgear.Staking_RuntimeEnvironmentUpdatedEvent_1300{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_SealEvent_1300(in any) *pbgear.Staking_SealEvent_1300 {
	out := &pbgear.Staking_SealEvent_1300{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_Staking_Set_100(in any) *pbgear.Staking_Set_100 {
	out := &pbgear.Staking_Set_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_Staking_Staked_100(in any) *pbgear.Staking_Staked_100 {
	out := &pbgear.Staking_Staked_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_Stash_100(in any) *pbgear.Staking_Stash_100 {
	out := &pbgear.Staking_Stash_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_TupleNull_100(in any) *pbgear.Staking_TupleNull_100 {
	out := &pbgear.Staking_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Staking_TupleNull_310(in any) *pbgear.Staking_TupleNull_310 {
	out := &pbgear.Staking_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Staking_TupleNull_1030(in any) *pbgear.Staking_TupleNull_1030 {
	out := &pbgear.Staking_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_StakingPallet_100(in any) *pbgear.StakingPallet_100 {
	out := &pbgear.StakingPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingPallet_100_CallBondCall{
			CallBondCall: To_Staking_BondCall(param),
		}
	case 1:
		return &pbgear.StakingPallet_100_CallBondExtraCall{
			CallBondExtraCall: To_Staking_BondExtraCall(param),
		}
	case 2:
		return &pbgear.StakingPallet_100_CallUnbondCall{
			CallUnbondCall: To_Staking_UnbondCall(param),
		}
	case 3:
		return &pbgear.StakingPallet_100_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_Staking_WithdrawUnbondedCall(param),
		}
	case 4:
		return &pbgear.StakingPallet_100_CallValidateCall{
			CallValidateCall: To_Staking_ValidateCall(param),
		}
	case 5:
		return &pbgear.StakingPallet_100_CallNominateCall{
			CallNominateCall: To_Staking_NominateCall(param),
		}
	case 6:
		return &pbgear.StakingPallet_100_CallChillCall{
			CallChillCall: To_Staking_ChillCall(param),
		}
	case 7:
		return &pbgear.StakingPallet_100_CallSetPayeeCall{
			CallSetPayeeCall: To_Staking_SetPayeeCall(param),
		}
	case 8:
		return &pbgear.StakingPallet_100_CallSetControllerCall{
			CallSetControllerCall: To_Staking_SetControllerCall(param),
		}
	case 9:
		return &pbgear.StakingPallet_100_CallSetValidatorCountCall{
			CallSetValidatorCountCall: To_Staking_SetValidatorCountCall(param),
		}
	case 10:
		return &pbgear.StakingPallet_100_CallIncreaseValidatorCountCall{
			CallIncreaseValidatorCountCall: To_Staking_IncreaseValidatorCountCall(param),
		}
	case 11:
		return &pbgear.StakingPallet_100_CallScaleValidatorCountCall{
			CallScaleValidatorCountCall: To_Staking_ScaleValidatorCountCall(param),
		}
	case 12:
		return &pbgear.StakingPallet_100_CallForceNoErasCall{
			CallForceNoErasCall: To_Staking_ForceNoErasCall(param),
		}
	case 13:
		return &pbgear.StakingPallet_100_CallForceNewEraCall{
			CallForceNewEraCall: To_Staking_ForceNewEraCall(param),
		}
	case 14:
		return &pbgear.StakingPallet_100_CallSetInvulnerablesCall{
			CallSetInvulnerablesCall: To_Staking_SetInvulnerablesCall(param),
		}
	case 15:
		return &pbgear.StakingPallet_100_CallForceUnstakeCall{
			CallForceUnstakeCall: To_Staking_ForceUnstakeCall(param),
		}
	case 16:
		return &pbgear.StakingPallet_100_CallForceNewEraAlwaysCall{
			CallForceNewEraAlwaysCall: To_Staking_ForceNewEraAlwaysCall(param),
		}
	case 17:
		return &pbgear.StakingPallet_100_CallCancelDeferredSlashCall{
			CallCancelDeferredSlashCall: To_Staking_CancelDeferredSlashCall(param),
		}
	case 18:
		return &pbgear.StakingPallet_100_CallPayoutStakersCall{
			CallPayoutStakersCall: To_Staking_PayoutStakersCall(param),
		}
	case 19:
		return &pbgear.StakingPallet_100_CallRebondCall{
			CallRebondCall: To_Staking_RebondCall(param),
		}
	case 20:
		return &pbgear.StakingPallet_100_CallReapStashCall{
			CallReapStashCall: To_Staking_ReapStashCall(param),
		}
	case 21:
		return &pbgear.StakingPallet_100_CallKickCall{
			CallKickCall: To_Staking_KickCall(param),
		}
	case 22:
		return &pbgear.StakingPallet_100_CallSetStakingConfigsCall{
			CallSetStakingConfigsCall: To_Staking_SetStakingConfigsCall(param),
		}
	case 23:
		return &pbgear.StakingPallet_100_CallChillOtherCall{
			CallChillOtherCall: To_Staking_ChillOtherCall(param),
		}
	case 24:
		return &pbgear.StakingPallet_100_CallForceApplyMinCommissionCall{
			CallForceApplyMinCommissionCall: To_Staking_ForceApplyMinCommissionCall(param),
		}
	case 25:
		return &pbgear.StakingPallet_100_CallSetMinCommissionCall{
			CallSetMinCommissionCall: To_Staking_SetMinCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingPallet_310(in any) *pbgear.StakingPallet_310 {
	out := &pbgear.StakingPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingPallet_310_CallBondCall{
			CallBondCall: To_Staking_BondCall(param),
		}
	case 1:
		return &pbgear.StakingPallet_310_CallBondExtraCall{
			CallBondExtraCall: To_Staking_BondExtraCall(param),
		}
	case 2:
		return &pbgear.StakingPallet_310_CallUnbondCall{
			CallUnbondCall: To_Staking_UnbondCall(param),
		}
	case 3:
		return &pbgear.StakingPallet_310_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_Staking_WithdrawUnbondedCall(param),
		}
	case 4:
		return &pbgear.StakingPallet_310_CallValidateCall{
			CallValidateCall: To_Staking_ValidateCall(param),
		}
	case 5:
		return &pbgear.StakingPallet_310_CallNominateCall{
			CallNominateCall: To_Staking_NominateCall(param),
		}
	case 6:
		return &pbgear.StakingPallet_310_CallChillCall{
			CallChillCall: To_Staking_ChillCall(param),
		}
	case 7:
		return &pbgear.StakingPallet_310_CallSetPayeeCall{
			CallSetPayeeCall: To_Staking_SetPayeeCall(param),
		}
	case 8:
		return &pbgear.StakingPallet_310_CallSetControllerCall{
			CallSetControllerCall: To_Staking_SetControllerCall(param),
		}
	case 9:
		return &pbgear.StakingPallet_310_CallSetValidatorCountCall{
			CallSetValidatorCountCall: To_Staking_SetValidatorCountCall(param),
		}
	case 10:
		return &pbgear.StakingPallet_310_CallIncreaseValidatorCountCall{
			CallIncreaseValidatorCountCall: To_Staking_IncreaseValidatorCountCall(param),
		}
	case 11:
		return &pbgear.StakingPallet_310_CallScaleValidatorCountCall{
			CallScaleValidatorCountCall: To_Staking_ScaleValidatorCountCall(param),
		}
	case 12:
		return &pbgear.StakingPallet_310_CallForceNoErasCall{
			CallForceNoErasCall: To_Staking_ForceNoErasCall(param),
		}
	case 13:
		return &pbgear.StakingPallet_310_CallForceNewEraCall{
			CallForceNewEraCall: To_Staking_ForceNewEraCall(param),
		}
	case 14:
		return &pbgear.StakingPallet_310_CallSetInvulnerablesCall{
			CallSetInvulnerablesCall: To_Staking_SetInvulnerablesCall(param),
		}
	case 15:
		return &pbgear.StakingPallet_310_CallForceUnstakeCall{
			CallForceUnstakeCall: To_Staking_ForceUnstakeCall(param),
		}
	case 16:
		return &pbgear.StakingPallet_310_CallForceNewEraAlwaysCall{
			CallForceNewEraAlwaysCall: To_Staking_ForceNewEraAlwaysCall(param),
		}
	case 17:
		return &pbgear.StakingPallet_310_CallCancelDeferredSlashCall{
			CallCancelDeferredSlashCall: To_Staking_CancelDeferredSlashCall(param),
		}
	case 18:
		return &pbgear.StakingPallet_310_CallPayoutStakersCall{
			CallPayoutStakersCall: To_Staking_PayoutStakersCall(param),
		}
	case 19:
		return &pbgear.StakingPallet_310_CallRebondCall{
			CallRebondCall: To_Staking_RebondCall(param),
		}
	case 20:
		return &pbgear.StakingPallet_310_CallReapStashCall{
			CallReapStashCall: To_Staking_ReapStashCall(param),
		}
	case 21:
		return &pbgear.StakingPallet_310_CallKickCall{
			CallKickCall: To_Staking_KickCall(param),
		}
	case 22:
		return &pbgear.StakingPallet_310_CallSetStakingConfigsCall{
			CallSetStakingConfigsCall: To_Staking_SetStakingConfigsCall(param),
		}
	case 23:
		return &pbgear.StakingPallet_310_CallChillOtherCall{
			CallChillOtherCall: To_Staking_ChillOtherCall(param),
		}
	case 24:
		return &pbgear.StakingPallet_310_CallForceApplyMinCommissionCall{
			CallForceApplyMinCommissionCall: To_Staking_ForceApplyMinCommissionCall(param),
		}
	case 25:
		return &pbgear.StakingPallet_310_CallSetMinCommissionCall{
			CallSetMinCommissionCall: To_Staking_SetMinCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingPallet_1030(in any) *pbgear.StakingPallet_1030 {
	out := &pbgear.StakingPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingPallet_1030_CallBondCall{
			CallBondCall: To_Staking_BondCall(param),
		}
	case 1:
		return &pbgear.StakingPallet_1030_CallBondExtraCall{
			CallBondExtraCall: To_Staking_BondExtraCall(param),
		}
	case 2:
		return &pbgear.StakingPallet_1030_CallUnbondCall{
			CallUnbondCall: To_Staking_UnbondCall(param),
		}
	case 3:
		return &pbgear.StakingPallet_1030_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_Staking_WithdrawUnbondedCall(param),
		}
	case 4:
		return &pbgear.StakingPallet_1030_CallValidateCall{
			CallValidateCall: To_Staking_ValidateCall(param),
		}
	case 5:
		return &pbgear.StakingPallet_1030_CallNominateCall{
			CallNominateCall: To_Staking_NominateCall(param),
		}
	case 6:
		return &pbgear.StakingPallet_1030_CallChillCall{
			CallChillCall: To_Staking_ChillCall(param),
		}
	case 7:
		return &pbgear.StakingPallet_1030_CallSetPayeeCall{
			CallSetPayeeCall: To_Staking_SetPayeeCall(param),
		}
	case 8:
		return &pbgear.StakingPallet_1030_CallSetControllerCall{
			CallSetControllerCall: To_Staking_SetControllerCall(param),
		}
	case 9:
		return &pbgear.StakingPallet_1030_CallSetValidatorCountCall{
			CallSetValidatorCountCall: To_Staking_SetValidatorCountCall(param),
		}
	case 10:
		return &pbgear.StakingPallet_1030_CallIncreaseValidatorCountCall{
			CallIncreaseValidatorCountCall: To_Staking_IncreaseValidatorCountCall(param),
		}
	case 11:
		return &pbgear.StakingPallet_1030_CallScaleValidatorCountCall{
			CallScaleValidatorCountCall: To_Staking_ScaleValidatorCountCall(param),
		}
	case 12:
		return &pbgear.StakingPallet_1030_CallForceNoErasCall{
			CallForceNoErasCall: To_Staking_ForceNoErasCall(param),
		}
	case 13:
		return &pbgear.StakingPallet_1030_CallForceNewEraCall{
			CallForceNewEraCall: To_Staking_ForceNewEraCall(param),
		}
	case 14:
		return &pbgear.StakingPallet_1030_CallSetInvulnerablesCall{
			CallSetInvulnerablesCall: To_Staking_SetInvulnerablesCall(param),
		}
	case 15:
		return &pbgear.StakingPallet_1030_CallForceUnstakeCall{
			CallForceUnstakeCall: To_Staking_ForceUnstakeCall(param),
		}
	case 16:
		return &pbgear.StakingPallet_1030_CallForceNewEraAlwaysCall{
			CallForceNewEraAlwaysCall: To_Staking_ForceNewEraAlwaysCall(param),
		}
	case 17:
		return &pbgear.StakingPallet_1030_CallCancelDeferredSlashCall{
			CallCancelDeferredSlashCall: To_Staking_CancelDeferredSlashCall(param),
		}
	case 18:
		return &pbgear.StakingPallet_1030_CallPayoutStakersCall{
			CallPayoutStakersCall: To_Staking_PayoutStakersCall(param),
		}
	case 19:
		return &pbgear.StakingPallet_1030_CallRebondCall{
			CallRebondCall: To_Staking_RebondCall(param),
		}
	case 20:
		return &pbgear.StakingPallet_1030_CallReapStashCall{
			CallReapStashCall: To_Staking_ReapStashCall(param),
		}
	case 21:
		return &pbgear.StakingPallet_1030_CallKickCall{
			CallKickCall: To_Staking_KickCall(param),
		}
	case 22:
		return &pbgear.StakingPallet_1030_CallSetStakingConfigsCall{
			CallSetStakingConfigsCall: To_Staking_SetStakingConfigsCall(param),
		}
	case 23:
		return &pbgear.StakingPallet_1030_CallChillOtherCall{
			CallChillOtherCall: To_Staking_ChillOtherCall(param),
		}
	case 24:
		return &pbgear.StakingPallet_1030_CallForceApplyMinCommissionCall{
			CallForceApplyMinCommissionCall: To_Staking_ForceApplyMinCommissionCall(param),
		}
	case 25:
		return &pbgear.StakingPallet_1030_CallSetMinCommissionCall{
			CallSetMinCommissionCall: To_Staking_SetMinCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_StakingPallet_1040(in any) *pbgear.StakingPallet_1040 {
	out := &pbgear.StakingPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_StakingPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_StakingPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.StakingPallet_1040_CallBondCall{
			CallBondCall: To_Staking_BondCall(param),
		}
	case 1:
		return &pbgear.StakingPallet_1040_CallBondExtraCall{
			CallBondExtraCall: To_Staking_BondExtraCall(param),
		}
	case 2:
		return &pbgear.StakingPallet_1040_CallUnbondCall{
			CallUnbondCall: To_Staking_UnbondCall(param),
		}
	case 3:
		return &pbgear.StakingPallet_1040_CallWithdrawUnbondedCall{
			CallWithdrawUnbondedCall: To_Staking_WithdrawUnbondedCall(param),
		}
	case 4:
		return &pbgear.StakingPallet_1040_CallValidateCall{
			CallValidateCall: To_Staking_ValidateCall(param),
		}
	case 5:
		return &pbgear.StakingPallet_1040_CallNominateCall{
			CallNominateCall: To_Staking_NominateCall(param),
		}
	case 6:
		return &pbgear.StakingPallet_1040_CallChillCall{
			CallChillCall: To_Staking_ChillCall(param),
		}
	case 7:
		return &pbgear.StakingPallet_1040_CallSetPayeeCall{
			CallSetPayeeCall: To_Staking_SetPayeeCall(param),
		}
	case 8:
		return &pbgear.StakingPallet_1040_CallSetControllerCall{
			CallSetControllerCall: To_Staking_SetControllerCall(param),
		}
	case 9:
		return &pbgear.StakingPallet_1040_CallSetValidatorCountCall{
			CallSetValidatorCountCall: To_Staking_SetValidatorCountCall(param),
		}
	case 10:
		return &pbgear.StakingPallet_1040_CallIncreaseValidatorCountCall{
			CallIncreaseValidatorCountCall: To_Staking_IncreaseValidatorCountCall(param),
		}
	case 11:
		return &pbgear.StakingPallet_1040_CallScaleValidatorCountCall{
			CallScaleValidatorCountCall: To_Staking_ScaleValidatorCountCall(param),
		}
	case 12:
		return &pbgear.StakingPallet_1040_CallForceNoErasCall{
			CallForceNoErasCall: To_Staking_ForceNoErasCall(param),
		}
	case 13:
		return &pbgear.StakingPallet_1040_CallForceNewEraCall{
			CallForceNewEraCall: To_Staking_ForceNewEraCall(param),
		}
	case 14:
		return &pbgear.StakingPallet_1040_CallSetInvulnerablesCall{
			CallSetInvulnerablesCall: To_Staking_SetInvulnerablesCall(param),
		}
	case 15:
		return &pbgear.StakingPallet_1040_CallForceUnstakeCall{
			CallForceUnstakeCall: To_Staking_ForceUnstakeCall(param),
		}
	case 16:
		return &pbgear.StakingPallet_1040_CallForceNewEraAlwaysCall{
			CallForceNewEraAlwaysCall: To_Staking_ForceNewEraAlwaysCall(param),
		}
	case 17:
		return &pbgear.StakingPallet_1040_CallCancelDeferredSlashCall{
			CallCancelDeferredSlashCall: To_Staking_CancelDeferredSlashCall(param),
		}
	case 18:
		return &pbgear.StakingPallet_1040_CallPayoutStakersCall{
			CallPayoutStakersCall: To_Staking_PayoutStakersCall(param),
		}
	case 19:
		return &pbgear.StakingPallet_1040_CallRebondCall{
			CallRebondCall: To_Staking_RebondCall(param),
		}
	case 20:
		return &pbgear.StakingPallet_1040_CallReapStashCall{
			CallReapStashCall: To_Staking_ReapStashCall(param),
		}
	case 21:
		return &pbgear.StakingPallet_1040_CallKickCall{
			CallKickCall: To_Staking_KickCall(param),
		}
	case 22:
		return &pbgear.StakingPallet_1040_CallSetStakingConfigsCall{
			CallSetStakingConfigsCall: To_Staking_SetStakingConfigsCall(param),
		}
	case 23:
		return &pbgear.StakingPallet_1040_CallChillOtherCall{
			CallChillOtherCall: To_Staking_ChillOtherCall(param),
		}
	case 24:
		return &pbgear.StakingPallet_1040_CallForceApplyMinCommissionCall{
			CallForceApplyMinCommissionCall: To_Staking_ForceApplyMinCommissionCall(param),
		}
	case 25:
		return &pbgear.StakingPallet_1040_CallSetMinCommissionCall{
			CallSetMinCommissionCall: To_Staking_SetMinCommissionCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_BondCall_100(in any) *pbgear.Staking_BondCall_100 {
	out := &pbgear.Staking_BondCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Controller
	v0 := To_OneOf_Staking_BondCall_100_controller(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Controller").Set(reflect.ValueOf(v0))
	// primitive field Value
	out.Value = To_string(v.ValueAt(1))
	// oneOf field Payee
	v2 := To_OneOf_Staking_BondCall_100_payee(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v2))

	return out //from message
}
func To_Staking_BondCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_BondCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingBondCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingBondCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Staking_BondCall_100_controller(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_BondCall_100_ControllerId{
			ControllerId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_BondCall_100_ControllerIndex{
			ControllerIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_BondCall_100_ControllerRaw{
			ControllerRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_BondCall_100_ControllerAddress32{
			ControllerAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_BondCall_100_ControllerAddress20{
			ControllerAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Staking_BondCall_100_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_BondCall_100_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_BondCall_100_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_BondCall_100_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_BondCall_100_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_BondCall_100_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_BondCall_1030(in any) *pbgear.Staking_BondCall_1030 {
	out := &pbgear.Staking_BondCall_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value
	out.Value = To_string(v.ValueAt(0))
	// oneOf field Payee
	v1 := To_OneOf_Staking_BondCall_1030_payee(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Staking_BondCall_1030_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_BondCall_1030(in)
	out := &pbgearextrinsic.Extrinsic_StakingBondCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingBondCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Staking_BondCall_1030_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_BondCall_1030_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_BondCall_1030_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_BondCall_1030_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_BondCall_1030_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_BondCall_1030_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_BondExtraCall_100(in any) *pbgear.Staking_BondExtraCall_100 {
	out := &pbgear.Staking_BondExtraCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MaxAdditional
	out.MaxAdditional = To_string(v.ValueAt(0))

	return out //from message
}
func To_Staking_BondExtraCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_BondExtraCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingBondExtraCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingBondExtraCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_CancelDeferredSlashCall_100(in any) *pbgear.Staking_CancelDeferredSlashCall_100 {
	out := &pbgear.Staking_CancelDeferredSlashCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Era
	out.Era = To_uint32(v.ValueAt(0))
	// primitive field SlashIndices
	out.SlashIndices = To_Repeated_uint32(v.ValueAt(1))

	return out //from message
}
func To_Staking_CancelDeferredSlashCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_CancelDeferredSlashCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingCancelDeferredSlashCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingCancelDeferredSlashCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_ChillCall_100(in any) *pbgear.Staking_ChillCall_100 {
	out := &pbgear.Staking_ChillCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ChillOtherCall_100(in any) *pbgear.Staking_ChillOtherCall_100 {
	out := &pbgear.Staking_ChillOtherCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Controller To_SpCoreCryptoAccountId32(w)
	out.Controller = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}
func To_Staking_ChillOtherCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_ChillOtherCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingChillOtherCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingChillOtherCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_ChillThreshold_100(in any) *pbgear.Staking_ChillThreshold_100 {
	out := &pbgear.Staking_ChillThreshold_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ChillThreshold
	v0 := To_OneOf_Staking_ChillThreshold_100_chill_threshold(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ChillThreshold").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_ChillThreshold_100_chill_threshold(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_ChillThreshold_100_ChillThresholdNoop{
			ChillThresholdNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_ChillThreshold_100_ChillThresholdSet{
			ChillThresholdSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_ChillThreshold_100_ChillThresholdRemove{
			ChillThresholdRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_ChillThreshold_310(in any) *pbgear.Staking_ChillThreshold_310 {
	out := &pbgear.Staking_ChillThreshold_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ChillThreshold
	v0 := To_OneOf_Staking_ChillThreshold_310_chill_threshold(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ChillThreshold").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_ChillThreshold_310_chill_threshold(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_ChillThreshold_310_ChillThresholdNoop{
			ChillThresholdNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_ChillThreshold_310_ChillThresholdSet{
			ChillThresholdSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_ChillThreshold_310_ChillThresholdRemove{
			ChillThresholdRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_ChillThreshold_1030(in any) *pbgear.Staking_ChillThreshold_1030 {
	out := &pbgear.Staking_ChillThreshold_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ChillThreshold
	v0 := To_OneOf_Staking_ChillThreshold_1030_chill_threshold(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ChillThreshold").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_ChillThreshold_1030_chill_threshold(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_ChillThreshold_1030_ChillThresholdNoop{
			ChillThresholdNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_ChillThreshold_1030_ChillThresholdSet{
			ChillThresholdSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_ChillThreshold_1030_ChillThresholdRemove{
			ChillThresholdRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_ChillThreshold_1040(in any) *pbgear.Staking_ChillThreshold_1040 {
	out := &pbgear.Staking_ChillThreshold_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ChillThreshold
	v0 := To_OneOf_Staking_ChillThreshold_1040_chill_threshold(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ChillThreshold").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_ChillThreshold_1040_chill_threshold(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_ChillThreshold_1040_ChillThresholdNoop{
			ChillThresholdNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_ChillThreshold_1040_ChillThresholdSet{
			ChillThresholdSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_ChillThreshold_1040_ChillThresholdRemove{
			ChillThresholdRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Controller_310(in any) *pbgear.Staking_Controller_310 {
	out := &pbgear.Staking_Controller_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Controller
	v0 := To_OneOf_Staking_Controller_310_controller(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Controller").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Controller_310_controller(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Controller_310_ControllerId{
			ControllerId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_Controller_310_ControllerIndex{
			ControllerIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_Controller_310_ControllerRaw{
			ControllerRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_Controller_310_ControllerAddress32{
			ControllerAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_Controller_310_ControllerAddress20{
			ControllerAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_ForceApplyMinCommissionCall_100(in any) *pbgear.Staking_ForceApplyMinCommissionCall_100 {
	out := &pbgear.Staking_ForceApplyMinCommissionCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field ValidatorStash To_SpCoreCryptoAccountId32(w)
	out.ValidatorStash = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}
func To_Staking_ForceApplyMinCommissionCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_ForceApplyMinCommissionCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingForceApplyMinCommissionCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingForceApplyMinCommissionCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_ForceNewEraAlwaysCall_100(in any) *pbgear.Staking_ForceNewEraAlwaysCall_100 {
	out := &pbgear.Staking_ForceNewEraAlwaysCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ForceNewEraCall_100(in any) *pbgear.Staking_ForceNewEraCall_100 {
	out := &pbgear.Staking_ForceNewEraCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ForceNoErasCall_100(in any) *pbgear.Staking_ForceNoErasCall_100 {
	out := &pbgear.Staking_ForceNoErasCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ForceUnstakeCall_100(in any) *pbgear.Staking_ForceUnstakeCall_100 {
	out := &pbgear.Staking_ForceUnstakeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field NumSlashingSpans
	out.NumSlashingSpans = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Staking_ForceUnstakeCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_ForceUnstakeCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingForceUnstakeCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingForceUnstakeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_IncreaseValidatorCountCall_100(in any) *pbgear.Staking_IncreaseValidatorCountCall_100 {
	out := &pbgear.Staking_IncreaseValidatorCountCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Additional
	out.Additional = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Staking_IncreaseValidatorCountCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_IncreaseValidatorCountCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingIncreaseValidatorCountCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingIncreaseValidatorCountCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_KickCall_100(in any) *pbgear.Staking_KickCall_100 {
	out := &pbgear.Staking_KickCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Who
	out.Who = To_Repeated_Staking_KickCall_100_who(v.ValueAt(0))

	return out //from message
}
func To_Staking_KickCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_KickCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingKickCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingKickCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Staking_KickCall_100_who(in any) []*pbgear.SpRuntimeMultiaddressMultiAddress {
	items := in.([]interface{})

	var out []*pbgear.SpRuntimeMultiaddressMultiAddress
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpRuntimeMultiaddressMultiAddress(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Staking_MaxNominatorCount_100(in any) *pbgear.Staking_MaxNominatorCount_100 {
	out := &pbgear.Staking_MaxNominatorCount_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxNominatorCount
	v0 := To_OneOf_Staking_MaxNominatorCount_100_max_nominator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxNominatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxNominatorCount_100_max_nominator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxNominatorCount_100_MaxNominatorCountNoop{
			MaxNominatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxNominatorCount_100_MaxNominatorCountSet{
			MaxNominatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxNominatorCount_100_MaxNominatorCountRemove{
			MaxNominatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MaxNominatorCount_310(in any) *pbgear.Staking_MaxNominatorCount_310 {
	out := &pbgear.Staking_MaxNominatorCount_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxNominatorCount
	v0 := To_OneOf_Staking_MaxNominatorCount_310_max_nominator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxNominatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxNominatorCount_310_max_nominator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxNominatorCount_310_MaxNominatorCountNoop{
			MaxNominatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxNominatorCount_310_MaxNominatorCountSet{
			MaxNominatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxNominatorCount_310_MaxNominatorCountRemove{
			MaxNominatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MaxNominatorCount_1030(in any) *pbgear.Staking_MaxNominatorCount_1030 {
	out := &pbgear.Staking_MaxNominatorCount_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxNominatorCount
	v0 := To_OneOf_Staking_MaxNominatorCount_1030_max_nominator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxNominatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxNominatorCount_1030_max_nominator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxNominatorCount_1030_MaxNominatorCountNoop{
			MaxNominatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxNominatorCount_1030_MaxNominatorCountSet{
			MaxNominatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxNominatorCount_1030_MaxNominatorCountRemove{
			MaxNominatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MaxNominatorCount_1040(in any) *pbgear.Staking_MaxNominatorCount_1040 {
	out := &pbgear.Staking_MaxNominatorCount_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxNominatorCount
	v0 := To_OneOf_Staking_MaxNominatorCount_1040_max_nominator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxNominatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxNominatorCount_1040_max_nominator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxNominatorCount_1040_MaxNominatorCountNoop{
			MaxNominatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxNominatorCount_1040_MaxNominatorCountSet{
			MaxNominatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxNominatorCount_1040_MaxNominatorCountRemove{
			MaxNominatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MaxValidatorCount_100(in any) *pbgear.Staking_MaxValidatorCount_100 {
	out := &pbgear.Staking_MaxValidatorCount_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxValidatorCount
	v0 := To_OneOf_Staking_MaxValidatorCount_100_max_validator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxValidatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxValidatorCount_100_max_validator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxValidatorCount_100_MaxValidatorCountNoop{
			MaxValidatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxValidatorCount_100_MaxValidatorCountSet{
			MaxValidatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxValidatorCount_100_MaxValidatorCountRemove{
			MaxValidatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MaxValidatorCount_310(in any) *pbgear.Staking_MaxValidatorCount_310 {
	out := &pbgear.Staking_MaxValidatorCount_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxValidatorCount
	v0 := To_OneOf_Staking_MaxValidatorCount_310_max_validator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxValidatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxValidatorCount_310_max_validator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxValidatorCount_310_MaxValidatorCountNoop{
			MaxValidatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxValidatorCount_310_MaxValidatorCountSet{
			MaxValidatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxValidatorCount_310_MaxValidatorCountRemove{
			MaxValidatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MaxValidatorCount_1030(in any) *pbgear.Staking_MaxValidatorCount_1030 {
	out := &pbgear.Staking_MaxValidatorCount_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxValidatorCount
	v0 := To_OneOf_Staking_MaxValidatorCount_1030_max_validator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxValidatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxValidatorCount_1030_max_validator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxValidatorCount_1030_MaxValidatorCountNoop{
			MaxValidatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxValidatorCount_1030_MaxValidatorCountSet{
			MaxValidatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxValidatorCount_1030_MaxValidatorCountRemove{
			MaxValidatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MaxValidatorCount_1040(in any) *pbgear.Staking_MaxValidatorCount_1040 {
	out := &pbgear.Staking_MaxValidatorCount_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MaxValidatorCount
	v0 := To_OneOf_Staking_MaxValidatorCount_1040_max_validator_count(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MaxValidatorCount").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MaxValidatorCount_1040_max_validator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MaxValidatorCount_1040_MaxValidatorCountNoop{
			MaxValidatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MaxValidatorCount_1040_MaxValidatorCountSet{
			MaxValidatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MaxValidatorCount_1040_MaxValidatorCountRemove{
			MaxValidatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinCommission_100(in any) *pbgear.Staking_MinCommission_100 {
	out := &pbgear.Staking_MinCommission_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCommission
	v0 := To_OneOf_Staking_MinCommission_100_min_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinCommission_100_min_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinCommission_100_MinCommissionNoop{
			MinCommissionNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinCommission_100_MinCommissionSet{
			MinCommissionSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinCommission_100_MinCommissionRemove{
			MinCommissionRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinCommission_310(in any) *pbgear.Staking_MinCommission_310 {
	out := &pbgear.Staking_MinCommission_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCommission
	v0 := To_OneOf_Staking_MinCommission_310_min_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinCommission_310_min_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinCommission_310_MinCommissionNoop{
			MinCommissionNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinCommission_310_MinCommissionSet{
			MinCommissionSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinCommission_310_MinCommissionRemove{
			MinCommissionRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinCommission_1030(in any) *pbgear.Staking_MinCommission_1030 {
	out := &pbgear.Staking_MinCommission_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCommission
	v0 := To_OneOf_Staking_MinCommission_1030_min_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinCommission_1030_min_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinCommission_1030_MinCommissionNoop{
			MinCommissionNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinCommission_1030_MinCommissionSet{
			MinCommissionSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinCommission_1030_MinCommissionRemove{
			MinCommissionRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinCommission_1040(in any) *pbgear.Staking_MinCommission_1040 {
	out := &pbgear.Staking_MinCommission_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinCommission
	v0 := To_OneOf_Staking_MinCommission_1040_min_commission(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinCommission").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinCommission_1040_min_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinCommission_1040_MinCommissionNoop{
			MinCommissionNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinCommission_1040_MinCommissionSet{
			MinCommissionSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinCommission_1040_MinCommissionRemove{
			MinCommissionRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinNominatorBond_100(in any) *pbgear.Staking_MinNominatorBond_100 {
	out := &pbgear.Staking_MinNominatorBond_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinNominatorBond
	v0 := To_OneOf_Staking_MinNominatorBond_100_min_nominator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinNominatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinNominatorBond_100_min_nominator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinNominatorBond_100_MinNominatorBondNoop{
			MinNominatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinNominatorBond_100_MinNominatorBondSet{
			MinNominatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinNominatorBond_100_MinNominatorBondRemove{
			MinNominatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinNominatorBond_310(in any) *pbgear.Staking_MinNominatorBond_310 {
	out := &pbgear.Staking_MinNominatorBond_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinNominatorBond
	v0 := To_OneOf_Staking_MinNominatorBond_310_min_nominator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinNominatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinNominatorBond_310_min_nominator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinNominatorBond_310_MinNominatorBondNoop{
			MinNominatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinNominatorBond_310_MinNominatorBondSet{
			MinNominatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinNominatorBond_310_MinNominatorBondRemove{
			MinNominatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinNominatorBond_1030(in any) *pbgear.Staking_MinNominatorBond_1030 {
	out := &pbgear.Staking_MinNominatorBond_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinNominatorBond
	v0 := To_OneOf_Staking_MinNominatorBond_1030_min_nominator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinNominatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinNominatorBond_1030_min_nominator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinNominatorBond_1030_MinNominatorBondNoop{
			MinNominatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinNominatorBond_1030_MinNominatorBondSet{
			MinNominatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinNominatorBond_1030_MinNominatorBondRemove{
			MinNominatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinNominatorBond_1040(in any) *pbgear.Staking_MinNominatorBond_1040 {
	out := &pbgear.Staking_MinNominatorBond_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinNominatorBond
	v0 := To_OneOf_Staking_MinNominatorBond_1040_min_nominator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinNominatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinNominatorBond_1040_min_nominator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinNominatorBond_1040_MinNominatorBondNoop{
			MinNominatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinNominatorBond_1040_MinNominatorBondSet{
			MinNominatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinNominatorBond_1040_MinNominatorBondRemove{
			MinNominatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinValidatorBond_100(in any) *pbgear.Staking_MinValidatorBond_100 {
	out := &pbgear.Staking_MinValidatorBond_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinValidatorBond
	v0 := To_OneOf_Staking_MinValidatorBond_100_min_validator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinValidatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinValidatorBond_100_min_validator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinValidatorBond_100_MinValidatorBondNoop{
			MinValidatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinValidatorBond_100_MinValidatorBondSet{
			MinValidatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinValidatorBond_100_MinValidatorBondRemove{
			MinValidatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinValidatorBond_310(in any) *pbgear.Staking_MinValidatorBond_310 {
	out := &pbgear.Staking_MinValidatorBond_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinValidatorBond
	v0 := To_OneOf_Staking_MinValidatorBond_310_min_validator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinValidatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinValidatorBond_310_min_validator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinValidatorBond_310_MinValidatorBondNoop{
			MinValidatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinValidatorBond_310_MinValidatorBondSet{
			MinValidatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinValidatorBond_310_MinValidatorBondRemove{
			MinValidatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinValidatorBond_1030(in any) *pbgear.Staking_MinValidatorBond_1030 {
	out := &pbgear.Staking_MinValidatorBond_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinValidatorBond
	v0 := To_OneOf_Staking_MinValidatorBond_1030_min_validator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinValidatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinValidatorBond_1030_min_validator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinValidatorBond_1030_MinValidatorBondNoop{
			MinValidatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinValidatorBond_1030_MinValidatorBondSet{
			MinValidatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinValidatorBond_1030_MinValidatorBondRemove{
			MinValidatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_MinValidatorBond_1040(in any) *pbgear.Staking_MinValidatorBond_1040 {
	out := &pbgear.Staking_MinValidatorBond_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinValidatorBond
	v0 := To_OneOf_Staking_MinValidatorBond_1040_min_validator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinValidatorBond").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_MinValidatorBond_1040_min_validator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_MinValidatorBond_1040_MinValidatorBondNoop{
			MinValidatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_MinValidatorBond_1040_MinValidatorBondSet{
			MinValidatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_MinValidatorBond_1040_MinValidatorBondRemove{
			MinValidatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_NominateCall_100(in any) *pbgear.Staking_NominateCall_100 {
	out := &pbgear.Staking_NominateCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Targets
	out.Targets = To_Repeated_Staking_NominateCall_100_targets(v.ValueAt(0))

	return out //from message
}
func To_Staking_NominateCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_NominateCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingNominateCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingNominateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Staking_NominateCall_100_targets(in any) []*pbgear.SpRuntimeMultiaddressMultiAddress {
	items := in.([]interface{})

	var out []*pbgear.SpRuntimeMultiaddressMultiAddress
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpRuntimeMultiaddressMultiAddress(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Staking_Payee_100(in any) *pbgear.Staking_Payee_100 {
	out := &pbgear.Staking_Payee_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Payee
	v0 := To_OneOf_Staking_Payee_100_payee(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Payee_100_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Payee_100_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_Payee_100_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_Payee_100_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_Payee_100_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_Payee_100_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Payee_310(in any) *pbgear.Staking_Payee_310 {
	out := &pbgear.Staking_Payee_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Payee
	v0 := To_OneOf_Staking_Payee_310_payee(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Payee_310_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Payee_310_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_Payee_310_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_Payee_310_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_Payee_310_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_Payee_310_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Payee_1030(in any) *pbgear.Staking_Payee_1030 {
	out := &pbgear.Staking_Payee_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Payee
	v0 := To_OneOf_Staking_Payee_1030_payee(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Payee_1030_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Payee_1030_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_Payee_1030_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_Payee_1030_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_Payee_1030_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_Payee_1030_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Payee_1040(in any) *pbgear.Staking_Payee_1040 {
	out := &pbgear.Staking_Payee_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Payee
	v0 := To_OneOf_Staking_Payee_1040_payee(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Payee_1040_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Payee_1040_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_Payee_1040_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_Payee_1040_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_Payee_1040_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_Payee_1040_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Payee_1400(in any) *pbgear.Staking_Payee_1400 {
	out := &pbgear.Staking_Payee_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Payee
	v0 := To_OneOf_Staking_Payee_1400_payee(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Payee_1400_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Payee_1400_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_Payee_1400_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_Payee_1400_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_Payee_1400_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_Payee_1400_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_PayoutStakersCall_100(in any) *pbgear.Staking_PayoutStakersCall_100 {
	out := &pbgear.Staking_PayoutStakersCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field ValidatorStash To_SpCoreCryptoAccountId32(w)
	out.ValidatorStash = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field Era
	out.Era = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Staking_PayoutStakersCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_PayoutStakersCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingPayoutStakersCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingPayoutStakersCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_ReapStashCall_100(in any) *pbgear.Staking_ReapStashCall_100 {
	out := &pbgear.Staking_ReapStashCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Stash To_SpCoreCryptoAccountId32(w)
	out.Stash = To_SpCoreCryptoAccountId32(v.ValueAt(0))
	// primitive field NumSlashingSpans
	out.NumSlashingSpans = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Staking_ReapStashCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_ReapStashCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingReapStashCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingReapStashCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_RebondCall_100(in any) *pbgear.Staking_RebondCall_100 {
	out := &pbgear.Staking_RebondCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value
	out.Value = To_string(v.ValueAt(0))

	return out //from message
}
func To_Staking_RebondCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_RebondCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingRebondCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingRebondCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_ScaleValidatorCountCall_100(in any) *pbgear.Staking_ScaleValidatorCountCall_100 {
	out := &pbgear.Staking_ScaleValidatorCountCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Factor To_SpArithmeticPerThingsPercent(w)
	out.Factor = To_SpArithmeticPerThingsPercent(v.ValueAt(0))

	return out //from message
}
func To_Staking_ScaleValidatorCountCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_ScaleValidatorCountCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingScaleValidatorCountCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingScaleValidatorCountCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_SetControllerCall_100(in any) *pbgear.Staking_SetControllerCall_100 {
	out := &pbgear.Staking_SetControllerCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Controller
	v0 := To_OneOf_Staking_SetControllerCall_100_controller(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Controller").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Staking_SetControllerCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_SetControllerCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingSetControllerCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingSetControllerCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Staking_SetControllerCall_100_controller(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetControllerCall_100_ControllerId{
			ControllerId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_SetControllerCall_100_ControllerIndex{
			ControllerIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_SetControllerCall_100_ControllerRaw{
			ControllerRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_SetControllerCall_100_ControllerAddress32{
			ControllerAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_SetControllerCall_100_ControllerAddress20{
			ControllerAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_SetControllerCall_1030(in any) *pbgear.Staking_SetControllerCall_1030 {
	out := &pbgear.Staking_SetControllerCall_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_SetInvulnerablesCall_100(in any) *pbgear.Staking_SetInvulnerablesCall_100 {
	out := &pbgear.Staking_SetInvulnerablesCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Invulnerables
	out.Invulnerables = To_Repeated_Staking_SetInvulnerablesCall_100_invulnerables(v.ValueAt(0))

	return out //from message
}
func To_Staking_SetInvulnerablesCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_SetInvulnerablesCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingSetInvulnerablesCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingSetInvulnerablesCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Staking_SetInvulnerablesCall_100_invulnerables(in any) []*pbgear.SpCoreCryptoAccountId32 {
	items := in.([]interface{})

	var out []*pbgear.SpCoreCryptoAccountId32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreCryptoAccountId32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Staking_SetMinCommissionCall_100(in any) *pbgear.Staking_SetMinCommissionCall_100 {
	out := &pbgear.Staking_SetMinCommissionCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field New To_SpArithmeticPerThingsPerbill(w)
	out.New = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))

	return out //from message
}
func To_Staking_SetMinCommissionCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_SetMinCommissionCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingSetMinCommissionCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingSetMinCommissionCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_SetPayeeCall_100(in any) *pbgear.Staking_SetPayeeCall_100 {
	out := &pbgear.Staking_SetPayeeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Payee
	v0 := To_OneOf_Staking_SetPayeeCall_100_payee(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Payee").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Staking_SetPayeeCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_SetPayeeCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingSetPayeeCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingSetPayeeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Staking_SetPayeeCall_100_payee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetPayeeCall_100_PayeeStaked{
			PayeeStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_SetPayeeCall_100_PayeeStash{
			PayeeStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_SetPayeeCall_100_PayeeController{
			PayeeController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_SetPayeeCall_100_PayeeAccount{
			PayeeAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_SetPayeeCall_100_PayeeNone{
			PayeeNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_SetStakingConfigsCall_100(in any) *pbgear.Staking_SetStakingConfigsCall_100 {
	out := &pbgear.Staking_SetStakingConfigsCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field MinNominatorBond
	v0 := To_OneOf_Staking_SetStakingConfigsCall_100_min_nominator_bond(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("MinNominatorBond").Set(reflect.ValueOf(v0))
	// oneOf field MinValidatorBond
	v1 := To_OneOf_Staking_SetStakingConfigsCall_100_min_validator_bond(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("MinValidatorBond").Set(reflect.ValueOf(v1))
	// oneOf field MaxNominatorCount
	v2 := To_OneOf_Staking_SetStakingConfigsCall_100_max_nominator_count(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("MaxNominatorCount").Set(reflect.ValueOf(v2))
	// oneOf field MaxValidatorCount
	v3 := To_OneOf_Staking_SetStakingConfigsCall_100_max_validator_count(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("MaxValidatorCount").Set(reflect.ValueOf(v3))
	// oneOf field ChillThreshold
	v4 := To_OneOf_Staking_SetStakingConfigsCall_100_chill_threshold(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("ChillThreshold").Set(reflect.ValueOf(v4))
	// oneOf field MinCommission
	v5 := To_OneOf_Staking_SetStakingConfigsCall_100_min_commission(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("MinCommission").Set(reflect.ValueOf(v5))

	return out //from message
}
func To_Staking_SetStakingConfigsCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_SetStakingConfigsCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingSetStakingConfigsCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingSetStakingConfigsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Staking_SetStakingConfigsCall_100_min_nominator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinNominatorBondNoop{
			MinNominatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinNominatorBondSet{
			MinNominatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinNominatorBondRemove{
			MinNominatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Staking_SetStakingConfigsCall_100_min_validator_bond(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinValidatorBondNoop{
			MinValidatorBondNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinValidatorBondSet{
			MinValidatorBondSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinValidatorBondRemove{
			MinValidatorBondRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Staking_SetStakingConfigsCall_100_max_nominator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetStakingConfigsCall_100_MaxNominatorCountNoop{
			MaxNominatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_SetStakingConfigsCall_100_MaxNominatorCountSet{
			MaxNominatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_SetStakingConfigsCall_100_MaxNominatorCountRemove{
			MaxNominatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Staking_SetStakingConfigsCall_100_max_validator_count(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetStakingConfigsCall_100_MaxValidatorCountNoop{
			MaxValidatorCountNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_SetStakingConfigsCall_100_MaxValidatorCountSet{
			MaxValidatorCountSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_SetStakingConfigsCall_100_MaxValidatorCountRemove{
			MaxValidatorCountRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Staking_SetStakingConfigsCall_100_chill_threshold(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetStakingConfigsCall_100_ChillThresholdNoop{
			ChillThresholdNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_SetStakingConfigsCall_100_ChillThresholdSet{
			ChillThresholdSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_SetStakingConfigsCall_100_ChillThresholdRemove{
			ChillThresholdRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Staking_SetStakingConfigsCall_100_min_commission(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinCommissionNoop{
			MinCommissionNoop: To_Staking_Noop(param),
		}
	case 1:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinCommissionSet{
			MinCommissionSet: To_Staking_Set(param),
		}
	case 2:
		return &pbgear.Staking_SetStakingConfigsCall_100_MinCommissionRemove{
			MinCommissionRemove: To_Staking_Remove(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_SetValidatorCountCall_100(in any) *pbgear.Staking_SetValidatorCountCall_100 {
	out := &pbgear.Staking_SetValidatorCountCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field New
	out.New = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Staking_SetValidatorCountCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_SetValidatorCountCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingSetValidatorCountCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingSetValidatorCountCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_Targets_100(in any) *pbgear.Staking_Targets_100 {
	out := &pbgear.Staking_Targets_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Targets
	v0 := To_OneOf_Staking_Targets_100_targets(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Targets").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Targets_100_targets(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Targets_100_TargetsId{
			TargetsId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_Targets_100_TargetsIndex{
			TargetsIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_Targets_100_TargetsRaw{
			TargetsRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_Targets_100_TargetsAddress32{
			TargetsAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_Targets_100_TargetsAddress20{
			TargetsAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Targets_310(in any) *pbgear.Staking_Targets_310 {
	out := &pbgear.Staking_Targets_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Targets
	v0 := To_OneOf_Staking_Targets_310_targets(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Targets").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Targets_310_targets(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Targets_310_TargetsId{
			TargetsId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_Targets_310_TargetsIndex{
			TargetsIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_Targets_310_TargetsRaw{
			TargetsRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_Targets_310_TargetsAddress32{
			TargetsAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_Targets_310_TargetsAddress20{
			TargetsAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Targets_1030(in any) *pbgear.Staking_Targets_1030 {
	out := &pbgear.Staking_Targets_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Targets
	v0 := To_OneOf_Staking_Targets_1030_targets(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Targets").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Targets_1030_targets(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Targets_1030_TargetsId{
			TargetsId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_Targets_1030_TargetsIndex{
			TargetsIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_Targets_1030_TargetsRaw{
			TargetsRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_Targets_1030_TargetsAddress32{
			TargetsAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_Targets_1030_TargetsAddress20{
			TargetsAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_UnbondCall_100(in any) *pbgear.Staking_UnbondCall_100 {
	out := &pbgear.Staking_UnbondCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value
	out.Value = To_string(v.ValueAt(0))

	return out //from message
}
func To_Staking_UnbondCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_UnbondCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingUnbondCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingUnbondCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_ValidateCall_100(in any) *pbgear.Staking_ValidateCall_100 {
	out := &pbgear.Staking_ValidateCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Prefs To_Staking_PalletStakingValidatorPrefs(w)
	out.Prefs = To_Staking_PalletStakingValidatorPrefs(v.ValueAt(0))

	return out //from message
}
func To_Staking_ValidateCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_ValidateCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingValidateCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingValidateCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Staking_Who_100(in any) *pbgear.Staking_Who_100 {
	out := &pbgear.Staking_Who_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Staking_Who_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Who_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Who_100_WhoId{
			WhoId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_Who_100_WhoIndex{
			WhoIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_Who_100_WhoRaw{
			WhoRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_Who_100_WhoAddress32{
			WhoAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_Who_100_WhoAddress20{
			WhoAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Who_310(in any) *pbgear.Staking_Who_310 {
	out := &pbgear.Staking_Who_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Staking_Who_310_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Who_310_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Who_310_WhoId{
			WhoId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_Who_310_WhoIndex{
			WhoIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_Who_310_WhoRaw{
			WhoRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_Who_310_WhoAddress32{
			WhoAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_Who_310_WhoAddress20{
			WhoAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Who_1030(in any) *pbgear.Staking_Who_1030 {
	out := &pbgear.Staking_Who_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Staking_Who_1030_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Who_1030_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Who_1030_WhoId{
			WhoId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.Staking_Who_1030_WhoIndex{
			WhoIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.Staking_Who_1030_WhoRaw{
			WhoRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.Staking_Who_1030_WhoAddress32{
			WhoAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.Staking_Who_1030_WhoAddress20{
			WhoAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_WithdrawUnbondedCall_100(in any) *pbgear.Staking_WithdrawUnbondedCall_100 {
	out := &pbgear.Staking_WithdrawUnbondedCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field NumSlashingSpans
	out.NumSlashingSpans = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Staking_WithdrawUnbondedCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Staking_WithdrawUnbondedCall_100(in)
	out := &pbgearextrinsic.Extrinsic_StakingWithdrawUnbondedCall{}
	reflect.ValueOf(out).Elem().FieldByName("StakingWithdrawUnbondedCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Success_1030(in any) *pbgear.Success_1030 {
	out := &pbgear.Success_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Sudo_Address20_100(in any) *pbgear.Sudo_Address20_100 {
	out := &pbgear.Sudo_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Sudo_Address32_100(in any) *pbgear.Sudo_Address32_100 {
	out := &pbgear.Sudo_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Sudo_Id_100(in any) *pbgear.Sudo_Id_100 {
	out := &pbgear.Sudo_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Sudo_Index_100(in any) *pbgear.Sudo_Index_100 {
	out := &pbgear.Sudo_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Sudo_TupleNull(w)
	out.Value0 = To_Sudo_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Sudo_Raw_100(in any) *pbgear.Sudo_Raw_100 {
	out := &pbgear.Sudo_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Sudo_TupleNull_100(in any) *pbgear.Sudo_TupleNull_100 {
	out := &pbgear.Sudo_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Sudo_TupleNull_310(in any) *pbgear.Sudo_TupleNull_310 {
	out := &pbgear.Sudo_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_SudoPallet_100(in any) *pbgear.SudoPallet_100 {
	out := &pbgear.SudoPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SudoPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SudoPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SudoPallet_100_CallSudoCall{
			CallSudoCall: To_Sudo_SudoCall(param),
		}
	case 1:
		return &pbgear.SudoPallet_100_CallSudoUncheckedWeightCall{
			CallSudoUncheckedWeightCall: To_Sudo_SudoUncheckedWeightCall(param),
		}
	case 2:
		return &pbgear.SudoPallet_100_CallSetKeyCall{
			CallSetKeyCall: To_Sudo_SetKeyCall(param),
		}
	case 3:
		return &pbgear.SudoPallet_100_CallSudoAsCall{
			CallSudoAsCall: To_Sudo_SudoAsCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SudoPallet_140(in any) *pbgear.SudoPallet_140 {
	out := &pbgear.SudoPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SudoPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SudoPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SudoPallet_140_CallSudoCall{
			CallSudoCall: To_Sudo_SudoCall(param),
		}
	case 1:
		return &pbgear.SudoPallet_140_CallSudoUncheckedWeightCall{
			CallSudoUncheckedWeightCall: To_Sudo_SudoUncheckedWeightCall(param),
		}
	case 2:
		return &pbgear.SudoPallet_140_CallSetKeyCall{
			CallSetKeyCall: To_Sudo_SetKeyCall(param),
		}
	case 3:
		return &pbgear.SudoPallet_140_CallSudoAsCall{
			CallSudoAsCall: To_Sudo_SudoAsCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SudoPallet_310(in any) *pbgear.SudoPallet_310 {
	out := &pbgear.SudoPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SudoPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SudoPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SudoPallet_310_CallSudoCall{
			CallSudoCall: To_Sudo_SudoCall(param),
		}
	case 1:
		return &pbgear.SudoPallet_310_CallSudoUncheckedWeightCall{
			CallSudoUncheckedWeightCall: To_Sudo_SudoUncheckedWeightCall(param),
		}
	case 2:
		return &pbgear.SudoPallet_310_CallSetKeyCall{
			CallSetKeyCall: To_Sudo_SetKeyCall(param),
		}
	case 3:
		return &pbgear.SudoPallet_310_CallSudoAsCall{
			CallSudoAsCall: To_Sudo_SudoAsCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_New_100(in any) *pbgear.Sudo_New_100 {
	out := &pbgear.Sudo_New_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field New
	v0 := To_OneOf_Sudo_New_100_new(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("New").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Sudo_New_100_new(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_New_100_NewId{
			NewId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_New_100_NewIndex{
			NewIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_New_100_NewRaw{
			NewRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_New_100_NewAddress32{
			NewAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_New_100_NewAddress20{
			NewAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_New_310(in any) *pbgear.Sudo_New_310 {
	out := &pbgear.Sudo_New_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field New
	v0 := To_OneOf_Sudo_New_310_new(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("New").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Sudo_New_310_new(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_New_310_NewId{
			NewId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_New_310_NewIndex{
			NewIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_New_310_NewRaw{
			NewRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_New_310_NewAddress32{
			NewAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_New_310_NewAddress20{
			NewAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SetKeyCall_100(in any) *pbgear.Sudo_SetKeyCall_100 {
	out := &pbgear.Sudo_SetKeyCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field New
	v0 := To_OneOf_Sudo_SetKeyCall_100_new(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("New").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Sudo_SetKeyCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SetKeyCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SudoSetKeyCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSetKeyCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SetKeyCall_100_new(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SetKeyCall_100_NewId{
			NewId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_SetKeyCall_100_NewIndex{
			NewIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_SetKeyCall_100_NewRaw{
			NewRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_SetKeyCall_100_NewAddress32{
			NewAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_SetKeyCall_100_NewAddress20{
			NewAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoAsCall_100(in any) *pbgear.Sudo_SudoAsCall_100 {
	out := &pbgear.Sudo_SudoAsCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Sudo_SudoAsCall_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Sudo_SudoAsCall_100_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Sudo_SudoAsCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoAsCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoAsCall_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_100_WhoId{
			WhoId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_100_WhoIndex{
			WhoIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_SudoAsCall_100_WhoRaw{
			WhoRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_100_WhoAddress32{
			WhoAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_100_WhoAddress20{
			WhoAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Sudo_SudoAsCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoAsCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoAsCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoAsCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoAsCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoAsCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoAsCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoAsCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoAsCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoAsCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoAsCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoAsCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoAsCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoAsCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoAsCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoAsCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoAsCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoAsCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoAsCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoAsCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoAsCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoAsCall_140(in any) *pbgear.Sudo_SudoAsCall_140 {
	out := &pbgear.Sudo_SudoAsCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Sudo_SudoAsCall_140_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Sudo_SudoAsCall_140_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Sudo_SudoAsCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoAsCall_140(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoAsCall_140_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_140_WhoId{
			WhoId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_140_WhoIndex{
			WhoIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_SudoAsCall_140_WhoRaw{
			WhoRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_140_WhoAddress32{
			WhoAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_140_WhoAddress20{
			WhoAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Sudo_SudoAsCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoAsCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoAsCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoAsCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoAsCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoAsCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoAsCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoAsCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoAsCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoAsCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoAsCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoAsCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoAsCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Sudo_SudoAsCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoAsCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoAsCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoAsCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoAsCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoAsCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoAsCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoAsCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoAsCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoAsCall_210(in any) *pbgear.Sudo_SudoAsCall_210 {
	out := &pbgear.Sudo_SudoAsCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Sudo_SudoAsCall_210_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Sudo_SudoAsCall_210_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Sudo_SudoAsCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoAsCall_210(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoAsCall_210_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_210_WhoId{
			WhoId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_210_WhoIndex{
			WhoIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_SudoAsCall_210_WhoRaw{
			WhoRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_210_WhoAddress32{
			WhoAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_210_WhoAddress20{
			WhoAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Sudo_SudoAsCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoAsCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoAsCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoAsCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoAsCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoAsCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoAsCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoAsCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoAsCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoAsCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoAsCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoAsCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoAsCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Sudo_SudoAsCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoAsCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoAsCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoAsCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoAsCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Sudo_SudoAsCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Sudo_SudoAsCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoAsCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoAsCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoAsCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Sudo_SudoAsCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoAsCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoAsCall_310(in any) *pbgear.Sudo_SudoAsCall_310 {
	out := &pbgear.Sudo_SudoAsCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Sudo_SudoAsCall_310_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Sudo_SudoAsCall_310_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Sudo_SudoAsCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoAsCall_310(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoAsCall_310_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_310_WhoId{
			WhoId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_310_WhoIndex{
			WhoIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_SudoAsCall_310_WhoRaw{
			WhoRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_310_WhoAddress32{
			WhoAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_310_WhoAddress20{
			WhoAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Sudo_SudoAsCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoAsCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoAsCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoAsCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoAsCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoAsCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoAsCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoAsCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoAsCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoAsCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoAsCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoAsCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoAsCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoAsCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoAsCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoAsCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoAsCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoAsCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoAsCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoAsCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoAsCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Sudo_SudoAsCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Sudo_SudoAsCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Sudo_SudoAsCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Sudo_SudoAsCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Sudo_SudoAsCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Sudo_SudoAsCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoAsCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoAsCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Sudo_SudoAsCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoAsCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoAsCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoCall_100(in any) *pbgear.Sudo_SudoCall_100 {
	out := &pbgear.Sudo_SudoCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoCall_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Sudo_SudoCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoCall_140(in any) *pbgear.Sudo_SudoCall_140 {
	out := &pbgear.Sudo_SudoCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoCall_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Sudo_SudoCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoCall_140(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Sudo_SudoCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoCall_210(in any) *pbgear.Sudo_SudoCall_210 {
	out := &pbgear.Sudo_SudoCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoCall_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Sudo_SudoCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoCall_210(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Sudo_SudoCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Sudo_SudoCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Sudo_SudoCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Sudo_SudoCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoCall_310(in any) *pbgear.Sudo_SudoCall_310 {
	out := &pbgear.Sudo_SudoCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoCall_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Sudo_SudoCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoCall_310(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Sudo_SudoCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Sudo_SudoCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Sudo_SudoCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Sudo_SudoCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Sudo_SudoCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Sudo_SudoCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Sudo_SudoCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_SudoUncheckedWeightCall_100(in any) *pbgear.Sudo_SudoUncheckedWeightCall_100 {
	out := &pbgear.Sudo_SudoUncheckedWeightCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoUncheckedWeightCall_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Sudo_SudoUncheckedWeightCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoUncheckedWeightCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoUncheckedWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoUncheckedWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoUncheckedWeightCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoUncheckedWeightCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Sudo_SudoUncheckedWeightCall_140(in any) *pbgear.Sudo_SudoUncheckedWeightCall_140 {
	out := &pbgear.Sudo_SudoUncheckedWeightCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoUncheckedWeightCall_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Sudo_SudoUncheckedWeightCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoUncheckedWeightCall_140(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoUncheckedWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoUncheckedWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoUncheckedWeightCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoUncheckedWeightCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Sudo_SudoUncheckedWeightCall_210(in any) *pbgear.Sudo_SudoUncheckedWeightCall_210 {
	out := &pbgear.Sudo_SudoUncheckedWeightCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoUncheckedWeightCall_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Sudo_SudoUncheckedWeightCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoUncheckedWeightCall_210(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoUncheckedWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoUncheckedWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoUncheckedWeightCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoUncheckedWeightCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Sudo_SudoUncheckedWeightCall_310(in any) *pbgear.Sudo_SudoUncheckedWeightCall_310 {
	out := &pbgear.Sudo_SudoUncheckedWeightCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Sudo_SudoUncheckedWeightCall_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Sudo_SudoUncheckedWeightCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Sudo_SudoUncheckedWeightCall_310(in)
	out := &pbgearextrinsic.Extrinsic_SudoSudoUncheckedWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("SudoSudoUncheckedWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Sudo_SudoUncheckedWeightCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Sudo_SudoUncheckedWeightCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Sudo_Who_100(in any) *pbgear.Sudo_Who_100 {
	out := &pbgear.Sudo_Who_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Sudo_Who_100_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Sudo_Who_100_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_Who_100_WhoId{
			WhoId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_Who_100_WhoIndex{
			WhoIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_Who_100_WhoRaw{
			WhoRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_Who_100_WhoAddress32{
			WhoAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_Who_100_WhoAddress20{
			WhoAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Sudo_Who_310(in any) *pbgear.Sudo_Who_310 {
	out := &pbgear.Sudo_Who_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Who
	v0 := To_OneOf_Sudo_Who_310_who(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Who").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Sudo_Who_310_who(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Sudo_Who_310_WhoId{
			WhoId: To_Sudo_Id(param),
		}
	case 1:
		return &pbgear.Sudo_Who_310_WhoIndex{
			WhoIndex: To_Sudo_Index(param),
		}
	case 2:
		return &pbgear.Sudo_Who_310_WhoRaw{
			WhoRaw: To_Sudo_Raw(param),
		}
	case 3:
		return &pbgear.Sudo_Who_310_WhoAddress32{
			WhoAddress32: To_Sudo_Address32(param),
		}
	case 4:
		return &pbgear.Sudo_Who_310_WhoAddress20{
			WhoAddress20: To_Sudo_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_System_1030(in any) *pbgear.System_1030 {
	out := &pbgear.System_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_System_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_System_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.System_1030_Value0ProgramIsNotInitialized{
			Value0ProgramIsNotInitialized: To_ProgramIsNotInitialized(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_System_1400(in any) *pbgear.System_1400 {
	out := &pbgear.System_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_System_1400_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_System_1400_value0(in any) any {
	return nil
}
func To_System_SystemKeysList_100(in any) *pbgear.System_SystemKeysList_100 {
	out := &pbgear.System_SystemKeysList_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Keys
	out.Keys = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_System_SystemKeysList_310(in any) *pbgear.System_SystemKeysList_310 {
	out := &pbgear.System_SystemKeysList_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Keys
	out.Keys = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_System_SystemKeysList_1030(in any) *pbgear.System_SystemKeysList_1030 {
	out := &pbgear.System_SystemKeysList_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Keys
	out.Keys = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_System_SystemKeysList_1400(in any) *pbgear.System_SystemKeysList_1400 {
	out := &pbgear.System_SystemKeysList_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Keys
	out.Keys = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_System_TupleSystemItemsListSystemItemsList_100(in any) *pbgear.System_TupleSystemItemsListSystemItemsList_100 {
	out := &pbgear.System_TupleSystemItemsListSystemItemsList_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_System_TupleSystemItemsListSystemItemsList_310(in any) *pbgear.System_TupleSystemItemsListSystemItemsList_310 {
	out := &pbgear.System_TupleSystemItemsListSystemItemsList_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_System_TupleSystemItemsListSystemItemsList_1030(in any) *pbgear.System_TupleSystemItemsListSystemItemsList_1030 {
	out := &pbgear.System_TupleSystemItemsListSystemItemsList_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_System_TupleSystemItemsListSystemItemsList_1400(in any) *pbgear.System_TupleSystemItemsListSystemItemsList_1400 {
	out := &pbgear.System_TupleSystemItemsListSystemItemsList_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_SystemPallet_100(in any) *pbgear.SystemPallet_100 {
	out := &pbgear.SystemPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SystemPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SystemPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SystemPallet_100_CallRemarkCall{
			CallRemarkCall: To_System_RemarkCall(param),
		}
	case 1:
		return &pbgear.SystemPallet_100_CallSetHeapPagesCall{
			CallSetHeapPagesCall: To_System_SetHeapPagesCall(param),
		}
	case 2:
		return &pbgear.SystemPallet_100_CallSetCodeCall{
			CallSetCodeCall: To_System_SetCodeCall(param),
		}
	case 3:
		return &pbgear.SystemPallet_100_CallSetCodeWithoutChecksCall{
			CallSetCodeWithoutChecksCall: To_System_SetCodeWithoutChecksCall(param),
		}
	case 4:
		return &pbgear.SystemPallet_100_CallSetStorageCall{
			CallSetStorageCall: To_System_SetStorageCall(param),
		}
	case 5:
		return &pbgear.SystemPallet_100_CallKillStorageCall{
			CallKillStorageCall: To_System_KillStorageCall(param),
		}
	case 6:
		return &pbgear.SystemPallet_100_CallKillPrefixCall{
			CallKillPrefixCall: To_System_KillPrefixCall(param),
		}
	case 7:
		return &pbgear.SystemPallet_100_CallRemarkWithEventCall{
			CallRemarkWithEventCall: To_System_RemarkWithEventCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SystemPallet_310(in any) *pbgear.SystemPallet_310 {
	out := &pbgear.SystemPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SystemPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SystemPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SystemPallet_310_CallRemarkCall{
			CallRemarkCall: To_System_RemarkCall(param),
		}
	case 1:
		return &pbgear.SystemPallet_310_CallSetHeapPagesCall{
			CallSetHeapPagesCall: To_System_SetHeapPagesCall(param),
		}
	case 2:
		return &pbgear.SystemPallet_310_CallSetCodeCall{
			CallSetCodeCall: To_System_SetCodeCall(param),
		}
	case 3:
		return &pbgear.SystemPallet_310_CallSetCodeWithoutChecksCall{
			CallSetCodeWithoutChecksCall: To_System_SetCodeWithoutChecksCall(param),
		}
	case 4:
		return &pbgear.SystemPallet_310_CallSetStorageCall{
			CallSetStorageCall: To_System_SetStorageCall(param),
		}
	case 5:
		return &pbgear.SystemPallet_310_CallKillStorageCall{
			CallKillStorageCall: To_System_KillStorageCall(param),
		}
	case 6:
		return &pbgear.SystemPallet_310_CallKillPrefixCall{
			CallKillPrefixCall: To_System_KillPrefixCall(param),
		}
	case 7:
		return &pbgear.SystemPallet_310_CallRemarkWithEventCall{
			CallRemarkWithEventCall: To_System_RemarkWithEventCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SystemPallet_1030(in any) *pbgear.SystemPallet_1030 {
	out := &pbgear.SystemPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SystemPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SystemPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SystemPallet_1030_CallRemarkCall{
			CallRemarkCall: To_System_RemarkCall(param),
		}
	case 1:
		return &pbgear.SystemPallet_1030_CallSetHeapPagesCall{
			CallSetHeapPagesCall: To_System_SetHeapPagesCall(param),
		}
	case 2:
		return &pbgear.SystemPallet_1030_CallSetCodeCall{
			CallSetCodeCall: To_System_SetCodeCall(param),
		}
	case 3:
		return &pbgear.SystemPallet_1030_CallSetCodeWithoutChecksCall{
			CallSetCodeWithoutChecksCall: To_System_SetCodeWithoutChecksCall(param),
		}
	case 4:
		return &pbgear.SystemPallet_1030_CallSetStorageCall{
			CallSetStorageCall: To_System_SetStorageCall(param),
		}
	case 5:
		return &pbgear.SystemPallet_1030_CallKillStorageCall{
			CallKillStorageCall: To_System_KillStorageCall(param),
		}
	case 6:
		return &pbgear.SystemPallet_1030_CallKillPrefixCall{
			CallKillPrefixCall: To_System_KillPrefixCall(param),
		}
	case 7:
		return &pbgear.SystemPallet_1030_CallRemarkWithEventCall{
			CallRemarkWithEventCall: To_System_RemarkWithEventCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SystemPallet_1400(in any) *pbgear.SystemPallet_1400 {
	out := &pbgear.SystemPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_SystemPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SystemPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SystemPallet_1400_CallRemarkCall{
			CallRemarkCall: To_System_RemarkCall(param),
		}
	case 1:
		return &pbgear.SystemPallet_1400_CallSetHeapPagesCall{
			CallSetHeapPagesCall: To_System_SetHeapPagesCall(param),
		}
	case 2:
		return &pbgear.SystemPallet_1400_CallSetCodeCall{
			CallSetCodeCall: To_System_SetCodeCall(param),
		}
	case 3:
		return &pbgear.SystemPallet_1400_CallSetCodeWithoutChecksCall{
			CallSetCodeWithoutChecksCall: To_System_SetCodeWithoutChecksCall(param),
		}
	case 4:
		return &pbgear.SystemPallet_1400_CallSetStorageCall{
			CallSetStorageCall: To_System_SetStorageCall(param),
		}
	case 5:
		return &pbgear.SystemPallet_1400_CallKillStorageCall{
			CallKillStorageCall: To_System_KillStorageCall(param),
		}
	case 6:
		return &pbgear.SystemPallet_1400_CallKillPrefixCall{
			CallKillPrefixCall: To_System_KillPrefixCall(param),
		}
	case 7:
		return &pbgear.SystemPallet_1400_CallRemarkWithEventCall{
			CallRemarkWithEventCall: To_System_RemarkWithEventCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_System_KillPrefixCall_100(in any) *pbgear.System_KillPrefixCall_100 {
	out := &pbgear.System_KillPrefixCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Prefix
	out.Prefix = To_bytes(v.ValueAt(0))
	// primitive field Subkeys
	out.Subkeys = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_System_KillPrefixCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_KillPrefixCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemKillPrefixCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemKillPrefixCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_System_KillStorageCall_100(in any) *pbgear.System_KillStorageCall_100 {
	out := &pbgear.System_KillStorageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Keys
	out.Keys = To_Repeated_System_KillStorageCall_100_keys(v.ValueAt(0))

	return out //from message
}
func To_System_KillStorageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_KillStorageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemKillStorageCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemKillStorageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_System_KillStorageCall_100_keys(in any) []*pbgear.System_SystemKeysList {
	items := in.([]interface{})

	var out []*pbgear.System_SystemKeysList
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_System_SystemKeysList(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_System_RemarkCall_100(in any) *pbgear.System_RemarkCall_100 {
	out := &pbgear.System_RemarkCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Remark
	out.Remark = To_bytes(v.ValueAt(0))

	return out //from message
}
func To_System_RemarkCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_RemarkCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemRemarkCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemRemarkCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_System_RemarkWithEventCall_100(in any) *pbgear.System_RemarkWithEventCall_100 {
	out := &pbgear.System_RemarkWithEventCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Remark
	out.Remark = To_bytes(v.ValueAt(0))

	return out //from message
}
func To_System_RemarkWithEventCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_RemarkWithEventCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemRemarkWithEventCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemRemarkWithEventCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_System_SetCodeCall_100(in any) *pbgear.System_SetCodeCall_100 {
	out := &pbgear.System_SetCodeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Code
	out.Code = To_bytes(v.ValueAt(0))

	return out //from message
}
func To_System_SetCodeCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_SetCodeCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemSetCodeCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemSetCodeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_System_SetCodeWithoutChecksCall_100(in any) *pbgear.System_SetCodeWithoutChecksCall_100 {
	out := &pbgear.System_SetCodeWithoutChecksCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Code
	out.Code = To_bytes(v.ValueAt(0))

	return out //from message
}
func To_System_SetCodeWithoutChecksCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_SetCodeWithoutChecksCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemSetCodeWithoutChecksCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemSetCodeWithoutChecksCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_System_SetHeapPagesCall_100(in any) *pbgear.System_SetHeapPagesCall_100 {
	out := &pbgear.System_SetHeapPagesCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Pages
	out.Pages = To_uint64(v.ValueAt(0))

	return out //from message
}
func To_System_SetHeapPagesCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_SetHeapPagesCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemSetHeapPagesCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemSetHeapPagesCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_System_SetStorageCall_100(in any) *pbgear.System_SetStorageCall_100 {
	out := &pbgear.System_SetStorageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Items
	out.Items = To_Repeated_System_SetStorageCall_100_items(v.ValueAt(0))

	return out //from message
}
func To_System_SetStorageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_System_SetStorageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_SystemSetStorageCall{}
	reflect.ValueOf(out).Elem().FieldByName("SystemSetStorageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_System_SetStorageCall_100_items(in any) []*pbgear.System_TupleSystemItemsListSystemItemsList {
	items := in.([]interface{})

	var out []*pbgear.System_TupleSystemItemsListSystemItemsList
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_System_TupleSystemItemsListSystemItemsList(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Terminated_1030(in any) *pbgear.Terminated_1030 {
	out := &pbgear.Terminated_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TimeoutHasCome_1030(in any) *pbgear.TimeoutHasCome_1030 {
	out := &pbgear.TimeoutHasCome_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TimestampPallet_100(in any) *pbgear.TimestampPallet_100 {
	out := &pbgear.TimestampPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TimestampPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TimestampPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TimestampPallet_100_CallSetCall{
			CallSetCall: To_Timestamp_SetCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TimestampPallet_310(in any) *pbgear.TimestampPallet_310 {
	out := &pbgear.TimestampPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TimestampPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TimestampPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TimestampPallet_310_CallSetCall{
			CallSetCall: To_Timestamp_SetCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TimestampPallet_1030(in any) *pbgear.TimestampPallet_1030 {
	out := &pbgear.TimestampPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TimestampPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TimestampPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TimestampPallet_1030_CallSetCall{
			CallSetCall: To_Timestamp_SetCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TimestampPallet_1400(in any) *pbgear.TimestampPallet_1400 {
	out := &pbgear.TimestampPallet_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TimestampPallet_1400_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TimestampPallet_1400_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TimestampPallet_1400_CallSetCall{
			CallSetCall: To_Timestamp_SetCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Timestamp_SetCall_100(in any) *pbgear.Timestamp_SetCall_100 {
	out := &pbgear.Timestamp_SetCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Now
	out.Now = To_uint64(v.ValueAt(0))

	return out //from message
}
func To_Timestamp_SetCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Timestamp_SetCall_100(in)
	out := &pbgearextrinsic.Extrinsic_TimestampSetCall{}
	reflect.ValueOf(out).Elem().FieldByName("TimestampSetCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Token_1030(in any) *pbgear.Token_1030 {
	out := &pbgear.Token_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Token_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Token_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Token_1030_Value0FundsUnavailable{
			Value0FundsUnavailable: To_FundsUnavailable(param),
		}
	case 1:
		return &pbgear.Token_1030_Value0OnlyProvider{
			Value0OnlyProvider: To_OnlyProvider(param),
		}
	case 2:
		return &pbgear.Token_1030_Value0BelowMinimum{
			Value0BelowMinimum: To_BelowMinimum(param),
		}
	case 3:
		return &pbgear.Token_1030_Value0CannotCreate{
			Value0CannotCreate: To_CannotCreate(param),
		}
	case 4:
		return &pbgear.Token_1030_Value0UnknownAsset{
			Value0UnknownAsset: To_UnknownAsset(param),
		}
	case 5:
		return &pbgear.Token_1030_Value0Frozen{
			Value0Frozen: To_Frozen(param),
		}
	case 6:
		return &pbgear.Token_1030_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	case 7:
		return &pbgear.Token_1030_Value0CannotCreateHold{
			Value0CannotCreateHold: To_CannotCreateHold(param),
		}
	case 8:
		return &pbgear.Token_1030_Value0NotExpendable{
			Value0NotExpendable: To_NotExpendable(param),
		}
	case 9:
		return &pbgear.Token_1030_Value0Blocked{
			Value0Blocked: To_Blocked(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TooManyConsumers_1030(in any) *pbgear.TooManyConsumers_1030 {
	out := &pbgear.TooManyConsumers_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TransactionPaymentPallet_100(in any) *pbgear.TransactionPaymentPallet_100 {
	out := &pbgear.TransactionPaymentPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Transactional_1030(in any) *pbgear.Transactional_1030 {
	out := &pbgear.Transactional_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Transactional_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Transactional_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Transactional_1030_Value0LimitReached{
			Value0LimitReached: To_LimitReached(param),
		}
	case 1:
		return &pbgear.Transactional_1030_Value0NoLayer{
			Value0NoLayer: To_NoLayer(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasurer_100(in any) *pbgear.Treasurer_100 {
	out := &pbgear.Treasurer_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Treasury_Address20_100(in any) *pbgear.Treasury_Address20_100 {
	out := &pbgear.Treasury_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Treasury_Address32_100(in any) *pbgear.Treasury_Address32_100 {
	out := &pbgear.Treasury_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Treasury_Id_100(in any) *pbgear.Treasury_Id_100 {
	out := &pbgear.Treasury_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Treasury_Index_100(in any) *pbgear.Treasury_Index_100 {
	out := &pbgear.Treasury_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Treasury_TupleNull(w)
	out.Value0 = To_Treasury_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Treasury_Raw_100(in any) *pbgear.Treasury_Raw_100 {
	out := &pbgear.Treasury_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Treasury_TupleNull_100(in any) *pbgear.Treasury_TupleNull_100 {
	out := &pbgear.Treasury_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Treasury_TupleNull_310(in any) *pbgear.Treasury_TupleNull_310 {
	out := &pbgear.Treasury_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Treasury_TupleNull_1030(in any) *pbgear.Treasury_TupleNull_1030 {
	out := &pbgear.Treasury_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Treasury_TupleNull_1410(in any) *pbgear.Treasury_TupleNull_1410 {
	out := &pbgear.Treasury_TupleNull_1410{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TreasuryPallet_100(in any) *pbgear.TreasuryPallet_100 {
	out := &pbgear.TreasuryPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TreasuryPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TreasuryPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TreasuryPallet_100_CallProposeSpendCall{
			CallProposeSpendCall: To_Treasury_ProposeSpendCall(param),
		}
	case 1:
		return &pbgear.TreasuryPallet_100_CallRejectProposalCall{
			CallRejectProposalCall: To_Treasury_RejectProposalCall(param),
		}
	case 2:
		return &pbgear.TreasuryPallet_100_CallApproveProposalCall{
			CallApproveProposalCall: To_Treasury_ApproveProposalCall(param),
		}
	case 3:
		return &pbgear.TreasuryPallet_100_CallSpendCall{
			CallSpendCall: To_Treasury_SpendCall(param),
		}
	case 4:
		return &pbgear.TreasuryPallet_100_CallRemoveApprovalCall{
			CallRemoveApprovalCall: To_Treasury_RemoveApprovalCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TreasuryPallet_310(in any) *pbgear.TreasuryPallet_310 {
	out := &pbgear.TreasuryPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TreasuryPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TreasuryPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TreasuryPallet_310_CallProposeSpendCall{
			CallProposeSpendCall: To_Treasury_ProposeSpendCall(param),
		}
	case 1:
		return &pbgear.TreasuryPallet_310_CallRejectProposalCall{
			CallRejectProposalCall: To_Treasury_RejectProposalCall(param),
		}
	case 2:
		return &pbgear.TreasuryPallet_310_CallApproveProposalCall{
			CallApproveProposalCall: To_Treasury_ApproveProposalCall(param),
		}
	case 3:
		return &pbgear.TreasuryPallet_310_CallSpendCall{
			CallSpendCall: To_Treasury_SpendCall(param),
		}
	case 4:
		return &pbgear.TreasuryPallet_310_CallRemoveApprovalCall{
			CallRemoveApprovalCall: To_Treasury_RemoveApprovalCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TreasuryPallet_1030(in any) *pbgear.TreasuryPallet_1030 {
	out := &pbgear.TreasuryPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TreasuryPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TreasuryPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TreasuryPallet_1030_CallProposeSpendCall{
			CallProposeSpendCall: To_Treasury_ProposeSpendCall(param),
		}
	case 1:
		return &pbgear.TreasuryPallet_1030_CallRejectProposalCall{
			CallRejectProposalCall: To_Treasury_RejectProposalCall(param),
		}
	case 2:
		return &pbgear.TreasuryPallet_1030_CallApproveProposalCall{
			CallApproveProposalCall: To_Treasury_ApproveProposalCall(param),
		}
	case 3:
		return &pbgear.TreasuryPallet_1030_CallSpendCall{
			CallSpendCall: To_Treasury_SpendCall(param),
		}
	case 4:
		return &pbgear.TreasuryPallet_1030_CallRemoveApprovalCall{
			CallRemoveApprovalCall: To_Treasury_RemoveApprovalCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TreasuryPallet_1040(in any) *pbgear.TreasuryPallet_1040 {
	out := &pbgear.TreasuryPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TreasuryPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TreasuryPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TreasuryPallet_1040_CallProposeSpendCall{
			CallProposeSpendCall: To_Treasury_ProposeSpendCall(param),
		}
	case 1:
		return &pbgear.TreasuryPallet_1040_CallRejectProposalCall{
			CallRejectProposalCall: To_Treasury_RejectProposalCall(param),
		}
	case 2:
		return &pbgear.TreasuryPallet_1040_CallApproveProposalCall{
			CallApproveProposalCall: To_Treasury_ApproveProposalCall(param),
		}
	case 3:
		return &pbgear.TreasuryPallet_1040_CallSpendCall{
			CallSpendCall: To_Treasury_SpendCall(param),
		}
	case 4:
		return &pbgear.TreasuryPallet_1040_CallRemoveApprovalCall{
			CallRemoveApprovalCall: To_Treasury_RemoveApprovalCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TreasuryPallet_1410(in any) *pbgear.TreasuryPallet_1410 {
	out := &pbgear.TreasuryPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_TreasuryPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_TreasuryPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TreasuryPallet_1410_CallProposeSpendCall{
			CallProposeSpendCall: To_Treasury_ProposeSpendCall(param),
		}
	case 1:
		return &pbgear.TreasuryPallet_1410_CallRejectProposalCall{
			CallRejectProposalCall: To_Treasury_RejectProposalCall(param),
		}
	case 2:
		return &pbgear.TreasuryPallet_1410_CallApproveProposalCall{
			CallApproveProposalCall: To_Treasury_ApproveProposalCall(param),
		}
	case 3:
		return &pbgear.TreasuryPallet_1410_CallSpendLocalCall{
			CallSpendLocalCall: To_Treasury_SpendLocalCall(param),
		}
	case 4:
		return &pbgear.TreasuryPallet_1410_CallRemoveApprovalCall{
			CallRemoveApprovalCall: To_Treasury_RemoveApprovalCall(param),
		}
	case 5:
		return &pbgear.TreasuryPallet_1410_CallSpendCall{
			CallSpendCall: To_Treasury_SpendCall(param),
		}
	case 6:
		return &pbgear.TreasuryPallet_1410_CallPayoutCall{
			CallPayoutCall: To_Treasury_PayoutCall(param),
		}
	case 7:
		return &pbgear.TreasuryPallet_1410_CallCheckStatusCall{
			CallCheckStatusCall: To_Treasury_CheckStatusCall(param),
		}
	case 8:
		return &pbgear.TreasuryPallet_1410_CallVoidSpendCall{
			CallVoidSpendCall: To_Treasury_VoidSpendCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasury_ApproveProposalCall_100(in any) *pbgear.Treasury_ApproveProposalCall_100 {
	out := &pbgear.Treasury_ApproveProposalCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ProposalId
	out.ProposalId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Treasury_ApproveProposalCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_ApproveProposalCall_100(in)
	out := &pbgearextrinsic.Extrinsic_TreasuryApproveProposalCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasuryApproveProposalCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Treasury_Beneficiary_100(in any) *pbgear.Treasury_Beneficiary_100 {
	out := &pbgear.Treasury_Beneficiary_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Beneficiary
	v0 := To_OneOf_Treasury_Beneficiary_100_beneficiary(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Treasury_Beneficiary_100_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Treasury_Beneficiary_100_BeneficiaryId{
			BeneficiaryId: To_Treasury_Id(param),
		}
	case 1:
		return &pbgear.Treasury_Beneficiary_100_BeneficiaryIndex{
			BeneficiaryIndex: To_Treasury_Index(param),
		}
	case 2:
		return &pbgear.Treasury_Beneficiary_100_BeneficiaryRaw{
			BeneficiaryRaw: To_Treasury_Raw(param),
		}
	case 3:
		return &pbgear.Treasury_Beneficiary_100_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Treasury_Address32(param),
		}
	case 4:
		return &pbgear.Treasury_Beneficiary_100_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Treasury_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasury_Beneficiary_310(in any) *pbgear.Treasury_Beneficiary_310 {
	out := &pbgear.Treasury_Beneficiary_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Beneficiary
	v0 := To_OneOf_Treasury_Beneficiary_310_beneficiary(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Treasury_Beneficiary_310_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Treasury_Beneficiary_310_BeneficiaryId{
			BeneficiaryId: To_Treasury_Id(param),
		}
	case 1:
		return &pbgear.Treasury_Beneficiary_310_BeneficiaryIndex{
			BeneficiaryIndex: To_Treasury_Index(param),
		}
	case 2:
		return &pbgear.Treasury_Beneficiary_310_BeneficiaryRaw{
			BeneficiaryRaw: To_Treasury_Raw(param),
		}
	case 3:
		return &pbgear.Treasury_Beneficiary_310_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Treasury_Address32(param),
		}
	case 4:
		return &pbgear.Treasury_Beneficiary_310_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Treasury_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasury_Beneficiary_1030(in any) *pbgear.Treasury_Beneficiary_1030 {
	out := &pbgear.Treasury_Beneficiary_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Beneficiary
	v0 := To_OneOf_Treasury_Beneficiary_1030_beneficiary(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Treasury_Beneficiary_1030_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Treasury_Beneficiary_1030_BeneficiaryId{
			BeneficiaryId: To_Treasury_Id(param),
		}
	case 1:
		return &pbgear.Treasury_Beneficiary_1030_BeneficiaryIndex{
			BeneficiaryIndex: To_Treasury_Index(param),
		}
	case 2:
		return &pbgear.Treasury_Beneficiary_1030_BeneficiaryRaw{
			BeneficiaryRaw: To_Treasury_Raw(param),
		}
	case 3:
		return &pbgear.Treasury_Beneficiary_1030_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Treasury_Address32(param),
		}
	case 4:
		return &pbgear.Treasury_Beneficiary_1030_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Treasury_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasury_CheckStatusCall_1410(in any) *pbgear.Treasury_CheckStatusCall_1410 {
	out := &pbgear.Treasury_CheckStatusCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Treasury_CheckStatusCall_1410_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_CheckStatusCall_1410(in)
	out := &pbgearextrinsic.Extrinsic_TreasuryCheckStatusCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasuryCheckStatusCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Treasury_PayoutCall_1410(in any) *pbgear.Treasury_PayoutCall_1410 {
	out := &pbgear.Treasury_PayoutCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Treasury_PayoutCall_1410_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_PayoutCall_1410(in)
	out := &pbgearextrinsic.Extrinsic_TreasuryPayoutCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasuryPayoutCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Treasury_ProposeSpendCall_100(in any) *pbgear.Treasury_ProposeSpendCall_100 {
	out := &pbgear.Treasury_ProposeSpendCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value
	out.Value = To_string(v.ValueAt(0))
	// oneOf field Beneficiary
	v1 := To_OneOf_Treasury_ProposeSpendCall_100_beneficiary(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Treasury_ProposeSpendCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_ProposeSpendCall_100(in)
	out := &pbgearextrinsic.Extrinsic_TreasuryProposeSpendCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasuryProposeSpendCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Treasury_ProposeSpendCall_100_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Treasury_ProposeSpendCall_100_BeneficiaryId{
			BeneficiaryId: To_Treasury_Id(param),
		}
	case 1:
		return &pbgear.Treasury_ProposeSpendCall_100_BeneficiaryIndex{
			BeneficiaryIndex: To_Treasury_Index(param),
		}
	case 2:
		return &pbgear.Treasury_ProposeSpendCall_100_BeneficiaryRaw{
			BeneficiaryRaw: To_Treasury_Raw(param),
		}
	case 3:
		return &pbgear.Treasury_ProposeSpendCall_100_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Treasury_Address32(param),
		}
	case 4:
		return &pbgear.Treasury_ProposeSpendCall_100_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Treasury_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasury_RejectProposalCall_100(in any) *pbgear.Treasury_RejectProposalCall_100 {
	out := &pbgear.Treasury_RejectProposalCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ProposalId
	out.ProposalId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Treasury_RejectProposalCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_RejectProposalCall_100(in)
	out := &pbgearextrinsic.Extrinsic_TreasuryRejectProposalCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasuryRejectProposalCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Treasury_RemoveApprovalCall_100(in any) *pbgear.Treasury_RemoveApprovalCall_100 {
	out := &pbgear.Treasury_RemoveApprovalCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field ProposalId
	out.ProposalId = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Treasury_RemoveApprovalCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_RemoveApprovalCall_100(in)
	out := &pbgearextrinsic.Extrinsic_TreasuryRemoveApprovalCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasuryRemoveApprovalCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Treasury_SpendCall_100(in any) *pbgear.Treasury_SpendCall_100 {
	out := &pbgear.Treasury_SpendCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))
	// oneOf field Beneficiary
	v1 := To_OneOf_Treasury_SpendCall_100_beneficiary(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Treasury_SpendCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_SpendCall_100(in)
	out := &pbgearextrinsic.Extrinsic_TreasurySpendCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasurySpendCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Treasury_SpendCall_100_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Treasury_SpendCall_100_BeneficiaryId{
			BeneficiaryId: To_Treasury_Id(param),
		}
	case 1:
		return &pbgear.Treasury_SpendCall_100_BeneficiaryIndex{
			BeneficiaryIndex: To_Treasury_Index(param),
		}
	case 2:
		return &pbgear.Treasury_SpendCall_100_BeneficiaryRaw{
			BeneficiaryRaw: To_Treasury_Raw(param),
		}
	case 3:
		return &pbgear.Treasury_SpendCall_100_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Treasury_Address32(param),
		}
	case 4:
		return &pbgear.Treasury_SpendCall_100_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Treasury_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasury_SpendCall_1410(in any) *pbgear.Treasury_SpendCall_1410 {
	out := &pbgear.Treasury_SpendCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// field AssetKind To_Treasury_TupleNull(w)
	out.AssetKind = To_Treasury_TupleNull(v.ValueAt(0))
	// primitive field Amount
	out.Amount = To_string(v.ValueAt(1))
	// field Beneficiary To_SpCoreCryptoAccountId32(w)
	out.Beneficiary = To_SpCoreCryptoAccountId32(v.ValueAt(2))
	// primitive field ValidFrom
	if v.HasValue() {
		out.ValidFrom = To_Optional_uint32(v.ValueAt(3))
	}

	return out //from message
}
func To_Treasury_SpendCall_1410_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_SpendCall_1410(in)
	out := &pbgearextrinsic.Extrinsic_TreasurySpendCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasurySpendCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Treasury_SpendLocalCall_1410(in any) *pbgear.Treasury_SpendLocalCall_1410 {
	out := &pbgear.Treasury_SpendLocalCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Amount
	out.Amount = To_string(v.ValueAt(0))
	// oneOf field Beneficiary
	v1 := To_OneOf_Treasury_SpendLocalCall_1410_beneficiary(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Beneficiary").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Treasury_SpendLocalCall_1410_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_SpendLocalCall_1410(in)
	out := &pbgearextrinsic.Extrinsic_TreasurySpendLocalCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasurySpendLocalCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Treasury_SpendLocalCall_1410_beneficiary(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Treasury_SpendLocalCall_1410_BeneficiaryId{
			BeneficiaryId: To_Treasury_Id(param),
		}
	case 1:
		return &pbgear.Treasury_SpendLocalCall_1410_BeneficiaryIndex{
			BeneficiaryIndex: To_Treasury_Index(param),
		}
	case 2:
		return &pbgear.Treasury_SpendLocalCall_1410_BeneficiaryRaw{
			BeneficiaryRaw: To_Treasury_Raw(param),
		}
	case 3:
		return &pbgear.Treasury_SpendLocalCall_1410_BeneficiaryAddress32{
			BeneficiaryAddress32: To_Treasury_Address32(param),
		}
	case 4:
		return &pbgear.Treasury_SpendLocalCall_1410_BeneficiaryAddress20{
			BeneficiaryAddress20: To_Treasury_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Treasury_VoidSpendCall_1410(in any) *pbgear.Treasury_VoidSpendCall_1410 {
	out := &pbgear.Treasury_VoidSpendCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))

	return out //from message
}
func To_Treasury_VoidSpendCall_1410_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Treasury_VoidSpendCall_1410(in)
	out := &pbgearextrinsic.Extrinsic_TreasuryVoidSpendCall{}
	reflect.ValueOf(out).Elem().FieldByName("TreasuryVoidSpendCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_TupleNull_100(in any) *pbgear.TupleNull_100 {
	out := &pbgear.TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TupleNull_310(in any) *pbgear.TupleNull_310 {
	out := &pbgear.TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TupleNull_1030(in any) *pbgear.TupleNull_1030 {
	out := &pbgear.TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TupleNull_1400(in any) *pbgear.TupleNull_1400 {
	out := &pbgear.TupleNull_1400{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030(in any) *pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030 {
	out := &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsMessageId(w)
	out.Value0 = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1030_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040(in any) *pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040 {
	out := &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsMessageId(w)
	out.Value0 = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1040_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110(in any) *pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110 {
	out := &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsMessageId(w)
	out.Value0 = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1110_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400(in any) *pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400 {
	out := &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsMessageId(w)
	out.Value0 = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.TupleGearCoreIdsMessageIdgearCommonEventDispatchStatus_1400_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420(in any) *pbgear.TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420 {
	out := &pbgear.TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GprimitivesMessageId(w)
	out.Value0 = To_GprimitivesMessageId(v.ValueAt(0))
	// oneOf field Value1
	v1 := To_OneOf_TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420_value1(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.TupleGprimitivesMessageIdgearCommonEventDispatchStatus_1420_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1030(in any) *pbgear.TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1030 {
	out := &pbgear.TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpArithmeticPerThingsPerbill(w)
	out.Value0 = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1040(in any) *pbgear.TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1040 {
	out := &pbgear.TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpArithmeticPerThingsPerbill(w)
	out.Value0 = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1400(in any) *pbgear.TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1400 {
	out := &pbgear.TupleSpArithmeticPerThingsPerbillspCoreCryptoAccountId32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpArithmeticPerThingsPerbill(w)
	out.Value0 = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// field Value1 To_SpCoreCryptoAccountId32(w)
	out.Value1 = To_SpCoreCryptoAccountId32(v.ValueAt(1))

	return out //from message
}

func To_Unavailable_1030(in any) *pbgear.Unavailable_1030 {
	out := &pbgear.Unavailable_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Underflow_1030(in any) *pbgear.Underflow_1030 {
	out := &pbgear.Underflow_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_UnknownAsset_1030(in any) *pbgear.UnknownAsset_1030 {
	out := &pbgear.UnknownAsset_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_UnreachableInstruction_1030(in any) *pbgear.UnreachableInstruction_1030 {
	out := &pbgear.UnreachableInstruction_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Unsupported_1030(in any) *pbgear.Unsupported_1030 {
	out := &pbgear.Unsupported_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_UserspacePanic_1030(in any) *pbgear.UserspacePanic_1030 {
	out := &pbgear.UserspacePanic_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Utility_Origins_100(in any) *pbgear.Utility_Origins_100 {
	out := &pbgear.Utility_Origins_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Utility_Origins_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_Origins_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_Origins_100_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Utility_Origins_100_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Utility_Origins_100_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Utility_Origins_100_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Utility_Origins_100_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Utility_Origins_100_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Utility_Origins_100_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.Utility_Origins_100_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.Utility_Origins_100_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.Utility_Origins_100_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.Utility_Origins_100_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_Origins_130(in any) *pbgear.Utility_Origins_130 {
	out := &pbgear.Utility_Origins_130{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Utility_Origins_130_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_Origins_130_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_Origins_130_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Utility_Origins_130_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Utility_Origins_130_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Utility_Origins_130_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Utility_Origins_130_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Utility_Origins_130_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Utility_Origins_130_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.Utility_Origins_130_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.Utility_Origins_130_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.Utility_Origins_130_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.Utility_Origins_130_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 11:
		return &pbgear.Utility_Origins_130_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 12:
		return &pbgear.Utility_Origins_130_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 13:
		return &pbgear.Utility_Origins_130_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 14:
		return &pbgear.Utility_Origins_130_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 15:
		return &pbgear.Utility_Origins_130_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 16:
		return &pbgear.Utility_Origins_130_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 17:
		return &pbgear.Utility_Origins_130_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 18:
		return &pbgear.Utility_Origins_130_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 19:
		return &pbgear.Utility_Origins_130_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_Origins_210(in any) *pbgear.Utility_Origins_210 {
	out := &pbgear.Utility_Origins_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Utility_Origins_210_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_Origins_210_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_Origins_210_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Utility_Origins_210_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Utility_Origins_210_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Utility_Origins_210_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Utility_Origins_210_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Utility_Origins_210_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Utility_Origins_210_Value0SmallTipper{
			Value0SmallTipper: To_SmallTipper(param),
		}
	case 7:
		return &pbgear.Utility_Origins_210_Value0BigTipper{
			Value0BigTipper: To_BigTipper(param),
		}
	case 8:
		return &pbgear.Utility_Origins_210_Value0SmallSpender{
			Value0SmallSpender: To_SmallSpender(param),
		}
	case 9:
		return &pbgear.Utility_Origins_210_Value0MediumSpender{
			Value0MediumSpender: To_MediumSpender(param),
		}
	case 10:
		return &pbgear.Utility_Origins_210_Value0BigSpender{
			Value0BigSpender: To_BigSpender(param),
		}
	case 11:
		return &pbgear.Utility_Origins_210_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 12:
		return &pbgear.Utility_Origins_210_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 13:
		return &pbgear.Utility_Origins_210_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 14:
		return &pbgear.Utility_Origins_210_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 15:
		return &pbgear.Utility_Origins_210_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 16:
		return &pbgear.Utility_Origins_210_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 17:
		return &pbgear.Utility_Origins_210_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 18:
		return &pbgear.Utility_Origins_210_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 19:
		return &pbgear.Utility_Origins_210_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 20:
		return &pbgear.Utility_Origins_210_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 21:
		return &pbgear.Utility_Origins_210_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 22:
		return &pbgear.Utility_Origins_210_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 23:
		return &pbgear.Utility_Origins_210_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 24:
		return &pbgear.Utility_Origins_210_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_Void_100(in any) *pbgear.Utility_Void_100 {
	out := &pbgear.Utility_Void_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Utility_Void_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_Void_100_value0(in any) any {
	return nil
}
func To_UtilityPallet_100(in any) *pbgear.UtilityPallet_100 {
	out := &pbgear.UtilityPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_UtilityPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_UtilityPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.UtilityPallet_100_CallBatchCall{
			CallBatchCall: To_Utility_BatchCall(param),
		}
	case 1:
		return &pbgear.UtilityPallet_100_CallAsDerivativeCall{
			CallAsDerivativeCall: To_Utility_AsDerivativeCall(param),
		}
	case 2:
		return &pbgear.UtilityPallet_100_CallBatchAllCall{
			CallBatchAllCall: To_Utility_BatchAllCall(param),
		}
	case 3:
		return &pbgear.UtilityPallet_100_CallDispatchAsCall{
			CallDispatchAsCall: To_Utility_DispatchAsCall(param),
		}
	case 4:
		return &pbgear.UtilityPallet_100_CallForceBatchCall{
			CallForceBatchCall: To_Utility_ForceBatchCall(param),
		}
	case 5:
		return &pbgear.UtilityPallet_100_CallWithWeightCall{
			CallWithWeightCall: To_Utility_WithWeightCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_UtilityPallet_140(in any) *pbgear.UtilityPallet_140 {
	out := &pbgear.UtilityPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_UtilityPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_UtilityPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.UtilityPallet_140_CallBatchCall{
			CallBatchCall: To_Utility_BatchCall(param),
		}
	case 1:
		return &pbgear.UtilityPallet_140_CallAsDerivativeCall{
			CallAsDerivativeCall: To_Utility_AsDerivativeCall(param),
		}
	case 2:
		return &pbgear.UtilityPallet_140_CallBatchAllCall{
			CallBatchAllCall: To_Utility_BatchAllCall(param),
		}
	case 3:
		return &pbgear.UtilityPallet_140_CallDispatchAsCall{
			CallDispatchAsCall: To_Utility_DispatchAsCall(param),
		}
	case 4:
		return &pbgear.UtilityPallet_140_CallForceBatchCall{
			CallForceBatchCall: To_Utility_ForceBatchCall(param),
		}
	case 5:
		return &pbgear.UtilityPallet_140_CallWithWeightCall{
			CallWithWeightCall: To_Utility_WithWeightCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_UtilityPallet_210(in any) *pbgear.UtilityPallet_210 {
	out := &pbgear.UtilityPallet_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_UtilityPallet_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_UtilityPallet_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.UtilityPallet_210_CallBatchCall{
			CallBatchCall: To_Utility_BatchCall(param),
		}
	case 1:
		return &pbgear.UtilityPallet_210_CallAsDerivativeCall{
			CallAsDerivativeCall: To_Utility_AsDerivativeCall(param),
		}
	case 2:
		return &pbgear.UtilityPallet_210_CallBatchAllCall{
			CallBatchAllCall: To_Utility_BatchAllCall(param),
		}
	case 3:
		return &pbgear.UtilityPallet_210_CallDispatchAsCall{
			CallDispatchAsCall: To_Utility_DispatchAsCall(param),
		}
	case 4:
		return &pbgear.UtilityPallet_210_CallForceBatchCall{
			CallForceBatchCall: To_Utility_ForceBatchCall(param),
		}
	case 5:
		return &pbgear.UtilityPallet_210_CallWithWeightCall{
			CallWithWeightCall: To_Utility_WithWeightCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_UtilityPallet_310(in any) *pbgear.UtilityPallet_310 {
	out := &pbgear.UtilityPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_UtilityPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_UtilityPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.UtilityPallet_310_CallBatchCall{
			CallBatchCall: To_Utility_BatchCall(param),
		}
	case 1:
		return &pbgear.UtilityPallet_310_CallAsDerivativeCall{
			CallAsDerivativeCall: To_Utility_AsDerivativeCall(param),
		}
	case 2:
		return &pbgear.UtilityPallet_310_CallBatchAllCall{
			CallBatchAllCall: To_Utility_BatchAllCall(param),
		}
	case 3:
		return &pbgear.UtilityPallet_310_CallDispatchAsCall{
			CallDispatchAsCall: To_Utility_DispatchAsCall(param),
		}
	case 4:
		return &pbgear.UtilityPallet_310_CallForceBatchCall{
			CallForceBatchCall: To_Utility_ForceBatchCall(param),
		}
	case 5:
		return &pbgear.UtilityPallet_310_CallWithWeightCall{
			CallWithWeightCall: To_Utility_WithWeightCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_UtilityPallet_1030(in any) *pbgear.UtilityPallet_1030 {
	out := &pbgear.UtilityPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_UtilityPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_UtilityPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.UtilityPallet_1030_CallBatchCall{
			CallBatchCall: To_Utility_BatchCall(param),
		}
	case 1:
		return &pbgear.UtilityPallet_1030_CallAsDerivativeCall{
			CallAsDerivativeCall: To_Utility_AsDerivativeCall(param),
		}
	case 2:
		return &pbgear.UtilityPallet_1030_CallBatchAllCall{
			CallBatchAllCall: To_Utility_BatchAllCall(param),
		}
	case 3:
		return &pbgear.UtilityPallet_1030_CallDispatchAsCall{
			CallDispatchAsCall: To_Utility_DispatchAsCall(param),
		}
	case 4:
		return &pbgear.UtilityPallet_1030_CallForceBatchCall{
			CallForceBatchCall: To_Utility_ForceBatchCall(param),
		}
	case 5:
		return &pbgear.UtilityPallet_1030_CallWithWeightCall{
			CallWithWeightCall: To_Utility_WithWeightCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_UtilityPallet_1040(in any) *pbgear.UtilityPallet_1040 {
	out := &pbgear.UtilityPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_UtilityPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_UtilityPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.UtilityPallet_1040_CallBatchCall{
			CallBatchCall: To_Utility_BatchCall(param),
		}
	case 1:
		return &pbgear.UtilityPallet_1040_CallAsDerivativeCall{
			CallAsDerivativeCall: To_Utility_AsDerivativeCall(param),
		}
	case 2:
		return &pbgear.UtilityPallet_1040_CallBatchAllCall{
			CallBatchAllCall: To_Utility_BatchAllCall(param),
		}
	case 3:
		return &pbgear.UtilityPallet_1040_CallDispatchAsCall{
			CallDispatchAsCall: To_Utility_DispatchAsCall(param),
		}
	case 4:
		return &pbgear.UtilityPallet_1040_CallForceBatchCall{
			CallForceBatchCall: To_Utility_ForceBatchCall(param),
		}
	case 5:
		return &pbgear.UtilityPallet_1040_CallWithWeightCall{
			CallWithWeightCall: To_Utility_WithWeightCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_UtilityPallet_1410(in any) *pbgear.UtilityPallet_1410 {
	out := &pbgear.UtilityPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_UtilityPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_UtilityPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.UtilityPallet_1410_CallBatchCall{
			CallBatchCall: To_Utility_BatchCall(param),
		}
	case 1:
		return &pbgear.UtilityPallet_1410_CallAsDerivativeCall{
			CallAsDerivativeCall: To_Utility_AsDerivativeCall(param),
		}
	case 2:
		return &pbgear.UtilityPallet_1410_CallBatchAllCall{
			CallBatchAllCall: To_Utility_BatchAllCall(param),
		}
	case 3:
		return &pbgear.UtilityPallet_1410_CallDispatchAsCall{
			CallDispatchAsCall: To_Utility_DispatchAsCall(param),
		}
	case 4:
		return &pbgear.UtilityPallet_1410_CallForceBatchCall{
			CallForceBatchCall: To_Utility_ForceBatchCall(param),
		}
	case 5:
		return &pbgear.UtilityPallet_1410_CallWithWeightCall{
			CallWithWeightCall: To_Utility_WithWeightCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsDerivativeCall_100(in any) *pbgear.Utility_AsDerivativeCall_100 {
	out := &pbgear.Utility_AsDerivativeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Utility_AsDerivativeCall_100_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_AsDerivativeCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_AsDerivativeCall_100(in)
	out := &pbgearextrinsic.Extrinsic_UtilityAsDerivativeCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityAsDerivativeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_AsDerivativeCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsDerivativeCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_AsDerivativeCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_AsDerivativeCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_AsDerivativeCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_AsDerivativeCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_AsDerivativeCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_AsDerivativeCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_AsDerivativeCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_AsDerivativeCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_AsDerivativeCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_AsDerivativeCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_AsDerivativeCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_AsDerivativeCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_AsDerivativeCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_AsDerivativeCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_AsDerivativeCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Utility_AsDerivativeCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_AsDerivativeCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_AsDerivativeCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_AsDerivativeCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Utility_AsDerivativeCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_AsDerivativeCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_AsDerivativeCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Utility_AsDerivativeCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsDerivativeCall_140(in any) *pbgear.Utility_AsDerivativeCall_140 {
	out := &pbgear.Utility_AsDerivativeCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Utility_AsDerivativeCall_140_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_AsDerivativeCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_AsDerivativeCall_140(in)
	out := &pbgearextrinsic.Extrinsic_UtilityAsDerivativeCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityAsDerivativeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_AsDerivativeCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsDerivativeCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_AsDerivativeCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_AsDerivativeCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_AsDerivativeCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_AsDerivativeCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_AsDerivativeCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_AsDerivativeCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_AsDerivativeCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_AsDerivativeCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_AsDerivativeCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_AsDerivativeCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_AsDerivativeCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_AsDerivativeCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_AsDerivativeCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_AsDerivativeCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_AsDerivativeCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Utility_AsDerivativeCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Utility_AsDerivativeCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_AsDerivativeCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_AsDerivativeCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_AsDerivativeCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Utility_AsDerivativeCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_AsDerivativeCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_AsDerivativeCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Utility_AsDerivativeCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsDerivativeCall_210(in any) *pbgear.Utility_AsDerivativeCall_210 {
	out := &pbgear.Utility_AsDerivativeCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Utility_AsDerivativeCall_210_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_AsDerivativeCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_AsDerivativeCall_210(in)
	out := &pbgearextrinsic.Extrinsic_UtilityAsDerivativeCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityAsDerivativeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_AsDerivativeCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsDerivativeCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_AsDerivativeCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_AsDerivativeCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_AsDerivativeCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_AsDerivativeCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_AsDerivativeCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_AsDerivativeCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_AsDerivativeCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_AsDerivativeCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_AsDerivativeCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_AsDerivativeCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_AsDerivativeCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_AsDerivativeCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_AsDerivativeCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_AsDerivativeCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_AsDerivativeCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Utility_AsDerivativeCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Utility_AsDerivativeCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_AsDerivativeCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_AsDerivativeCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_AsDerivativeCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_AsDerivativeCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_AsDerivativeCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Utility_AsDerivativeCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_AsDerivativeCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_AsDerivativeCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_AsDerivativeCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Utility_AsDerivativeCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsDerivativeCall_310(in any) *pbgear.Utility_AsDerivativeCall_310 {
	out := &pbgear.Utility_AsDerivativeCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Utility_AsDerivativeCall_310_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_AsDerivativeCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_AsDerivativeCall_310(in)
	out := &pbgearextrinsic.Extrinsic_UtilityAsDerivativeCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityAsDerivativeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_AsDerivativeCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsDerivativeCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_AsDerivativeCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_AsDerivativeCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_AsDerivativeCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_AsDerivativeCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_AsDerivativeCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_AsDerivativeCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_AsDerivativeCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_AsDerivativeCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_AsDerivativeCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_AsDerivativeCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Utility_AsDerivativeCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Utility_AsDerivativeCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_AsDerivativeCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_AsDerivativeCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_AsDerivativeCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_AsDerivativeCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Utility_AsDerivativeCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_AsDerivativeCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_AsDerivativeCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_AsDerivativeCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_AsDerivativeCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Utility_AsDerivativeCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Utility_AsDerivativeCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Utility_AsDerivativeCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Utility_AsDerivativeCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Utility_AsDerivativeCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_AsDerivativeCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_AsDerivativeCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Utility_AsDerivativeCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Utility_AsDerivativeCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsDerivativeCall_1000(in any) *pbgear.Utility_AsDerivativeCall_1000 {
	out := &pbgear.Utility_AsDerivativeCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// oneOf field Call
	v1 := To_OneOf_Utility_AsDerivativeCall_1000_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_AsDerivativeCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_AsDerivativeCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_UtilityAsDerivativeCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityAsDerivativeCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_AsDerivativeCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsDerivativeCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_AsDerivativeCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_AsDerivativeCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_AsDerivativeCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_AsDerivativeCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_AsDerivativeCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_AsDerivativeCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_AsDerivativeCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_AsDerivativeCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_AsDerivativeCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_AsDerivativeCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Utility_AsDerivativeCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Utility_AsDerivativeCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_AsDerivativeCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_AsDerivativeCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_AsDerivativeCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_AsDerivativeCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Utility_AsDerivativeCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_AsDerivativeCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_AsDerivativeCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_AsDerivativeCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_AsDerivativeCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Utility_AsDerivativeCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Utility_AsDerivativeCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Utility_AsDerivativeCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Utility_AsDerivativeCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Utility_AsDerivativeCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_AsDerivativeCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_AsDerivativeCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsOrigin_100(in any) *pbgear.Utility_AsOrigin_100 {
	out := &pbgear.Utility_AsOrigin_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_AsOrigin_100_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_AsOrigin_100_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsOrigin_100_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_AsOrigin_100_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_AsOrigin_100_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsOrigin_310(in any) *pbgear.Utility_AsOrigin_310 {
	out := &pbgear.Utility_AsOrigin_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_AsOrigin_310_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_AsOrigin_310_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsOrigin_310_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_AsOrigin_310_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_AsOrigin_310_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsOrigin_1030(in any) *pbgear.Utility_AsOrigin_1030 {
	out := &pbgear.Utility_AsOrigin_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_AsOrigin_1030_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_AsOrigin_1030_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsOrigin_1030_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_AsOrigin_1030_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_AsOrigin_1030_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsOrigin_1040(in any) *pbgear.Utility_AsOrigin_1040 {
	out := &pbgear.Utility_AsOrigin_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_AsOrigin_1040_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_AsOrigin_1040_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsOrigin_1040_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_AsOrigin_1040_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_AsOrigin_1040_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_AsOrigin_1410(in any) *pbgear.Utility_AsOrigin_1410 {
	out := &pbgear.Utility_AsOrigin_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_AsOrigin_1410_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_AsOrigin_1410_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_AsOrigin_1410_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_AsOrigin_1410_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_AsOrigin_1410_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_BatchAllCall_100(in any) *pbgear.Utility_BatchAllCall_100 {
	out := &pbgear.Utility_BatchAllCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Calls
	out.Calls = To_Repeated_Utility_BatchAllCall_100_calls(v.ValueAt(0))

	return out //from message
}
func To_Utility_BatchAllCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_BatchAllCall_100(in)
	out := &pbgearextrinsic.Extrinsic_UtilityBatchAllCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityBatchAllCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Utility_BatchAllCall_100_calls(in any) []*pbgear.VaraRuntimeRuntimeCall {
	items := in.([]interface{})

	var out []*pbgear.VaraRuntimeRuntimeCall
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_VaraRuntimeRuntimeCall(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Utility_BatchCall_100(in any) *pbgear.Utility_BatchCall_100 {
	out := &pbgear.Utility_BatchCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Calls
	out.Calls = To_Repeated_Utility_BatchCall_100_calls(v.ValueAt(0))

	return out //from message
}
func To_Utility_BatchCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_BatchCall_100(in)
	out := &pbgearextrinsic.Extrinsic_UtilityBatchCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityBatchCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Utility_BatchCall_100_calls(in any) []*pbgear.VaraRuntimeRuntimeCall {
	items := in.([]interface{})

	var out []*pbgear.VaraRuntimeRuntimeCall
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_VaraRuntimeRuntimeCall(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Utility_DispatchAsCall_100(in any) *pbgear.Utility_DispatchAsCall_100 {
	out := &pbgear.Utility_DispatchAsCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_DispatchAsCall_100_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Utility_DispatchAsCall_100_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_DispatchAsCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_DispatchAsCall_100(in)
	out := &pbgearextrinsic.Extrinsic_UtilityDispatchAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityDispatchAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_DispatchAsCall_100_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_100_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_DispatchAsCall_100_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_DispatchAsCall_100_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Utility_DispatchAsCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_DispatchAsCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_DispatchAsCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_DispatchAsCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_DispatchAsCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_DispatchAsCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_DispatchAsCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_DispatchAsCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_DispatchAsCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_DispatchAsCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_DispatchAsCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_DispatchAsCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_DispatchAsCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_DispatchAsCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_DispatchAsCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_DispatchAsCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Utility_DispatchAsCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_DispatchAsCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_DispatchAsCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_DispatchAsCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Utility_DispatchAsCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_DispatchAsCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_DispatchAsCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Utility_DispatchAsCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_DispatchAsCall_140(in any) *pbgear.Utility_DispatchAsCall_140 {
	out := &pbgear.Utility_DispatchAsCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_DispatchAsCall_140_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Utility_DispatchAsCall_140_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_DispatchAsCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_DispatchAsCall_140(in)
	out := &pbgearextrinsic.Extrinsic_UtilityDispatchAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityDispatchAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_DispatchAsCall_140_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_140_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_DispatchAsCall_140_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_DispatchAsCall_140_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Utility_DispatchAsCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_DispatchAsCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_DispatchAsCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_DispatchAsCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_DispatchAsCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_DispatchAsCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_DispatchAsCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_DispatchAsCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_DispatchAsCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_DispatchAsCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_DispatchAsCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_DispatchAsCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_DispatchAsCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_DispatchAsCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_DispatchAsCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_DispatchAsCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Utility_DispatchAsCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Utility_DispatchAsCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_DispatchAsCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_DispatchAsCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_DispatchAsCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Utility_DispatchAsCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_DispatchAsCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_DispatchAsCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Utility_DispatchAsCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_DispatchAsCall_210(in any) *pbgear.Utility_DispatchAsCall_210 {
	out := &pbgear.Utility_DispatchAsCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_DispatchAsCall_210_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Utility_DispatchAsCall_210_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_DispatchAsCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_DispatchAsCall_210(in)
	out := &pbgearextrinsic.Extrinsic_UtilityDispatchAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityDispatchAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_DispatchAsCall_210_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_210_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_DispatchAsCall_210_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_DispatchAsCall_210_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Utility_DispatchAsCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_DispatchAsCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_DispatchAsCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_DispatchAsCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_DispatchAsCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_DispatchAsCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_DispatchAsCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_DispatchAsCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_DispatchAsCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_DispatchAsCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_DispatchAsCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_DispatchAsCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_DispatchAsCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_DispatchAsCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_DispatchAsCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_DispatchAsCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Utility_DispatchAsCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Utility_DispatchAsCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_DispatchAsCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_DispatchAsCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_DispatchAsCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_DispatchAsCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_DispatchAsCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Utility_DispatchAsCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_DispatchAsCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_DispatchAsCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_DispatchAsCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Utility_DispatchAsCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_DispatchAsCall_310(in any) *pbgear.Utility_DispatchAsCall_310 {
	out := &pbgear.Utility_DispatchAsCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_DispatchAsCall_310_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Utility_DispatchAsCall_310_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_DispatchAsCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_DispatchAsCall_310(in)
	out := &pbgearextrinsic.Extrinsic_UtilityDispatchAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityDispatchAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_DispatchAsCall_310_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_310_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_DispatchAsCall_310_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_DispatchAsCall_310_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Utility_DispatchAsCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_DispatchAsCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_DispatchAsCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_DispatchAsCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_DispatchAsCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_DispatchAsCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_DispatchAsCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_DispatchAsCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_DispatchAsCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_DispatchAsCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_DispatchAsCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Utility_DispatchAsCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Utility_DispatchAsCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_DispatchAsCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_DispatchAsCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_DispatchAsCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_DispatchAsCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Utility_DispatchAsCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_DispatchAsCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_DispatchAsCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_DispatchAsCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_DispatchAsCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Utility_DispatchAsCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Utility_DispatchAsCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Utility_DispatchAsCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Utility_DispatchAsCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Utility_DispatchAsCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_DispatchAsCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_DispatchAsCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Utility_DispatchAsCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Utility_DispatchAsCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_DispatchAsCall_1000(in any) *pbgear.Utility_DispatchAsCall_1000 {
	out := &pbgear.Utility_DispatchAsCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field AsOrigin
	v0 := To_OneOf_Utility_DispatchAsCall_1000_as_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("AsOrigin").Set(reflect.ValueOf(v0))
	// oneOf field Call
	v1 := To_OneOf_Utility_DispatchAsCall_1000_call(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v1))

	return out //from message
}
func To_Utility_DispatchAsCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_DispatchAsCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_UtilityDispatchAsCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityDispatchAsCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_DispatchAsCall_1000_as_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_1000_AsOriginSystem{
			AsOriginSystem: To_Utility_System(param),
		}
	case 20:
		return &pbgear.Utility_DispatchAsCall_1000_AsOriginOrigins{
			AsOriginOrigins: To_Utility_Origins(param),
		}
	case 2:
		return &pbgear.Utility_DispatchAsCall_1000_AsOriginVoid{
			AsOriginVoid: To_Utility_Void(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Utility_DispatchAsCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_DispatchAsCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_DispatchAsCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_DispatchAsCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_DispatchAsCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_DispatchAsCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_DispatchAsCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_DispatchAsCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_DispatchAsCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_DispatchAsCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_DispatchAsCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_DispatchAsCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Utility_DispatchAsCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Utility_DispatchAsCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_DispatchAsCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_DispatchAsCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_DispatchAsCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_DispatchAsCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Utility_DispatchAsCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_DispatchAsCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_DispatchAsCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_DispatchAsCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_DispatchAsCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Utility_DispatchAsCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Utility_DispatchAsCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Utility_DispatchAsCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Utility_DispatchAsCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Utility_DispatchAsCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_DispatchAsCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_DispatchAsCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_ForceBatchCall_100(in any) *pbgear.Utility_ForceBatchCall_100 {
	out := &pbgear.Utility_ForceBatchCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Calls
	out.Calls = To_Repeated_Utility_ForceBatchCall_100_calls(v.ValueAt(0))

	return out //from message
}
func To_Utility_ForceBatchCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_ForceBatchCall_100(in)
	out := &pbgearextrinsic.Extrinsic_UtilityForceBatchCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityForceBatchCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Repeated_Utility_ForceBatchCall_100_calls(in any) []*pbgear.VaraRuntimeRuntimeCall {
	items := in.([]interface{})

	var out []*pbgear.VaraRuntimeRuntimeCall
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_VaraRuntimeRuntimeCall(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Utility_System_100(in any) *pbgear.Utility_System_100 {
	out := &pbgear.Utility_System_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Utility_System_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Utility_System_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_System_100_Value0Root{
			Value0Root: To_Root(param),
		}
	case 1:
		return &pbgear.Utility_System_100_Value0Signed{
			Value0Signed: To_Signed(param),
		}
	case 2:
		return &pbgear.Utility_System_100_Value0None{
			Value0None: To_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Utility_WithWeightCall_100(in any) *pbgear.Utility_WithWeightCall_100 {
	out := &pbgear.Utility_WithWeightCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Utility_WithWeightCall_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Utility_WithWeightCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_WithWeightCall_100(in)
	out := &pbgearextrinsic.Extrinsic_UtilityWithWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityWithWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_WithWeightCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_WithWeightCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_WithWeightCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_WithWeightCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_WithWeightCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_WithWeightCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_WithWeightCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_WithWeightCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_WithWeightCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_WithWeightCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_WithWeightCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_WithWeightCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_WithWeightCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_WithWeightCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_WithWeightCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_WithWeightCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_WithWeightCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Utility_WithWeightCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_WithWeightCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_WithWeightCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_WithWeightCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Utility_WithWeightCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_WithWeightCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_WithWeightCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Utility_WithWeightCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Utility_WithWeightCall_140(in any) *pbgear.Utility_WithWeightCall_140 {
	out := &pbgear.Utility_WithWeightCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Utility_WithWeightCall_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Utility_WithWeightCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_WithWeightCall_140(in)
	out := &pbgearextrinsic.Extrinsic_UtilityWithWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityWithWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_WithWeightCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_WithWeightCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_WithWeightCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_WithWeightCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_WithWeightCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_WithWeightCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_WithWeightCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_WithWeightCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_WithWeightCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_WithWeightCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_WithWeightCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_WithWeightCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_WithWeightCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_WithWeightCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_WithWeightCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_WithWeightCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_WithWeightCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Utility_WithWeightCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Utility_WithWeightCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_WithWeightCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_WithWeightCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_WithWeightCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Utility_WithWeightCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_WithWeightCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_WithWeightCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Utility_WithWeightCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Utility_WithWeightCall_210(in any) *pbgear.Utility_WithWeightCall_210 {
	out := &pbgear.Utility_WithWeightCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Utility_WithWeightCall_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Utility_WithWeightCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_WithWeightCall_210(in)
	out := &pbgearextrinsic.Extrinsic_UtilityWithWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityWithWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_WithWeightCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_WithWeightCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_WithWeightCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_WithWeightCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_WithWeightCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_WithWeightCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_WithWeightCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_WithWeightCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_WithWeightCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_WithWeightCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_WithWeightCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_WithWeightCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Utility_WithWeightCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_WithWeightCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_WithWeightCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_WithWeightCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_WithWeightCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Utility_WithWeightCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Utility_WithWeightCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Utility_WithWeightCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_WithWeightCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_WithWeightCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_WithWeightCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_WithWeightCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Utility_WithWeightCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Utility_WithWeightCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_WithWeightCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_WithWeightCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Utility_WithWeightCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Utility_WithWeightCall_310(in any) *pbgear.Utility_WithWeightCall_310 {
	out := &pbgear.Utility_WithWeightCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Utility_WithWeightCall_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Utility_WithWeightCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_WithWeightCall_310(in)
	out := &pbgearextrinsic.Extrinsic_UtilityWithWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityWithWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_WithWeightCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_WithWeightCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_WithWeightCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_WithWeightCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_WithWeightCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_WithWeightCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_WithWeightCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_WithWeightCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_WithWeightCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_WithWeightCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_WithWeightCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_WithWeightCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Utility_WithWeightCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Utility_WithWeightCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_WithWeightCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_WithWeightCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_WithWeightCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_WithWeightCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Utility_WithWeightCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_WithWeightCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_WithWeightCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_WithWeightCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_WithWeightCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Utility_WithWeightCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Utility_WithWeightCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Utility_WithWeightCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Utility_WithWeightCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Utility_WithWeightCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_WithWeightCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_WithWeightCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Utility_WithWeightCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Utility_WithWeightCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Utility_WithWeightCall_1000(in any) *pbgear.Utility_WithWeightCall_1000 {
	out := &pbgear.Utility_WithWeightCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Utility_WithWeightCall_1000_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))
	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(1))

	return out //from message
}
func To_Utility_WithWeightCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Utility_WithWeightCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_UtilityWithWeightCall{}
	reflect.ValueOf(out).Elem().FieldByName("UtilityWithWeightCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Utility_WithWeightCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Utility_WithWeightCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Utility_WithWeightCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Utility_WithWeightCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Utility_WithWeightCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Utility_WithWeightCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Utility_WithWeightCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Utility_WithWeightCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Utility_WithWeightCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Utility_WithWeightCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Utility_WithWeightCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Utility_WithWeightCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Utility_WithWeightCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Utility_WithWeightCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Utility_WithWeightCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Utility_WithWeightCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Utility_WithWeightCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Utility_WithWeightCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Utility_WithWeightCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Utility_WithWeightCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Utility_WithWeightCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Utility_WithWeightCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Utility_WithWeightCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Utility_WithWeightCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Utility_WithWeightCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Utility_WithWeightCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Utility_WithWeightCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Utility_WithWeightCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Utility_WithWeightCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Utility_WithWeightCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_ValidatorSetPallet_140(in any) *pbgear.ValidatorSetPallet_140 {
	out := &pbgear.ValidatorSetPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_ValidatorSetPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ValidatorSetPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ValidatorSetPallet_140_CallAddValidatorCall{
			CallAddValidatorCall: To_ValidatorSet_AddValidatorCall(param),
		}
	case 1:
		return &pbgear.ValidatorSetPallet_140_CallRemoveValidatorCall{
			CallRemoveValidatorCall: To_ValidatorSet_RemoveValidatorCall(param),
		}
	case 2:
		return &pbgear.ValidatorSetPallet_140_CallAddValidatorAgainCall{
			CallAddValidatorAgainCall: To_ValidatorSet_AddValidatorAgainCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ValidatorSet_AddValidatorAgainCall_140(in any) *pbgear.ValidatorSet_AddValidatorAgainCall_140 {
	out := &pbgear.ValidatorSet_AddValidatorAgainCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// field ValidatorId To_SpCoreCryptoAccountId32(w)
	out.ValidatorId = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}
func To_ValidatorSet_AddValidatorAgainCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ValidatorSet_AddValidatorAgainCall_140(in)
	out := &pbgearextrinsic.Extrinsic_ValidatorsetAddValidatorAgainCall{}
	reflect.ValueOf(out).Elem().FieldByName("ValidatorsetAddValidatorAgainCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ValidatorSet_AddValidatorCall_140(in any) *pbgear.ValidatorSet_AddValidatorCall_140 {
	out := &pbgear.ValidatorSet_AddValidatorCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// field ValidatorId To_SpCoreCryptoAccountId32(w)
	out.ValidatorId = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}
func To_ValidatorSet_AddValidatorCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ValidatorSet_AddValidatorCall_140(in)
	out := &pbgearextrinsic.Extrinsic_ValidatorsetAddValidatorCall{}
	reflect.ValueOf(out).Elem().FieldByName("ValidatorsetAddValidatorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_ValidatorSet_RemoveValidatorCall_140(in any) *pbgear.ValidatorSet_RemoveValidatorCall_140 {
	out := &pbgear.ValidatorSet_RemoveValidatorCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// field ValidatorId To_SpCoreCryptoAccountId32(w)
	out.ValidatorId = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}
func To_ValidatorSet_RemoveValidatorCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_ValidatorSet_RemoveValidatorCall_140(in)
	out := &pbgearextrinsic.Extrinsic_ValidatorsetRemoveValidatorCall{}
	reflect.ValueOf(out).Elem().FieldByName("ValidatorsetRemoveValidatorCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Vesting_Address20_100(in any) *pbgear.Vesting_Address20_100 {
	out := &pbgear.Vesting_Address20_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Vesting_Address32_100(in any) *pbgear.Vesting_Address32_100 {
	out := &pbgear.Vesting_Address32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Vesting_Id_100(in any) *pbgear.Vesting_Id_100 {
	out := &pbgear.Vesting_Id_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Vesting_Index_100(in any) *pbgear.Vesting_Index_100 {
	out := &pbgear.Vesting_Index_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_Vesting_TupleNull(w)
	out.Value0 = To_Vesting_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Vesting_Raw_100(in any) *pbgear.Vesting_Raw_100 {
	out := &pbgear.Vesting_Raw_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Vesting_TupleNull_100(in any) *pbgear.Vesting_TupleNull_100 {
	out := &pbgear.Vesting_TupleNull_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Vesting_TupleNull_310(in any) *pbgear.Vesting_TupleNull_310 {
	out := &pbgear.Vesting_TupleNull_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_Vesting_TupleNull_1030(in any) *pbgear.Vesting_TupleNull_1030 {
	out := &pbgear.Vesting_TupleNull_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_TupleNull(w)
	out.Value = To_TupleNull(v.ValueAt(0))

	return out //from message
}

func To_VestingPallet_100(in any) *pbgear.VestingPallet_100 {
	out := &pbgear.VestingPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_VestingPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VestingPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VestingPallet_100_CallVestCall{
			CallVestCall: To_Vesting_VestCall(param),
		}
	case 1:
		return &pbgear.VestingPallet_100_CallVestOtherCall{
			CallVestOtherCall: To_Vesting_VestOtherCall(param),
		}
	case 2:
		return &pbgear.VestingPallet_100_CallVestedTransferCall{
			CallVestedTransferCall: To_Vesting_VestedTransferCall(param),
		}
	case 3:
		return &pbgear.VestingPallet_100_CallForceVestedTransferCall{
			CallForceVestedTransferCall: To_Vesting_ForceVestedTransferCall(param),
		}
	case 4:
		return &pbgear.VestingPallet_100_CallMergeSchedulesCall{
			CallMergeSchedulesCall: To_Vesting_MergeSchedulesCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VestingPallet_310(in any) *pbgear.VestingPallet_310 {
	out := &pbgear.VestingPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_VestingPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VestingPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VestingPallet_310_CallVestCall{
			CallVestCall: To_Vesting_VestCall(param),
		}
	case 1:
		return &pbgear.VestingPallet_310_CallVestOtherCall{
			CallVestOtherCall: To_Vesting_VestOtherCall(param),
		}
	case 2:
		return &pbgear.VestingPallet_310_CallVestedTransferCall{
			CallVestedTransferCall: To_Vesting_VestedTransferCall(param),
		}
	case 3:
		return &pbgear.VestingPallet_310_CallForceVestedTransferCall{
			CallForceVestedTransferCall: To_Vesting_ForceVestedTransferCall(param),
		}
	case 4:
		return &pbgear.VestingPallet_310_CallMergeSchedulesCall{
			CallMergeSchedulesCall: To_Vesting_MergeSchedulesCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VestingPallet_1030(in any) *pbgear.VestingPallet_1030 {
	out := &pbgear.VestingPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_VestingPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VestingPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VestingPallet_1030_CallVestCall{
			CallVestCall: To_Vesting_VestCall(param),
		}
	case 1:
		return &pbgear.VestingPallet_1030_CallVestOtherCall{
			CallVestOtherCall: To_Vesting_VestOtherCall(param),
		}
	case 2:
		return &pbgear.VestingPallet_1030_CallVestedTransferCall{
			CallVestedTransferCall: To_Vesting_VestedTransferCall(param),
		}
	case 3:
		return &pbgear.VestingPallet_1030_CallForceVestedTransferCall{
			CallForceVestedTransferCall: To_Vesting_ForceVestedTransferCall(param),
		}
	case 4:
		return &pbgear.VestingPallet_1030_CallMergeSchedulesCall{
			CallMergeSchedulesCall: To_Vesting_MergeSchedulesCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VestingPallet_1040(in any) *pbgear.VestingPallet_1040 {
	out := &pbgear.VestingPallet_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_VestingPallet_1040_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VestingPallet_1040_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VestingPallet_1040_CallVestCall{
			CallVestCall: To_Vesting_VestCall(param),
		}
	case 1:
		return &pbgear.VestingPallet_1040_CallVestOtherCall{
			CallVestOtherCall: To_Vesting_VestOtherCall(param),
		}
	case 2:
		return &pbgear.VestingPallet_1040_CallVestedTransferCall{
			CallVestedTransferCall: To_Vesting_VestedTransferCall(param),
		}
	case 3:
		return &pbgear.VestingPallet_1040_CallForceVestedTransferCall{
			CallForceVestedTransferCall: To_Vesting_ForceVestedTransferCall(param),
		}
	case 4:
		return &pbgear.VestingPallet_1040_CallMergeSchedulesCall{
			CallMergeSchedulesCall: To_Vesting_MergeSchedulesCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_ForceVestedTransferCall_100(in any) *pbgear.Vesting_ForceVestedTransferCall_100 {
	out := &pbgear.Vesting_ForceVestedTransferCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Vesting_ForceVestedTransferCall_100_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))
	// oneOf field Target
	v1 := To_OneOf_Vesting_ForceVestedTransferCall_100_target(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v1))
	// field Schedule To_Vesting_PalletVestingVestingInfoVestingInfo(w)
	out.Schedule = To_Vesting_PalletVestingVestingInfoVestingInfo(v.ValueAt(2))

	return out //from message
}
func To_Vesting_ForceVestedTransferCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Vesting_ForceVestedTransferCall_100(in)
	out := &pbgearextrinsic.Extrinsic_VestingForceVestedTransferCall{}
	reflect.ValueOf(out).Elem().FieldByName("VestingForceVestedTransferCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Vesting_ForceVestedTransferCall_100_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_ForceVestedTransferCall_100_SourceId{
			SourceId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_ForceVestedTransferCall_100_SourceIndex{
			SourceIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_ForceVestedTransferCall_100_SourceRaw{
			SourceRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_ForceVestedTransferCall_100_SourceAddress32{
			SourceAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_ForceVestedTransferCall_100_SourceAddress20{
			SourceAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Vesting_ForceVestedTransferCall_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_ForceVestedTransferCall_100_TargetId{
			TargetId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_ForceVestedTransferCall_100_TargetIndex{
			TargetIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_ForceVestedTransferCall_100_TargetRaw{
			TargetRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_ForceVestedTransferCall_100_TargetAddress32{
			TargetAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_ForceVestedTransferCall_100_TargetAddress20{
			TargetAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_Vesting_MergeSchedulesCall_100(in any) *pbgear.Vesting_MergeSchedulesCall_100 {
	out := &pbgear.Vesting_MergeSchedulesCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Schedule1Index
	out.Schedule1Index = To_uint32(v.ValueAt(0))
	// primitive field Schedule2Index
	out.Schedule2Index = To_uint32(v.ValueAt(1))

	return out //from message
}
func To_Vesting_MergeSchedulesCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Vesting_MergeSchedulesCall_100(in)
	out := &pbgearextrinsic.Extrinsic_VestingMergeSchedulesCall{}
	reflect.ValueOf(out).Elem().FieldByName("VestingMergeSchedulesCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Vesting_Source_100(in any) *pbgear.Vesting_Source_100 {
	out := &pbgear.Vesting_Source_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Vesting_Source_100_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Vesting_Source_100_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_Source_100_SourceId{
			SourceId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_Source_100_SourceIndex{
			SourceIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_Source_100_SourceRaw{
			SourceRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_Source_100_SourceAddress32{
			SourceAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_Source_100_SourceAddress20{
			SourceAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_Source_310(in any) *pbgear.Vesting_Source_310 {
	out := &pbgear.Vesting_Source_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Vesting_Source_310_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Vesting_Source_310_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_Source_310_SourceId{
			SourceId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_Source_310_SourceIndex{
			SourceIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_Source_310_SourceRaw{
			SourceRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_Source_310_SourceAddress32{
			SourceAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_Source_310_SourceAddress20{
			SourceAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_Source_1030(in any) *pbgear.Vesting_Source_1030 {
	out := &pbgear.Vesting_Source_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Source
	v0 := To_OneOf_Vesting_Source_1030_source(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Source").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Vesting_Source_1030_source(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_Source_1030_SourceId{
			SourceId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_Source_1030_SourceIndex{
			SourceIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_Source_1030_SourceRaw{
			SourceRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_Source_1030_SourceAddress32{
			SourceAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_Source_1030_SourceAddress20{
			SourceAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_Target_100(in any) *pbgear.Vesting_Target_100 {
	out := &pbgear.Vesting_Target_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Vesting_Target_100_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Vesting_Target_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_Target_100_TargetId{
			TargetId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_Target_100_TargetIndex{
			TargetIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_Target_100_TargetRaw{
			TargetRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_Target_100_TargetAddress32{
			TargetAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_Target_100_TargetAddress20{
			TargetAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_Target_310(in any) *pbgear.Vesting_Target_310 {
	out := &pbgear.Vesting_Target_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Vesting_Target_310_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Vesting_Target_310_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_Target_310_TargetId{
			TargetId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_Target_310_TargetIndex{
			TargetIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_Target_310_TargetRaw{
			TargetRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_Target_310_TargetAddress32{
			TargetAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_Target_310_TargetAddress20{
			TargetAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_Target_1030(in any) *pbgear.Vesting_Target_1030 {
	out := &pbgear.Vesting_Target_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Vesting_Target_1030_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Vesting_Target_1030_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_Target_1030_TargetId{
			TargetId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_Target_1030_TargetIndex{
			TargetIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_Target_1030_TargetRaw{
			TargetRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_Target_1030_TargetAddress32{
			TargetAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_Target_1030_TargetAddress20{
			TargetAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_VestCall_100(in any) *pbgear.Vesting_VestCall_100 {
	out := &pbgear.Vesting_VestCall_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Vesting_VestOtherCall_100(in any) *pbgear.Vesting_VestOtherCall_100 {
	out := &pbgear.Vesting_VestOtherCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Vesting_VestOtherCall_100_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Vesting_VestOtherCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Vesting_VestOtherCall_100(in)
	out := &pbgearextrinsic.Extrinsic_VestingVestOtherCall{}
	reflect.ValueOf(out).Elem().FieldByName("VestingVestOtherCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Vesting_VestOtherCall_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_VestOtherCall_100_TargetId{
			TargetId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_VestOtherCall_100_TargetIndex{
			TargetIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_VestOtherCall_100_TargetRaw{
			TargetRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_VestOtherCall_100_TargetAddress32{
			TargetAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_VestOtherCall_100_TargetAddress20{
			TargetAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Vesting_VestedTransferCall_100(in any) *pbgear.Vesting_VestedTransferCall_100 {
	out := &pbgear.Vesting_VestedTransferCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Target
	v0 := To_OneOf_Vesting_VestedTransferCall_100_target(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Target").Set(reflect.ValueOf(v0))
	// field Schedule To_Vesting_PalletVestingVestingInfoVestingInfo(w)
	out.Schedule = To_Vesting_PalletVestingVestingInfoVestingInfo(v.ValueAt(1))

	return out //from message
}
func To_Vesting_VestedTransferCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Vesting_VestedTransferCall_100(in)
	out := &pbgearextrinsic.Extrinsic_VestingVestedTransferCall{}
	reflect.ValueOf(out).Elem().FieldByName("VestingVestedTransferCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Vesting_VestedTransferCall_100_target(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Vesting_VestedTransferCall_100_TargetId{
			TargetId: To_Vesting_Id(param),
		}
	case 1:
		return &pbgear.Vesting_VestedTransferCall_100_TargetIndex{
			TargetIndex: To_Vesting_Index(param),
		}
	case 2:
		return &pbgear.Vesting_VestedTransferCall_100_TargetRaw{
			TargetRaw: To_Vesting_Raw(param),
		}
	case 3:
		return &pbgear.Vesting_VestedTransferCall_100_TargetAddress32{
			TargetAddress32: To_Vesting_Address32(param),
		}
	case 4:
		return &pbgear.Vesting_VestedTransferCall_100_TargetAddress20{
			TargetAddress20: To_Vesting_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}

func To_WaitCalled_1030(in any) *pbgear.WaitCalled_1030 {
	out := &pbgear.WaitCalled_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_WaitForCalled_1030(in any) *pbgear.WaitForCalled_1030 {
	out := &pbgear.WaitForCalled_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_WaitUpToCalled_1030(in any) *pbgear.WaitUpToCalled_1030 {
	out := &pbgear.WaitUpToCalled_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_WaitUpToCalledFull_1030(in any) *pbgear.WaitUpToCalledFull_1030 {
	out := &pbgear.WaitUpToCalledFull_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_WakeCalled_1030(in any) *pbgear.WakeCalled_1030 {
	out := &pbgear.WakeCalled_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_WhitelistPallet_100(in any) *pbgear.WhitelistPallet_100 {
	out := &pbgear.WhitelistPallet_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_WhitelistPallet_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_WhitelistPallet_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.WhitelistPallet_100_CallWhitelistCallCall{
			CallWhitelistCallCall: To_Whitelist_WhitelistCallCall(param),
		}
	case 1:
		return &pbgear.WhitelistPallet_100_CallRemoveWhitelistedCallCall{
			CallRemoveWhitelistedCallCall: To_Whitelist_RemoveWhitelistedCallCall(param),
		}
	case 2:
		return &pbgear.WhitelistPallet_100_CallDispatchWhitelistedCallCall{
			CallDispatchWhitelistedCallCall: To_Whitelist_DispatchWhitelistedCallCall(param),
		}
	case 3:
		return &pbgear.WhitelistPallet_100_CallDispatchWhitelistedCallWithPreimageCall{
			CallDispatchWhitelistedCallWithPreimageCall: To_Whitelist_DispatchWhitelistedCallWithPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_WhitelistPallet_140(in any) *pbgear.WhitelistPallet_140 {
	out := &pbgear.WhitelistPallet_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_WhitelistPallet_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_WhitelistPallet_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.WhitelistPallet_140_CallWhitelistCallCall{
			CallWhitelistCallCall: To_Whitelist_WhitelistCallCall(param),
		}
	case 1:
		return &pbgear.WhitelistPallet_140_CallRemoveWhitelistedCallCall{
			CallRemoveWhitelistedCallCall: To_Whitelist_RemoveWhitelistedCallCall(param),
		}
	case 2:
		return &pbgear.WhitelistPallet_140_CallDispatchWhitelistedCallCall{
			CallDispatchWhitelistedCallCall: To_Whitelist_DispatchWhitelistedCallCall(param),
		}
	case 3:
		return &pbgear.WhitelistPallet_140_CallDispatchWhitelistedCallWithPreimageCall{
			CallDispatchWhitelistedCallWithPreimageCall: To_Whitelist_DispatchWhitelistedCallWithPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_WhitelistPallet_310(in any) *pbgear.WhitelistPallet_310 {
	out := &pbgear.WhitelistPallet_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_WhitelistPallet_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_WhitelistPallet_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.WhitelistPallet_310_CallWhitelistCallCall{
			CallWhitelistCallCall: To_Whitelist_WhitelistCallCall(param),
		}
	case 1:
		return &pbgear.WhitelistPallet_310_CallRemoveWhitelistedCallCall{
			CallRemoveWhitelistedCallCall: To_Whitelist_RemoveWhitelistedCallCall(param),
		}
	case 2:
		return &pbgear.WhitelistPallet_310_CallDispatchWhitelistedCallCall{
			CallDispatchWhitelistedCallCall: To_Whitelist_DispatchWhitelistedCallCall(param),
		}
	case 3:
		return &pbgear.WhitelistPallet_310_CallDispatchWhitelistedCallWithPreimageCall{
			CallDispatchWhitelistedCallWithPreimageCall: To_Whitelist_DispatchWhitelistedCallWithPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_WhitelistPallet_1030(in any) *pbgear.WhitelistPallet_1030 {
	out := &pbgear.WhitelistPallet_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_WhitelistPallet_1030_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_WhitelistPallet_1030_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.WhitelistPallet_1030_CallWhitelistCallCall{
			CallWhitelistCallCall: To_Whitelist_WhitelistCallCall(param),
		}
	case 1:
		return &pbgear.WhitelistPallet_1030_CallRemoveWhitelistedCallCall{
			CallRemoveWhitelistedCallCall: To_Whitelist_RemoveWhitelistedCallCall(param),
		}
	case 2:
		return &pbgear.WhitelistPallet_1030_CallDispatchWhitelistedCallCall{
			CallDispatchWhitelistedCallCall: To_Whitelist_DispatchWhitelistedCallCall(param),
		}
	case 3:
		return &pbgear.WhitelistPallet_1030_CallDispatchWhitelistedCallWithPreimageCall{
			CallDispatchWhitelistedCallWithPreimageCall: To_Whitelist_DispatchWhitelistedCallWithPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_WhitelistPallet_1410(in any) *pbgear.WhitelistPallet_1410 {
	out := &pbgear.WhitelistPallet_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_WhitelistPallet_1410_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_WhitelistPallet_1410_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.WhitelistPallet_1410_CallWhitelistCallCall{
			CallWhitelistCallCall: To_Whitelist_WhitelistCallCall(param),
		}
	case 1:
		return &pbgear.WhitelistPallet_1410_CallRemoveWhitelistedCallCall{
			CallRemoveWhitelistedCallCall: To_Whitelist_RemoveWhitelistedCallCall(param),
		}
	case 2:
		return &pbgear.WhitelistPallet_1410_CallDispatchWhitelistedCallCall{
			CallDispatchWhitelistedCallCall: To_Whitelist_DispatchWhitelistedCallCall(param),
		}
	case 3:
		return &pbgear.WhitelistPallet_1410_CallDispatchWhitelistedCallWithPreimageCall{
			CallDispatchWhitelistedCallWithPreimageCall: To_Whitelist_DispatchWhitelistedCallWithPreimageCall(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Whitelist_DispatchWhitelistedCallCall_100(in any) *pbgear.Whitelist_DispatchWhitelistedCallCall_100 {
	out := &pbgear.Whitelist_DispatchWhitelistedCallCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field CallEncodedLen
	out.CallEncodedLen = To_uint32(v.ValueAt(1))
	// field CallWeightWitness To_SpWeightsWeightV2Weight(w)
	out.CallWeightWitness = To_SpWeightsWeightV2Weight(v.ValueAt(2))

	return out //from message
}
func To_Whitelist_DispatchWhitelistedCallCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_DispatchWhitelistedCallCall_100(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistDispatchWhitelistedCallCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistDispatchWhitelistedCallCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_100(in any) *pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100 {
	out := &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_100_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_DispatchWhitelistedCallWithPreimageCall_100(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistDispatchWhitelistedCallWithPreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistDispatchWhitelistedCallWithPreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_100_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_100_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_140(in any) *pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140 {
	out := &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_140_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_140_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_DispatchWhitelistedCallWithPreimageCall_140(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistDispatchWhitelistedCallWithPreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistDispatchWhitelistedCallWithPreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_140_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_140_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_210(in any) *pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210 {
	out := &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_210_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_210_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_DispatchWhitelistedCallWithPreimageCall_210(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistDispatchWhitelistedCallWithPreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistDispatchWhitelistedCallWithPreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_210_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallValidatorSet{
			CallValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_210_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_310(in any) *pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310 {
	out := &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_310_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_310_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_DispatchWhitelistedCallWithPreimageCall_310(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistDispatchWhitelistedCallWithPreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistDispatchWhitelistedCallWithPreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_310_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallSudo{
			CallSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_310_CallAirdrop{
			CallAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_1000(in any) *pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000 {
	out := &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Call
	v0 := To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_call(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Call").Set(reflect.ValueOf(v0))

	return out //from message
}
func To_Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_DispatchWhitelistedCallWithPreimageCall_1000(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistDispatchWhitelistedCallWithPreimageCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistDispatchWhitelistedCallWithPreimageCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_OneOf_Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_call(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallSystem{
			CallSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallTimestamp{
			CallTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallBabe{
			CallBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallGrandpa{
			CallGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallBalances{
			CallBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallVesting{
			CallVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallBagsList{
			CallBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallImOnline{
			CallImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallStaking{
			CallStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallSession{
			CallSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallTreasury{
			CallTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallUtility{
			CallUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallConvictionVoting{
			CallConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallReferenda{
			CallReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallFellowshipCollective{
			CallFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallFellowshipReferenda{
			CallFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallWhitelist{
			CallWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallScheduler{
			CallScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallPreimage{
			CallPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallIdentity{
			CallIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallProxy{
			CallProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallMultisig{
			CallMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallElectionProviderMultiPhase{
			CallElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallBounties{
			CallBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallChildBounties{
			CallChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallNominationPools{
			CallNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallGear{
			CallGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallStakingRewards{
			CallStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_CallGearVoucher{
			CallGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_WhitelistedCaller_100(in any) *pbgear.WhitelistedCaller_100 {
	out := &pbgear.WhitelistedCaller_100{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Whitelist_RemoveWhitelistedCallCall_100(in any) *pbgear.Whitelist_RemoveWhitelistedCallCall_100 {
	out := &pbgear.Whitelist_RemoveWhitelistedCallCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}
func To_Whitelist_RemoveWhitelistedCallCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_RemoveWhitelistedCallCall_100(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistRemoveWhitelistedCallCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistRemoveWhitelistedCallCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Whitelist_WhitelistCallCall_100(in any) *pbgear.Whitelist_WhitelistCallCall_100 {
	out := &pbgear.Whitelist_WhitelistCallCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// field CallHash To_PrimitiveTypesH256(w)
	out.CallHash = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}
func To_Whitelist_WhitelistCallCall_100_wrap(in any) *pbgearextrinsic.Extrinsic {
	res := To_Whitelist_WhitelistCallCall_100(in)
	out := &pbgearextrinsic.Extrinsic_WhitelistWhitelistCallCall{}
	reflect.ValueOf(out).Elem().FieldByName("WhitelistWhitelistCallCall").Set(reflect.ValueOf(res))
	return &pbgearextrinsic.Extrinsic{
		Call: out,
	}
}

func To_Yes_1030(in any) *pbgear.Yes_1030 {
	out := &pbgear.Yes_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_BoundedCollectionsBoundedVecBoundedVec_140(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_140 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_140{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BoundedCollectionsBoundedVecBoundedVec_140_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BoundedCollectionsBoundedVecBoundedVec_140_value0(in any) []*pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData {
	items := in.([]interface{})

	var out []*pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_BoundedCollectionsBoundedVecBoundedVec_210(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_210 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BoundedCollectionsBoundedVecBoundedVec_310(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_310 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BoundedCollectionsBoundedVecBoundedVec_1000(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_1000 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_1000{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BoundedCollectionsBoundedVecBoundedVec_1010(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_1010 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_1010{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BoundedCollectionsBoundedVecBoundedVec_1030(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_1030 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BoundedCollectionsBoundedVecBoundedVec_1040(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_1040 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_BoundedCollectionsBoundedVecBoundedVec_1400(in any) *pbgear.BoundedCollectionsBoundedVecBoundedVec_1400 {
	out := &pbgear.BoundedCollectionsBoundedVecBoundedVec_1400{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Value0
	out.Value0 = To_Repeated_BoundedCollectionsBoundedVecBoundedVec_1400_value0(v.ValueAt(0))

	return out //from message
}

func To_Repeated_BoundedCollectionsBoundedVecBoundedVec_1400_value0(in any) []*pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData {
	items := in.([]interface{})

	var out []*pbgear.Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Identity_TuplePalletIdentityTypesDatapalletIdentityTypesData(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Change_1030(in any) *pbgear.Change_1030 {
	out := &pbgear.Change_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Change
	v0 := To_OneOf_Change_1030_change(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Change_1030_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Change_1030_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Change_1030_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Change_1030_ChangeReinstrumented{
			ChangeReinstrumented: To_Reinstrumented(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Change_1040(in any) *pbgear.Change_1040 {
	out := &pbgear.Change_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Change
	v0 := To_OneOf_Change_1040_change(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Change_1040_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Change_1040_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Change_1040_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Change_1040_ChangePaused{
			ChangePaused: To_Paused(param),
		}
	case 3:
		return &pbgear.Change_1040_ChangeTerminated{
			ChangeTerminated: To_Terminated(param),
		}
	case 4:
		return &pbgear.Change_1040_ChangeExpirationChanged{
			ChangeExpirationChanged: To_ExpirationChanged(param),
		}
	case 5:
		return &pbgear.Change_1040_ChangeProgramSet{
			ChangeProgramSet: To_ProgramSet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Change_1110(in any) *pbgear.Change_1110 {
	out := &pbgear.Change_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Change
	v0 := To_OneOf_Change_1110_change(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Change_1110_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Change_1110_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Change_1110_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Change_1110_ChangeReinstrumented{
			ChangeReinstrumented: To_Reinstrumented(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Change_1400(in any) *pbgear.Change_1400 {
	out := &pbgear.Change_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Change
	v0 := To_OneOf_Change_1400_change(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Change").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Change_1400_change(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Change_1400_ChangeActive{
			ChangeActive: To_Active(param),
		}
	case 1:
		return &pbgear.Change_1400_ChangeInactive{
			ChangeInactive: To_Inactive(param),
		}
	case 2:
		return &pbgear.Change_1400_ChangeReinstrumented{
			ChangeReinstrumented: To_Reinstrumented(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Class_1030(in any) *pbgear.Class_1030 {
	out := &pbgear.Class_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Class
	v0 := To_OneOf_Class_1030_class(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Class").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Class_1030_class(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Class_1030_ClassNormal{
			ClassNormal: To_Normal(param),
		}
	case 1:
		return &pbgear.Class_1030_ClassOperational{
			ClassOperational: To_Operational(param),
		}
	case 2:
		return &pbgear.Class_1030_ClassMandatory{
			ClassMandatory: To_Mandatory(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Code_1030(in any) *pbgear.Code_1030 {
	out := &pbgear.Code_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Code
	v0 := To_OneOf_Code_1030_code(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Code_1030_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Code_1030_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.Code_1030_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.Code_1030_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Code_1040(in any) *pbgear.Code_1040 {
	out := &pbgear.Code_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Code
	v0 := To_OneOf_Code_1040_code(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Code_1040_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Code_1040_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.Code_1040_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.Code_1040_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Code_1110(in any) *pbgear.Code_1110 {
	out := &pbgear.Code_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Code
	v0 := To_OneOf_Code_1110_code(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Code_1110_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Code_1110_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.Code_1110_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.Code_1110_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Code_1400(in any) *pbgear.Code_1400 {
	out := &pbgear.Code_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Code
	v0 := To_OneOf_Code_1400_code(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Code_1400_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Code_1400_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.Code_1400_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.Code_1400_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ConvictionVoting_PalletConvictionVotingTypesTally_1030(in any) *pbgear.ConvictionVoting_PalletConvictionVotingTypesTally_1030 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingTypesTally_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Ayes
	out.Ayes = To_string(v.ValueAt(0))
	// primitive field Nays
	out.Nays = To_string(v.ValueAt(1))
	// primitive field Support
	out.Support = To_string(v.ValueAt(2))

	return out //from message
}

func To_ConvictionVoting_PalletConvictionVotingTypesTally_1040(in any) *pbgear.ConvictionVoting_PalletConvictionVotingTypesTally_1040 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingTypesTally_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Ayes
	out.Ayes = To_string(v.ValueAt(0))
	// primitive field Nays
	out.Nays = To_string(v.ValueAt(1))
	// primitive field Support
	out.Support = To_string(v.ValueAt(2))

	return out //from message
}

func To_ConvictionVoting_PalletConvictionVotingTypesTally_1400(in any) *pbgear.ConvictionVoting_PalletConvictionVotingTypesTally_1400 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingTypesTally_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Ayes
	out.Ayes = To_string(v.ValueAt(0))
	// primitive field Nays
	out.Nays = To_string(v.ValueAt(1))
	// primitive field Support
	out.Support = To_string(v.ValueAt(2))

	return out //from message
}

func To_ConvictionVoting_PalletConvictionVotingVoteVote_100(in any) *pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_100 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_PalletConvictionVotingVoteVote_310(in any) *pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_310 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_PalletConvictionVotingVoteVote_1030(in any) *pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_1030 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_PalletConvictionVotingVoteVote_1040(in any) *pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_1040 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_ConvictionVoting_PalletConvictionVotingVoteVote_1410(in any) *pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_1410 {
	out := &pbgear.ConvictionVoting_PalletConvictionVotingVoteVote_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_DestinationStatus_1030(in any) *pbgear.DestinationStatus_1030 {
	out := &pbgear.DestinationStatus_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field DestinationStatus
	v0 := To_OneOf_DestinationStatus_1030_destination_status(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("DestinationStatus").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_DestinationStatus_1030_destination_status(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.DestinationStatus_1030_DestinationStatusFree{
			DestinationStatusFree: To_Free(param),
		}
	case 1:
		return &pbgear.DestinationStatus_1030_DestinationStatusReserved{
			DestinationStatusReserved: To_Reserved(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_DispatchError_1030(in any) *pbgear.DispatchError_1030 {
	out := &pbgear.DispatchError_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field DispatchError
	v0 := To_OneOf_DispatchError_1030_dispatch_error(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("DispatchError").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_DispatchError_1030_dispatch_error(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.DispatchError_1030_DispatchErrorOther{
			DispatchErrorOther: To_Other(param),
		}
	case 1:
		return &pbgear.DispatchError_1030_DispatchErrorCannotLookup{
			DispatchErrorCannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.DispatchError_1030_DispatchErrorBadOrigin{
			DispatchErrorBadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.DispatchError_1030_DispatchErrorModule{
			DispatchErrorModule: To_Module(param),
		}
	case 4:
		return &pbgear.DispatchError_1030_DispatchErrorConsumerRemaining{
			DispatchErrorConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.DispatchError_1030_DispatchErrorNoProviders{
			DispatchErrorNoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.DispatchError_1030_DispatchErrorTooManyConsumers{
			DispatchErrorTooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.DispatchError_1030_DispatchErrorToken{
			DispatchErrorToken: To_Token(param),
		}
	case 8:
		return &pbgear.DispatchError_1030_DispatchErrorArithmetic{
			DispatchErrorArithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.DispatchError_1030_DispatchErrorTransactional{
			DispatchErrorTransactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.DispatchError_1030_DispatchErrorExhausted{
			DispatchErrorExhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.DispatchError_1030_DispatchErrorCorruption{
			DispatchErrorCorruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.DispatchError_1030_DispatchErrorUnavailable{
			DispatchErrorUnavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.DispatchError_1030_DispatchErrorRootNotAllowed{
			DispatchErrorRootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_Emergency_1030(in any) *pbgear.ElectionProviderMultiPhase_Emergency_1030 {
	out := &pbgear.ElectionProviderMultiPhase_Emergency_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ElectionProviderMultiPhase_Fallback_1030(in any) *pbgear.ElectionProviderMultiPhase_Fallback_1030 {
	out := &pbgear.ElectionProviderMultiPhase_Fallback_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ElectionProviderMultiPhase_Off_1030(in any) *pbgear.ElectionProviderMultiPhase_Off_1030 {
	out := &pbgear.ElectionProviderMultiPhase_Off_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ElectionProviderMultiPhase_OnChain_1030(in any) *pbgear.ElectionProviderMultiPhase_OnChain_1030 {
	out := &pbgear.ElectionProviderMultiPhase_OnChain_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ElectionProviderMultiPhase_Signed_1030(in any) *pbgear.ElectionProviderMultiPhase_Signed_1030 {
	out := &pbgear.ElectionProviderMultiPhase_Signed_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleBooluint32_1030(in any) *pbgear.ElectionProviderMultiPhase_TupleBooluint32_1030 {
	out := &pbgear.ElectionProviderMultiPhase_TupleBooluint32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bool(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleBooluint32_1040(in any) *pbgear.ElectionProviderMultiPhase_TupleBooluint32_1040 {
	out := &pbgear.ElectionProviderMultiPhase_TupleBooluint32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bool(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleBooluint32_1110(in any) *pbgear.ElectionProviderMultiPhase_TupleBooluint32_1110 {
	out := &pbgear.ElectionProviderMultiPhase_TupleBooluint32_1110{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bool(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_TupleBooluint32_1400(in any) *pbgear.ElectionProviderMultiPhase_TupleBooluint32_1400 {
	out := &pbgear.ElectionProviderMultiPhase_TupleBooluint32_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bool(v.ValueAt(0))
	// primitive field Value1
	out.Value1 = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_Unsigned_1030(in any) *pbgear.ElectionProviderMultiPhase_Unsigned_1030 {
	out := &pbgear.ElectionProviderMultiPhase_Unsigned_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_ElectionProviderMultiPhase_TupleBooluint32(w)
	out.Value0 = To_ElectionProviderMultiPhase_TupleBooluint32(v.ValueAt(0))

	return out //from message
}

func To_ElectionProviderMultiPhase_Compute_1030(in any) *pbgear.ElectionProviderMultiPhase_Compute_1030 {
	out := &pbgear.ElectionProviderMultiPhase_Compute_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Compute
	v0 := To_OneOf_ElectionProviderMultiPhase_Compute_1030_compute(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Compute").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_Compute_1030_compute(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_Compute_1030_ComputeOnChain{
			ComputeOnChain: To_ElectionProviderMultiPhase_OnChain(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_Compute_1030_ComputeSigned{
			ComputeSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_Compute_1030_ComputeUnsigned{
			ComputeUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_Compute_1030_ComputeFallback{
			ComputeFallback: To_ElectionProviderMultiPhase_Fallback(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhase_Compute_1030_ComputeEmergency{
			ComputeEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_Compute_1040(in any) *pbgear.ElectionProviderMultiPhase_Compute_1040 {
	out := &pbgear.ElectionProviderMultiPhase_Compute_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Compute
	v0 := To_OneOf_ElectionProviderMultiPhase_Compute_1040_compute(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Compute").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_Compute_1040_compute(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_Compute_1040_ComputeOnChain{
			ComputeOnChain: To_ElectionProviderMultiPhase_OnChain(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_Compute_1040_ComputeSigned{
			ComputeSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_Compute_1040_ComputeUnsigned{
			ComputeUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_Compute_1040_ComputeFallback{
			ComputeFallback: To_ElectionProviderMultiPhase_Fallback(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhase_Compute_1040_ComputeEmergency{
			ComputeEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_Compute_1400(in any) *pbgear.ElectionProviderMultiPhase_Compute_1400 {
	out := &pbgear.ElectionProviderMultiPhase_Compute_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Compute
	v0 := To_OneOf_ElectionProviderMultiPhase_Compute_1400_compute(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Compute").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_Compute_1400_compute(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_Compute_1400_ComputeOnChain{
			ComputeOnChain: To_ElectionProviderMultiPhase_OnChain(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_Compute_1400_ComputeSigned{
			ComputeSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_Compute_1400_ComputeUnsigned{
			ComputeUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_Compute_1400_ComputeFallback{
			ComputeFallback: To_ElectionProviderMultiPhase_Fallback(param),
		}
	case 4:
		return &pbgear.ElectionProviderMultiPhase_Compute_1400_ComputeEmergency{
			ComputeEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_From_1030(in any) *pbgear.ElectionProviderMultiPhase_From_1030 {
	out := &pbgear.ElectionProviderMultiPhase_From_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_ElectionProviderMultiPhase_From_1030_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_From_1030_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_From_1030_FromOff{
			FromOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_From_1030_FromSigned{
			FromSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_From_1030_FromUnsigned{
			FromUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_From_1030_FromEmergency{
			FromEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_From_1040(in any) *pbgear.ElectionProviderMultiPhase_From_1040 {
	out := &pbgear.ElectionProviderMultiPhase_From_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_ElectionProviderMultiPhase_From_1040_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_From_1040_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_From_1040_FromOff{
			FromOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_From_1040_FromSigned{
			FromSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_From_1040_FromUnsigned{
			FromUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_From_1040_FromEmergency{
			FromEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_From_1110(in any) *pbgear.ElectionProviderMultiPhase_From_1110 {
	out := &pbgear.ElectionProviderMultiPhase_From_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_ElectionProviderMultiPhase_From_1110_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_From_1110_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_From_1110_FromOff{
			FromOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_From_1110_FromSigned{
			FromSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_From_1110_FromUnsigned{
			FromUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_From_1110_FromEmergency{
			FromEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_From_1400(in any) *pbgear.ElectionProviderMultiPhase_From_1400 {
	out := &pbgear.ElectionProviderMultiPhase_From_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field From
	v0 := To_OneOf_ElectionProviderMultiPhase_From_1400_from(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("From").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_From_1400_from(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_From_1400_FromOff{
			FromOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_From_1400_FromSigned{
			FromSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_From_1400_FromUnsigned{
			FromUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_From_1400_FromEmergency{
			FromEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_310(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_310 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Solution To_VaraRuntimeNposSolution16(w)
	out.Solution = To_VaraRuntimeNposSolution16(v.ValueAt(0))
	// field Score To_SpNposElectionsElectionScore(w)
	out.Score = To_SpNposElectionsElectionScore(v.ValueAt(1))
	// primitive field Round
	out.Round = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1030(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1030 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Solution To_VaraRuntimeNposSolution16(w)
	out.Solution = To_VaraRuntimeNposSolution16(v.ValueAt(0))
	// field Score To_SpNposElectionsElectionScore(w)
	out.Score = To_SpNposElectionsElectionScore(v.ValueAt(1))
	// primitive field Round
	out.Round = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1040(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1040 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Solution To_VaraRuntimeNposSolution16(w)
	out.Solution = To_VaraRuntimeNposSolution16(v.ValueAt(0))
	// field Score To_SpNposElectionsElectionScore(w)
	out.Score = To_SpNposElectionsElectionScore(v.ValueAt(1))
	// primitive field Round
	out.Round = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1400(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1400 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Solution To_VaraRuntimeNposSolution16(w)
	out.Solution = To_VaraRuntimeNposSolution16(v.ValueAt(0))
	// field Score To_SpNposElectionsElectionScore(w)
	out.Score = To_SpNposElectionsElectionScore(v.ValueAt(1))
	// primitive field Round
	out.Round = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1410(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1410 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseRawSolution_1410{}
	v := in.(registry.Valuable)
	_ = v

	// field Solution To_VaraRuntimeNposSolution16(w)
	out.Solution = To_VaraRuntimeNposSolution16(v.ValueAt(0))
	// field Score To_SpNposElectionsElectionScore(w)
	out.Score = To_SpNposElectionsElectionScore(v.ValueAt(1))
	// primitive field Round
	out.Round = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_310(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_310 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Voters
	out.Voters = To_uint32(v.ValueAt(0))
	// primitive field Targets
	out.Targets = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1030(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1030 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Voters
	out.Voters = To_uint32(v.ValueAt(0))
	// primitive field Targets
	out.Targets = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1040(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1040 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Voters
	out.Voters = To_uint32(v.ValueAt(0))
	// primitive field Targets
	out.Targets = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1400(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1400 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Voters
	out.Voters = To_uint32(v.ValueAt(0))
	// primitive field Targets
	out.Targets = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1410(in any) *pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1410 {
	out := &pbgear.ElectionProviderMultiPhase_PalletElectionProviderMultiPhaseSolutionOrSnapshotSize_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Voters
	out.Voters = To_uint32(v.ValueAt(0))
	// primitive field Targets
	out.Targets = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_ElectionProviderMultiPhase_To_1030(in any) *pbgear.ElectionProviderMultiPhase_To_1030 {
	out := &pbgear.ElectionProviderMultiPhase_To_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_ElectionProviderMultiPhase_To_1030_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_To_1030_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_To_1030_ToOff{
			ToOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_To_1030_ToSigned{
			ToSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_To_1030_ToUnsigned{
			ToUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_To_1030_ToEmergency{
			ToEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_To_1040(in any) *pbgear.ElectionProviderMultiPhase_To_1040 {
	out := &pbgear.ElectionProviderMultiPhase_To_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_ElectionProviderMultiPhase_To_1040_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_To_1040_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_To_1040_ToOff{
			ToOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_To_1040_ToSigned{
			ToSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_To_1040_ToUnsigned{
			ToUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_To_1040_ToEmergency{
			ToEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_To_1110(in any) *pbgear.ElectionProviderMultiPhase_To_1110 {
	out := &pbgear.ElectionProviderMultiPhase_To_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_ElectionProviderMultiPhase_To_1110_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_To_1110_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_To_1110_ToOff{
			ToOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_To_1110_ToSigned{
			ToSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_To_1110_ToUnsigned{
			ToUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_To_1110_ToEmergency{
			ToEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ElectionProviderMultiPhase_To_1400(in any) *pbgear.ElectionProviderMultiPhase_To_1400 {
	out := &pbgear.ElectionProviderMultiPhase_To_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field To
	v0 := To_OneOf_ElectionProviderMultiPhase_To_1400_to(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("To").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ElectionProviderMultiPhase_To_1400_to(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ElectionProviderMultiPhase_To_1400_ToOff{
			ToOff: To_ElectionProviderMultiPhase_Off(param),
		}
	case 1:
		return &pbgear.ElectionProviderMultiPhase_To_1400_ToSigned{
			ToSigned: To_ElectionProviderMultiPhase_Signed(param),
		}
	case 2:
		return &pbgear.ElectionProviderMultiPhase_To_1400_ToUnsigned{
			ToUnsigned: To_ElectionProviderMultiPhase_Unsigned(param),
		}
	case 3:
		return &pbgear.ElectionProviderMultiPhase_To_1400_ToEmergency{
			ToEmergency: To_ElectionProviderMultiPhase_Emergency(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Entry_1030(in any) *pbgear.Entry_1030 {
	out := &pbgear.Entry_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Entry
	v0 := To_OneOf_Entry_1030_entry(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Entry").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Entry_1030_entry(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Entry_1030_EntryInit{
			EntryInit: To_Init(param),
		}
	case 1:
		return &pbgear.Entry_1030_EntryHandle{
			EntryHandle: To_Handle(param),
		}
	case 2:
		return &pbgear.Entry_1030_EntryReply{
			EntryReply: To_Reply(param),
		}
	case 3:
		return &pbgear.Entry_1030_EntrySignal{
			EntrySignal: To_Signal(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Entry_1040(in any) *pbgear.Entry_1040 {
	out := &pbgear.Entry_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Entry
	v0 := To_OneOf_Entry_1040_entry(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Entry").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Entry_1040_entry(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Entry_1040_EntryInit{
			EntryInit: To_Init(param),
		}
	case 1:
		return &pbgear.Entry_1040_EntryHandle{
			EntryHandle: To_Handle(param),
		}
	case 2:
		return &pbgear.Entry_1040_EntryReply{
			EntryReply: To_Reply(param),
		}
	case 3:
		return &pbgear.Entry_1040_EntrySignal{
			EntrySignal: To_Signal(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Entry_1110(in any) *pbgear.Entry_1110 {
	out := &pbgear.Entry_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Entry
	v0 := To_OneOf_Entry_1110_entry(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Entry").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Entry_1110_entry(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Entry_1110_EntryInit{
			EntryInit: To_Init(param),
		}
	case 1:
		return &pbgear.Entry_1110_EntryHandle{
			EntryHandle: To_Handle(param),
		}
	case 2:
		return &pbgear.Entry_1110_EntryReply{
			EntryReply: To_Reply(param),
		}
	case 3:
		return &pbgear.Entry_1110_EntrySignal{
			EntrySignal: To_Signal(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Entry_1400(in any) *pbgear.Entry_1400 {
	out := &pbgear.Entry_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Entry
	v0 := To_OneOf_Entry_1400_entry(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Entry").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Entry_1400_entry(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Entry_1400_EntryInit{
			EntryInit: To_Init(param),
		}
	case 1:
		return &pbgear.Entry_1400_EntryHandle{
			EntryHandle: To_Handle(param),
		}
	case 2:
		return &pbgear.Entry_1400_EntryReply{
			EntryReply: To_Reply(param),
		}
	case 3:
		return &pbgear.Entry_1400_EntrySignal{
			EntrySignal: To_Signal(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FrameSupportDispatchDispatchInfo_1030(in any) *pbgear.FrameSupportDispatchDispatchInfo_1030 {
	out := &pbgear.FrameSupportDispatchDispatchInfo_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Weight To_SpWeightsWeightV2Weight(w)
	out.Weight = To_SpWeightsWeightV2Weight(v.ValueAt(0))
	// oneOf field Class
	v1 := To_OneOf_FrameSupportDispatchDispatchInfo_1030_class(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Class").Set(reflect.ValueOf(v1))
	// oneOf field PaysFee
	v2 := To_OneOf_FrameSupportDispatchDispatchInfo_1030_pays_fee(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("PaysFee").Set(reflect.ValueOf(v2))

	return out //from message
}

func To_OneOf_FrameSupportDispatchDispatchInfo_1030_class(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FrameSupportDispatchDispatchInfo_1030_ClassNormal{
			ClassNormal: To_Normal(param),
		}
	case 1:
		return &pbgear.FrameSupportDispatchDispatchInfo_1030_ClassOperational{
			ClassOperational: To_Operational(param),
		}
	case 2:
		return &pbgear.FrameSupportDispatchDispatchInfo_1030_ClassMandatory{
			ClassMandatory: To_Mandatory(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_FrameSupportDispatchDispatchInfo_1030_pays_fee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FrameSupportDispatchDispatchInfo_1030_PaysFeeYes{
			PaysFeeYes: To_Yes(param),
		}
	case 1:
		return &pbgear.FrameSupportDispatchDispatchInfo_1030_PaysFeeNo{
			PaysFeeNo: To_No(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FrameSupportDispatchPostDispatchInfo_1030(in any) *pbgear.FrameSupportDispatchPostDispatchInfo_1030 {
	out := &pbgear.FrameSupportDispatchPostDispatchInfo_1030{}
	v := in.(registry.Valuable)
	_ = v

	// optional field ActualWeight true
	if v.HasValue() {
		out.ActualWeight = To_Optional_FrameSupportDispatchPostDispatchInfo_1030_actual_weight(v.ValueAt(0))
	}
	// oneOf field PaysFee
	v1 := To_OneOf_FrameSupportDispatchPostDispatchInfo_1030_pays_fee(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("PaysFee").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_Optional_FrameSupportDispatchPostDispatchInfo_1030_actual_weight(in any) *pbgear.SpWeightsWeightV2Weight {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_FrameSupportDispatchPostDispatchInfo_1030_pays_fee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FrameSupportDispatchPostDispatchInfo_1030_PaysFeeYes{
			PaysFeeYes: To_Yes(param),
		}
	case 1:
		return &pbgear.FrameSupportDispatchPostDispatchInfo_1030_PaysFeeNo{
			PaysFeeNo: To_No(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FrameSupportDispatchPostDispatchInfo_1040(in any) *pbgear.FrameSupportDispatchPostDispatchInfo_1040 {
	out := &pbgear.FrameSupportDispatchPostDispatchInfo_1040{}
	v := in.(registry.Valuable)
	_ = v

	// optional field ActualWeight true
	if v.HasValue() {
		out.ActualWeight = To_Optional_FrameSupportDispatchPostDispatchInfo_1040_actual_weight(v.ValueAt(0))
	}
	// oneOf field PaysFee
	v1 := To_OneOf_FrameSupportDispatchPostDispatchInfo_1040_pays_fee(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("PaysFee").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_Optional_FrameSupportDispatchPostDispatchInfo_1040_actual_weight(in any) *pbgear.SpWeightsWeightV2Weight {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_FrameSupportDispatchPostDispatchInfo_1040_pays_fee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FrameSupportDispatchPostDispatchInfo_1040_PaysFeeYes{
			PaysFeeYes: To_Yes(param),
		}
	case 1:
		return &pbgear.FrameSupportDispatchPostDispatchInfo_1040_PaysFeeNo{
			PaysFeeNo: To_No(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_FrameSupportDispatchPostDispatchInfo_1400(in any) *pbgear.FrameSupportDispatchPostDispatchInfo_1400 {
	out := &pbgear.FrameSupportDispatchPostDispatchInfo_1400{}
	v := in.(registry.Valuable)
	_ = v

	// optional field ActualWeight true
	if v.HasValue() {
		out.ActualWeight = To_Optional_FrameSupportDispatchPostDispatchInfo_1400_actual_weight(v.ValueAt(0))
	}
	// oneOf field PaysFee
	v1 := To_OneOf_FrameSupportDispatchPostDispatchInfo_1400_pays_fee(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("PaysFee").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_Optional_FrameSupportDispatchPostDispatchInfo_1400_actual_weight(in any) *pbgear.SpWeightsWeightV2Weight {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_OneOf_FrameSupportDispatchPostDispatchInfo_1400_pays_fee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.FrameSupportDispatchPostDispatchInfo_1400_PaysFeeYes{
			PaysFeeYes: To_Yes(param),
		}
	case 1:
		return &pbgear.FrameSupportDispatchPostDispatchInfo_1400_PaysFeeNo{
			PaysFeeNo: To_No(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearCoreBufferLimitedVec_1030(in any) *pbgear.GearCoreBufferLimitedVec_1030 {
	out := &pbgear.GearCoreBufferLimitedVec_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreBufferLimitedVec_1040(in any) *pbgear.GearCoreBufferLimitedVec_1040 {
	out := &pbgear.GearCoreBufferLimitedVec_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreBufferLimitedVec_1110(in any) *pbgear.GearCoreBufferLimitedVec_1110 {
	out := &pbgear.GearCoreBufferLimitedVec_1110{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreBufferLimitedVec_1400(in any) *pbgear.GearCoreBufferLimitedVec_1400 {
	out := &pbgear.GearCoreBufferLimitedVec_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsCodeId_1030(in any) *pbgear.GearCoreIdsCodeId_1030 {
	out := &pbgear.GearCoreIdsCodeId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsCodeId_1040(in any) *pbgear.GearCoreIdsCodeId_1040 {
	out := &pbgear.GearCoreIdsCodeId_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsCodeId_1400(in any) *pbgear.GearCoreIdsCodeId_1400 {
	out := &pbgear.GearCoreIdsCodeId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsMessageId_1010(in any) *pbgear.GearCoreIdsMessageId_1010 {
	out := &pbgear.GearCoreIdsMessageId_1010{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsMessageId_1030(in any) *pbgear.GearCoreIdsMessageId_1030 {
	out := &pbgear.GearCoreIdsMessageId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsMessageId_1040(in any) *pbgear.GearCoreIdsMessageId_1040 {
	out := &pbgear.GearCoreIdsMessageId_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsMessageId_1400(in any) *pbgear.GearCoreIdsMessageId_1400 {
	out := &pbgear.GearCoreIdsMessageId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsProgramId_210(in any) *pbgear.GearCoreIdsProgramId_210 {
	out := &pbgear.GearCoreIdsProgramId_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsProgramId_310(in any) *pbgear.GearCoreIdsProgramId_310 {
	out := &pbgear.GearCoreIdsProgramId_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsProgramId_1030(in any) *pbgear.GearCoreIdsProgramId_1030 {
	out := &pbgear.GearCoreIdsProgramId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsProgramId(w)
	out.Value0 = To_GearCoreIdsProgramId(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsProgramId_1040(in any) *pbgear.GearCoreIdsProgramId_1040 {
	out := &pbgear.GearCoreIdsProgramId_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsProgramId_1110(in any) *pbgear.GearCoreIdsProgramId_1110 {
	out := &pbgear.GearCoreIdsProgramId_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsProgramId(w)
	out.Value0 = To_GearCoreIdsProgramId(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsProgramId_1400(in any) *pbgear.GearCoreIdsProgramId_1400 {
	out := &pbgear.GearCoreIdsProgramId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_GearCoreIdsProgramId(w)
	out.Value0 = To_GearCoreIdsProgramId(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsReservationId_1030(in any) *pbgear.GearCoreIdsReservationId_1030 {
	out := &pbgear.GearCoreIdsReservationId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsReservationId_1040(in any) *pbgear.GearCoreIdsReservationId_1040 {
	out := &pbgear.GearCoreIdsReservationId_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsReservationId_1110(in any) *pbgear.GearCoreIdsReservationId_1110 {
	out := &pbgear.GearCoreIdsReservationId_1110{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreIdsReservationId_1400(in any) *pbgear.GearCoreIdsReservationId_1400 {
	out := &pbgear.GearCoreIdsReservationId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearCoreMessageCommonReplyDetails_1030(in any) *pbgear.GearCoreMessageCommonReplyDetails_1030 {
	out := &pbgear.GearCoreMessageCommonReplyDetails_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field To To_GearCoreIdsMessageId(w)
	out.To = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Code
	v1 := To_OneOf_GearCoreMessageCommonReplyDetails_1030_code(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_GearCoreMessageCommonReplyDetails_1030_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearCoreMessageCommonReplyDetails_1030_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.GearCoreMessageCommonReplyDetails_1030_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.GearCoreMessageCommonReplyDetails_1030_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearCoreMessageCommonReplyDetails_1040(in any) *pbgear.GearCoreMessageCommonReplyDetails_1040 {
	out := &pbgear.GearCoreMessageCommonReplyDetails_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field To To_GearCoreIdsMessageId(w)
	out.To = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Code
	v1 := To_OneOf_GearCoreMessageCommonReplyDetails_1040_code(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_GearCoreMessageCommonReplyDetails_1040_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearCoreMessageCommonReplyDetails_1040_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.GearCoreMessageCommonReplyDetails_1040_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.GearCoreMessageCommonReplyDetails_1040_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearCoreMessageCommonReplyDetails_1110(in any) *pbgear.GearCoreMessageCommonReplyDetails_1110 {
	out := &pbgear.GearCoreMessageCommonReplyDetails_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field To To_GearCoreIdsMessageId(w)
	out.To = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Code
	v1 := To_OneOf_GearCoreMessageCommonReplyDetails_1110_code(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_GearCoreMessageCommonReplyDetails_1110_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearCoreMessageCommonReplyDetails_1110_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.GearCoreMessageCommonReplyDetails_1110_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.GearCoreMessageCommonReplyDetails_1110_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearCoreMessageCommonReplyDetails_1400(in any) *pbgear.GearCoreMessageCommonReplyDetails_1400 {
	out := &pbgear.GearCoreMessageCommonReplyDetails_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field To To_GearCoreIdsMessageId(w)
	out.To = To_GearCoreIdsMessageId(v.ValueAt(0))
	// oneOf field Code
	v1 := To_OneOf_GearCoreMessageCommonReplyDetails_1400_code(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_GearCoreMessageCommonReplyDetails_1400_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearCoreMessageCommonReplyDetails_1400_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.GearCoreMessageCommonReplyDetails_1400_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.GearCoreMessageCommonReplyDetails_1400_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearCoreMessageCommonReplyDetails_1420(in any) *pbgear.GearCoreMessageCommonReplyDetails_1420 {
	out := &pbgear.GearCoreMessageCommonReplyDetails_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field To To_GprimitivesMessageId(w)
	out.To = To_GprimitivesMessageId(v.ValueAt(0))
	// oneOf field Code
	v1 := To_OneOf_GearCoreMessageCommonReplyDetails_1420_code(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Code").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_GearCoreMessageCommonReplyDetails_1420_code(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.GearCoreMessageCommonReplyDetails_1420_CodeSuccess{
			CodeSuccess: To_Success(param),
		}
	case 1:
		return &pbgear.GearCoreMessageCommonReplyDetails_1420_CodeError{
			CodeError: To_Error(param),
		}
	case 255:
		return &pbgear.GearCoreMessageCommonReplyDetails_1420_CodeUnsupported{
			CodeUnsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_GearCoreMessageUserUserMessage_1030(in any) *pbgear.GearCoreMessageUserUserMessage_1030 {
	out := &pbgear.GearCoreMessageUserUserMessage_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// field Source To_GearCoreIdsProgramId(w)
	out.Source = To_GearCoreIdsProgramId(v.ValueAt(1))
	// field Destination To_GearCoreIdsProgramId(w)
	out.Destination = To_GearCoreIdsProgramId(v.ValueAt(2))
	// field Payload To_GearCoreBufferLimitedVec(w)
	out.Payload = To_GearCoreBufferLimitedVec(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// optional field Details true
	if v.HasValue() {
		out.Details = To_Optional_GearCoreMessageUserUserMessage_1030_details(v.ValueAt(5))
	}

	return out //from message
}

func To_Optional_GearCoreMessageUserUserMessage_1030_details(in any) *pbgear.GearCoreMessageCommonReplyDetails {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_GearCoreMessageUserUserMessage_1040(in any) *pbgear.GearCoreMessageUserUserMessage_1040 {
	out := &pbgear.GearCoreMessageUserUserMessage_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// field Source To_GearCoreIdsProgramId(w)
	out.Source = To_GearCoreIdsProgramId(v.ValueAt(1))
	// field Destination To_GearCoreIdsProgramId(w)
	out.Destination = To_GearCoreIdsProgramId(v.ValueAt(2))
	// field Payload To_GearCoreBufferLimitedVec(w)
	out.Payload = To_GearCoreBufferLimitedVec(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// optional field Details true
	if v.HasValue() {
		out.Details = To_Optional_GearCoreMessageUserUserMessage_1040_details(v.ValueAt(5))
	}

	return out //from message
}

func To_Optional_GearCoreMessageUserUserMessage_1040_details(in any) *pbgear.GearCoreMessageCommonReplyDetails {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_GearCoreMessageUserUserMessage_1110(in any) *pbgear.GearCoreMessageUserUserMessage_1110 {
	out := &pbgear.GearCoreMessageUserUserMessage_1110{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// field Source To_GearCoreIdsProgramId(w)
	out.Source = To_GearCoreIdsProgramId(v.ValueAt(1))
	// field Destination To_GearCoreIdsProgramId(w)
	out.Destination = To_GearCoreIdsProgramId(v.ValueAt(2))
	// field Payload To_GearCoreBufferLimitedVec(w)
	out.Payload = To_GearCoreBufferLimitedVec(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// optional field Details true
	if v.HasValue() {
		out.Details = To_Optional_GearCoreMessageUserUserMessage_1110_details(v.ValueAt(5))
	}

	return out //from message
}

func To_Optional_GearCoreMessageUserUserMessage_1110_details(in any) *pbgear.GearCoreMessageCommonReplyDetails {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_GearCoreMessageUserUserMessage_1400(in any) *pbgear.GearCoreMessageUserUserMessage_1400 {
	out := &pbgear.GearCoreMessageUserUserMessage_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GearCoreIdsMessageId(w)
	out.Id = To_GearCoreIdsMessageId(v.ValueAt(0))
	// field Source To_GearCoreIdsProgramId(w)
	out.Source = To_GearCoreIdsProgramId(v.ValueAt(1))
	// field Destination To_GearCoreIdsProgramId(w)
	out.Destination = To_GearCoreIdsProgramId(v.ValueAt(2))
	// field Payload To_GearCoreBufferLimitedVec(w)
	out.Payload = To_GearCoreBufferLimitedVec(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// optional field Details true
	if v.HasValue() {
		out.Details = To_Optional_GearCoreMessageUserUserMessage_1400_details(v.ValueAt(5))
	}

	return out //from message
}

func To_Optional_GearCoreMessageUserUserMessage_1400_details(in any) *pbgear.GearCoreMessageCommonReplyDetails {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_GearCoreMessageUserUserMessage_1420(in any) *pbgear.GearCoreMessageUserUserMessage_1420 {
	out := &pbgear.GearCoreMessageUserUserMessage_1420{}
	v := in.(registry.Valuable)
	_ = v

	// field Id To_GprimitivesMessageId(w)
	out.Id = To_GprimitivesMessageId(v.ValueAt(0))
	// field Source To_GprimitivesActorId(w)
	out.Source = To_GprimitivesActorId(v.ValueAt(1))
	// field Destination To_GprimitivesActorId(w)
	out.Destination = To_GprimitivesActorId(v.ValueAt(2))
	// field Payload To_GearCoreBufferLimitedVec(w)
	out.Payload = To_GearCoreBufferLimitedVec(v.ValueAt(3))
	// primitive field Value
	out.Value = To_string(v.ValueAt(4))
	// optional field Details true
	if v.HasValue() {
		out.Details = To_Optional_GearCoreMessageUserUserMessage_1420_details(v.ValueAt(5))
	}

	return out //from message
}

func To_Optional_GearCoreMessageUserUserMessage_1420_details(in any) *pbgear.GearCoreMessageCommonReplyDetails {
	panic("Not implemented")
	return nil //funcForOptionalField
}
func To_GearVoucher_PalletGearVoucherInternalVoucherId_1110(in any) *pbgear.GearVoucher_PalletGearVoucherInternalVoucherId_1110 {
	out := &pbgear.GearVoucher_PalletGearVoucherInternalVoucherId_1110{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GearVoucher_PalletGearVoucherInternalVoucherId_1400(in any) *pbgear.GearVoucher_PalletGearVoucherInternalVoucherId_1400 {
	out := &pbgear.GearVoucher_PalletGearVoucherInternalVoucherId_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GprimitivesActorId_1420(in any) *pbgear.GprimitivesActorId_1420 {
	out := &pbgear.GprimitivesActorId_1420{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GprimitivesCodeId_1420(in any) *pbgear.GprimitivesCodeId_1420 {
	out := &pbgear.GprimitivesCodeId_1420{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GprimitivesMessageId_1420(in any) *pbgear.GprimitivesMessageId_1420 {
	out := &pbgear.GprimitivesMessageId_1420{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_GprimitivesReservationId_1420(in any) *pbgear.GprimitivesReservationId_1420 {
	out := &pbgear.GprimitivesReservationId_1420{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_Identity_PalletIdentitySimpleIdentityInfo_1410(in any) *pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410 {
	out := &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410{}
	v := in.(registry.Valuable)
	_ = v

	// field Additional To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Additional = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))
	// oneOf field Display
	v1 := To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_display(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v1))
	// oneOf field Legal
	v2 := To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_legal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v2))
	// oneOf field Web
	v3 := To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_web(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v3))
	// oneOf field Riot
	v4 := To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_riot(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v4))
	// oneOf field Email
	v5 := To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_email(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v5))
	// primitive field PgpFingerprint
	out.PgpFingerprint = To_bytes(v.ValueAt(6))
	// oneOf field Image
	v7 := To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_image(v.ValueAt(7))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v7))
	// oneOf field Twitter
	v8 := To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_twitter(v.ValueAt(8))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v8))

	return out //from message
}

func To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentitySimpleIdentityInfo_1410_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentitySimpleIdentityInfo_1410_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_PalletIdentityTypesBitFlags_100(in any) *pbgear.Identity_PalletIdentityTypesBitFlags_100 {
	out := &pbgear.Identity_PalletIdentityTypesBitFlags_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_Identity_PalletIdentityTypesBitFlags_140(in any) *pbgear.Identity_PalletIdentityTypesBitFlags_140 {
	out := &pbgear.Identity_PalletIdentityTypesBitFlags_140{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_Identity_PalletIdentityTypesBitFlags_310(in any) *pbgear.Identity_PalletIdentityTypesBitFlags_310 {
	out := &pbgear.Identity_PalletIdentityTypesBitFlags_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_Identity_PalletIdentityTypesBitFlags_1030(in any) *pbgear.Identity_PalletIdentityTypesBitFlags_1030 {
	out := &pbgear.Identity_PalletIdentityTypesBitFlags_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_Identity_PalletIdentityTypesBitFlags_1400(in any) *pbgear.Identity_PalletIdentityTypesBitFlags_1400 {
	out := &pbgear.Identity_PalletIdentityTypesBitFlags_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_Identity_PalletIdentityTypesIdentityInfo_100(in any) *pbgear.Identity_PalletIdentityTypesIdentityInfo_100 {
	out := &pbgear.Identity_PalletIdentityTypesIdentityInfo_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Additional To_SpCoreBoundedBoundedVecBoundedVec(w)
	out.Additional = To_SpCoreBoundedBoundedVecBoundedVec(v.ValueAt(0))
	// oneOf field Display
	v1 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_display(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v1))
	// oneOf field Legal
	v2 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_legal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v2))
	// oneOf field Web
	v3 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_web(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v3))
	// oneOf field Riot
	v4 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_riot(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v4))
	// oneOf field Email
	v5 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_email(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v5))
	// primitive field PgpFingerprint
	out.PgpFingerprint = To_bytes(v.ValueAt(6))
	// oneOf field Image
	v7 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_image(v.ValueAt(7))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v7))
	// oneOf field Twitter
	v8 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_twitter(v.ValueAt(8))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v8))

	return out //from message
}

func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_100_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_100_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_PalletIdentityTypesIdentityInfo_140(in any) *pbgear.Identity_PalletIdentityTypesIdentityInfo_140 {
	out := &pbgear.Identity_PalletIdentityTypesIdentityInfo_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Additional To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Additional = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))
	// oneOf field Display
	v1 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_display(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v1))
	// oneOf field Legal
	v2 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_legal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v2))
	// oneOf field Web
	v3 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_web(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v3))
	// oneOf field Riot
	v4 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_riot(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v4))
	// oneOf field Email
	v5 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_email(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v5))
	// primitive field PgpFingerprint
	out.PgpFingerprint = To_bytes(v.ValueAt(6))
	// oneOf field Image
	v7 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_image(v.ValueAt(7))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v7))
	// oneOf field Twitter
	v8 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_twitter(v.ValueAt(8))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v8))

	return out //from message
}

func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_140_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_140_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_PalletIdentityTypesIdentityInfo_310(in any) *pbgear.Identity_PalletIdentityTypesIdentityInfo_310 {
	out := &pbgear.Identity_PalletIdentityTypesIdentityInfo_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Additional To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Additional = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))
	// oneOf field Display
	v1 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_display(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v1))
	// oneOf field Legal
	v2 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_legal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v2))
	// oneOf field Web
	v3 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_web(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v3))
	// oneOf field Riot
	v4 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_riot(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v4))
	// oneOf field Email
	v5 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_email(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v5))
	// primitive field PgpFingerprint
	out.PgpFingerprint = To_bytes(v.ValueAt(6))
	// oneOf field Image
	v7 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_image(v.ValueAt(7))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v7))
	// oneOf field Twitter
	v8 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_twitter(v.ValueAt(8))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v8))

	return out //from message
}

func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_310_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_310_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_PalletIdentityTypesIdentityInfo_1030(in any) *pbgear.Identity_PalletIdentityTypesIdentityInfo_1030 {
	out := &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Additional To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Additional = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))
	// oneOf field Display
	v1 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_display(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v1))
	// oneOf field Legal
	v2 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_legal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v2))
	// oneOf field Web
	v3 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_web(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v3))
	// oneOf field Riot
	v4 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_riot(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v4))
	// oneOf field Email
	v5 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_email(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v5))
	// primitive field PgpFingerprint
	out.PgpFingerprint = To_bytes(v.ValueAt(6))
	// oneOf field Image
	v7 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_image(v.ValueAt(7))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v7))
	// oneOf field Twitter
	v8 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_twitter(v.ValueAt(8))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v8))

	return out //from message
}

func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1030_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1030_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_PalletIdentityTypesIdentityInfo_1040(in any) *pbgear.Identity_PalletIdentityTypesIdentityInfo_1040 {
	out := &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Additional To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Additional = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))
	// oneOf field Display
	v1 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_display(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v1))
	// oneOf field Legal
	v2 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_legal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v2))
	// oneOf field Web
	v3 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_web(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v3))
	// oneOf field Riot
	v4 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_riot(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v4))
	// oneOf field Email
	v5 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_email(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v5))
	// primitive field PgpFingerprint
	out.PgpFingerprint = To_bytes(v.ValueAt(6))
	// oneOf field Image
	v7 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_image(v.ValueAt(7))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v7))
	// oneOf field Twitter
	v8 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_twitter(v.ValueAt(8))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v8))

	return out //from message
}

func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1040_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1040_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Identity_PalletIdentityTypesIdentityInfo_1400(in any) *pbgear.Identity_PalletIdentityTypesIdentityInfo_1400 {
	out := &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Additional To_BoundedCollectionsBoundedVecBoundedVec(w)
	out.Additional = To_BoundedCollectionsBoundedVecBoundedVec(v.ValueAt(0))
	// oneOf field Display
	v1 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_display(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Display").Set(reflect.ValueOf(v1))
	// oneOf field Legal
	v2 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_legal(v.ValueAt(2))
	reflect.ValueOf(out).Elem().FieldByName("Legal").Set(reflect.ValueOf(v2))
	// oneOf field Web
	v3 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_web(v.ValueAt(3))
	reflect.ValueOf(out).Elem().FieldByName("Web").Set(reflect.ValueOf(v3))
	// oneOf field Riot
	v4 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_riot(v.ValueAt(4))
	reflect.ValueOf(out).Elem().FieldByName("Riot").Set(reflect.ValueOf(v4))
	// oneOf field Email
	v5 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_email(v.ValueAt(5))
	reflect.ValueOf(out).Elem().FieldByName("Email").Set(reflect.ValueOf(v5))
	// primitive field PgpFingerprint
	out.PgpFingerprint = To_bytes(v.ValueAt(6))
	// oneOf field Image
	v7 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_image(v.ValueAt(7))
	reflect.ValueOf(out).Elem().FieldByName("Image").Set(reflect.ValueOf(v7))
	// oneOf field Twitter
	v8 := To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_twitter(v.ValueAt(8))
	reflect.ValueOf(out).Elem().FieldByName("Twitter").Set(reflect.ValueOf(v8))

	return out //from message
}

func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_display(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayNone{
			DisplayNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw0{
			DisplayRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw1{
			DisplayRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw2{
			DisplayRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw3{
			DisplayRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw4{
			DisplayRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw5{
			DisplayRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw6{
			DisplayRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw7{
			DisplayRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw8{
			DisplayRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw9{
			DisplayRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw10{
			DisplayRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw11{
			DisplayRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw12{
			DisplayRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw13{
			DisplayRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw14{
			DisplayRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw15{
			DisplayRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw16{
			DisplayRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw17{
			DisplayRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw18{
			DisplayRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw19{
			DisplayRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw20{
			DisplayRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw21{
			DisplayRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw22{
			DisplayRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw23{
			DisplayRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw24{
			DisplayRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw25{
			DisplayRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw26{
			DisplayRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw27{
			DisplayRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw28{
			DisplayRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw29{
			DisplayRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw30{
			DisplayRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw31{
			DisplayRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayRaw32{
			DisplayRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayBlakeTwo256{
			DisplayBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplaySha256{
			DisplaySha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayKeccak256{
			DisplayKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_DisplayShaThree256{
			DisplayShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_legal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalNone{
			LegalNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw0{
			LegalRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw1{
			LegalRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw2{
			LegalRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw3{
			LegalRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw4{
			LegalRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw5{
			LegalRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw6{
			LegalRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw7{
			LegalRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw8{
			LegalRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw9{
			LegalRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw10{
			LegalRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw11{
			LegalRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw12{
			LegalRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw13{
			LegalRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw14{
			LegalRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw15{
			LegalRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw16{
			LegalRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw17{
			LegalRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw18{
			LegalRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw19{
			LegalRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw20{
			LegalRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw21{
			LegalRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw22{
			LegalRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw23{
			LegalRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw24{
			LegalRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw25{
			LegalRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw26{
			LegalRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw27{
			LegalRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw28{
			LegalRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw29{
			LegalRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw30{
			LegalRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw31{
			LegalRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalRaw32{
			LegalRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalBlakeTwo256{
			LegalBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalSha256{
			LegalSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalKeccak256{
			LegalKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_LegalShaThree256{
			LegalShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_web(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebNone{
			WebNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw0{
			WebRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw1{
			WebRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw2{
			WebRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw3{
			WebRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw4{
			WebRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw5{
			WebRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw6{
			WebRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw7{
			WebRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw8{
			WebRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw9{
			WebRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw10{
			WebRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw11{
			WebRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw12{
			WebRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw13{
			WebRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw14{
			WebRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw15{
			WebRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw16{
			WebRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw17{
			WebRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw18{
			WebRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw19{
			WebRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw20{
			WebRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw21{
			WebRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw22{
			WebRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw23{
			WebRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw24{
			WebRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw25{
			WebRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw26{
			WebRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw27{
			WebRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw28{
			WebRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw29{
			WebRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw30{
			WebRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw31{
			WebRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebRaw32{
			WebRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebBlakeTwo256{
			WebBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebSha256{
			WebSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebKeccak256{
			WebKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_WebShaThree256{
			WebShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_riot(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotNone{
			RiotNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw0{
			RiotRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw1{
			RiotRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw2{
			RiotRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw3{
			RiotRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw4{
			RiotRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw5{
			RiotRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw6{
			RiotRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw7{
			RiotRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw8{
			RiotRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw9{
			RiotRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw10{
			RiotRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw11{
			RiotRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw12{
			RiotRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw13{
			RiotRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw14{
			RiotRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw15{
			RiotRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw16{
			RiotRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw17{
			RiotRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw18{
			RiotRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw19{
			RiotRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw20{
			RiotRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw21{
			RiotRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw22{
			RiotRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw23{
			RiotRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw24{
			RiotRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw25{
			RiotRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw26{
			RiotRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw27{
			RiotRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw28{
			RiotRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw29{
			RiotRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw30{
			RiotRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw31{
			RiotRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotRaw32{
			RiotRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotBlakeTwo256{
			RiotBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotSha256{
			RiotSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotKeccak256{
			RiotKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_RiotShaThree256{
			RiotShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_email(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailNone{
			EmailNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw0{
			EmailRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw1{
			EmailRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw2{
			EmailRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw3{
			EmailRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw4{
			EmailRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw5{
			EmailRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw6{
			EmailRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw7{
			EmailRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw8{
			EmailRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw9{
			EmailRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw10{
			EmailRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw11{
			EmailRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw12{
			EmailRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw13{
			EmailRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw14{
			EmailRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw15{
			EmailRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw16{
			EmailRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw17{
			EmailRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw18{
			EmailRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw19{
			EmailRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw20{
			EmailRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw21{
			EmailRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw22{
			EmailRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw23{
			EmailRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw24{
			EmailRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw25{
			EmailRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw26{
			EmailRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw27{
			EmailRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw28{
			EmailRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw29{
			EmailRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw30{
			EmailRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw31{
			EmailRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailRaw32{
			EmailRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailBlakeTwo256{
			EmailBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailSha256{
			EmailSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailKeccak256{
			EmailKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_EmailShaThree256{
			EmailShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_image(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageNone{
			ImageNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw0{
			ImageRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw1{
			ImageRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw2{
			ImageRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw3{
			ImageRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw4{
			ImageRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw5{
			ImageRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw6{
			ImageRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw7{
			ImageRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw8{
			ImageRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw9{
			ImageRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw10{
			ImageRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw11{
			ImageRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw12{
			ImageRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw13{
			ImageRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw14{
			ImageRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw15{
			ImageRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw16{
			ImageRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw17{
			ImageRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw18{
			ImageRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw19{
			ImageRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw20{
			ImageRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw21{
			ImageRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw22{
			ImageRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw23{
			ImageRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw24{
			ImageRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw25{
			ImageRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw26{
			ImageRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw27{
			ImageRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw28{
			ImageRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw29{
			ImageRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw30{
			ImageRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw31{
			ImageRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageRaw32{
			ImageRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageBlakeTwo256{
			ImageBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageSha256{
			ImageSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageKeccak256{
			ImageKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_ImageShaThree256{
			ImageShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_OneOf_Identity_PalletIdentityTypesIdentityInfo_1400_twitter(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterNone{
			TwitterNone: To_Identity_None(param),
		}
	case 1:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw0{
			TwitterRaw0: To_Identity_Raw0(param),
		}
	case 2:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw1{
			TwitterRaw1: To_Identity_Raw1(param),
		}
	case 3:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw2{
			TwitterRaw2: To_Identity_Raw2(param),
		}
	case 4:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw3{
			TwitterRaw3: To_Identity_Raw3(param),
		}
	case 5:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw4{
			TwitterRaw4: To_Identity_Raw4(param),
		}
	case 6:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw5{
			TwitterRaw5: To_Identity_Raw5(param),
		}
	case 7:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw6{
			TwitterRaw6: To_Identity_Raw6(param),
		}
	case 8:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw7{
			TwitterRaw7: To_Identity_Raw7(param),
		}
	case 9:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw8{
			TwitterRaw8: To_Identity_Raw8(param),
		}
	case 10:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw9{
			TwitterRaw9: To_Identity_Raw9(param),
		}
	case 11:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw10{
			TwitterRaw10: To_Identity_Raw10(param),
		}
	case 12:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw11{
			TwitterRaw11: To_Identity_Raw11(param),
		}
	case 13:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw12{
			TwitterRaw12: To_Identity_Raw12(param),
		}
	case 14:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw13{
			TwitterRaw13: To_Identity_Raw13(param),
		}
	case 15:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw14{
			TwitterRaw14: To_Identity_Raw14(param),
		}
	case 16:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw15{
			TwitterRaw15: To_Identity_Raw15(param),
		}
	case 17:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw16{
			TwitterRaw16: To_Identity_Raw16(param),
		}
	case 18:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw17{
			TwitterRaw17: To_Identity_Raw17(param),
		}
	case 19:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw18{
			TwitterRaw18: To_Identity_Raw18(param),
		}
	case 20:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw19{
			TwitterRaw19: To_Identity_Raw19(param),
		}
	case 21:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw20{
			TwitterRaw20: To_Identity_Raw20(param),
		}
	case 22:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw21{
			TwitterRaw21: To_Identity_Raw21(param),
		}
	case 23:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw22{
			TwitterRaw22: To_Identity_Raw22(param),
		}
	case 24:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw23{
			TwitterRaw23: To_Identity_Raw23(param),
		}
	case 25:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw24{
			TwitterRaw24: To_Identity_Raw24(param),
		}
	case 26:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw25{
			TwitterRaw25: To_Identity_Raw25(param),
		}
	case 27:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw26{
			TwitterRaw26: To_Identity_Raw26(param),
		}
	case 28:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw27{
			TwitterRaw27: To_Identity_Raw27(param),
		}
	case 29:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw28{
			TwitterRaw28: To_Identity_Raw28(param),
		}
	case 30:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw29{
			TwitterRaw29: To_Identity_Raw29(param),
		}
	case 31:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw30{
			TwitterRaw30: To_Identity_Raw30(param),
		}
	case 32:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw31{
			TwitterRaw31: To_Identity_Raw31(param),
		}
	case 33:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterRaw32{
			TwitterRaw32: To_Identity_Raw32(param),
		}
	case 34:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterBlakeTwo256{
			TwitterBlakeTwo256: To_Identity_BlakeTwo256(param),
		}
	case 35:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterSha256{
			TwitterSha256: To_Identity_Sha256(param),
		}
	case 36:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterKeccak256{
			TwitterKeccak256: To_Identity_Keccak256(param),
		}
	case 37:
		return &pbgear.Identity_PalletIdentityTypesIdentityInfo_1400_TwitterShaThree256{
			TwitterShaThree256: To_Identity_ShaThree256(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ImOnline_PalletImOnlineHeartbeat_100(in any) *pbgear.ImOnline_PalletImOnlineHeartbeat_100 {
	out := &pbgear.ImOnline_PalletImOnlineHeartbeat_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BlockNumber
	out.BlockNumber = To_uint32(v.ValueAt(0))
	// field NetworkState To_SpCoreOffchainOpaqueNetworkState(w)
	out.NetworkState = To_SpCoreOffchainOpaqueNetworkState(v.ValueAt(1))
	// primitive field SessionIndex
	out.SessionIndex = To_uint32(v.ValueAt(2))
	// primitive field AuthorityIndex
	out.AuthorityIndex = To_uint32(v.ValueAt(3))
	// primitive field ValidatorsLen
	out.ValidatorsLen = To_uint32(v.ValueAt(4))

	return out //from message
}

func To_ImOnline_PalletImOnlineHeartbeat_310(in any) *pbgear.ImOnline_PalletImOnlineHeartbeat_310 {
	out := &pbgear.ImOnline_PalletImOnlineHeartbeat_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BlockNumber
	out.BlockNumber = To_uint32(v.ValueAt(0))
	// field NetworkState To_SpCoreOffchainOpaqueNetworkState(w)
	out.NetworkState = To_SpCoreOffchainOpaqueNetworkState(v.ValueAt(1))
	// primitive field SessionIndex
	out.SessionIndex = To_uint32(v.ValueAt(2))
	// primitive field AuthorityIndex
	out.AuthorityIndex = To_uint32(v.ValueAt(3))
	// primitive field ValidatorsLen
	out.ValidatorsLen = To_uint32(v.ValueAt(4))

	return out //from message
}

func To_ImOnline_PalletImOnlineHeartbeat_1030(in any) *pbgear.ImOnline_PalletImOnlineHeartbeat_1030 {
	out := &pbgear.ImOnline_PalletImOnlineHeartbeat_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BlockNumber
	out.BlockNumber = To_uint32(v.ValueAt(0))
	// field NetworkState To_SpCoreOffchainOpaqueNetworkState(w)
	out.NetworkState = To_SpCoreOffchainOpaqueNetworkState(v.ValueAt(1))
	// primitive field SessionIndex
	out.SessionIndex = To_uint32(v.ValueAt(2))
	// primitive field AuthorityIndex
	out.AuthorityIndex = To_uint32(v.ValueAt(3))
	// primitive field ValidatorsLen
	out.ValidatorsLen = To_uint32(v.ValueAt(4))

	return out //from message
}

func To_ImOnline_PalletImOnlineHeartbeat_1040(in any) *pbgear.ImOnline_PalletImOnlineHeartbeat_1040 {
	out := &pbgear.ImOnline_PalletImOnlineHeartbeat_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BlockNumber
	out.BlockNumber = To_uint32(v.ValueAt(0))
	// primitive field SessionIndex
	out.SessionIndex = To_uint32(v.ValueAt(1))
	// primitive field AuthorityIndex
	out.AuthorityIndex = To_uint32(v.ValueAt(2))
	// primitive field ValidatorsLen
	out.ValidatorsLen = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_ImOnline_PalletImOnlineHeartbeat_1400(in any) *pbgear.ImOnline_PalletImOnlineHeartbeat_1400 {
	out := &pbgear.ImOnline_PalletImOnlineHeartbeat_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BlockNumber
	out.BlockNumber = To_uint32(v.ValueAt(0))
	// primitive field SessionIndex
	out.SessionIndex = To_uint32(v.ValueAt(1))
	// primitive field AuthorityIndex
	out.AuthorityIndex = To_uint32(v.ValueAt(2))
	// primitive field ValidatorsLen
	out.ValidatorsLen = To_uint32(v.ValueAt(3))

	return out //from message
}

func To_ImOnline_PalletImOnlineSr25519AppSr25519Public_100(in any) *pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Public_100 {
	out := &pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Public_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_ImOnline_PalletImOnlineSr25519AppSr25519Public_1030(in any) *pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Public_1030 {
	out := &pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Public_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_ImOnline_PalletImOnlineSr25519AppSr25519Signature_100(in any) *pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_100 {
	out := &pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Signature(w)
	out.Value0 = To_SpCoreSr25519Signature(v.ValueAt(0))

	return out //from message
}

func To_ImOnline_PalletImOnlineSr25519AppSr25519Signature_310(in any) *pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_310 {
	out := &pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Signature(w)
	out.Value0 = To_SpCoreSr25519Signature(v.ValueAt(0))

	return out //from message
}

func To_ImOnline_PalletImOnlineSr25519AppSr25519Signature_1030(in any) *pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_1030 {
	out := &pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Signature(w)
	out.Value0 = To_SpCoreSr25519Signature(v.ValueAt(0))

	return out //from message
}

func To_ImOnline_PalletImOnlineSr25519AppSr25519Signature_1040(in any) *pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_1040 {
	out := &pbgear.ImOnline_PalletImOnlineSr25519AppSr25519Signature_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Signature(w)
	out.Value0 = To_SpCoreSr25519Signature(v.ValueAt(0))

	return out //from message
}

func To_Multisig_PalletMultisigTimepoint_210(in any) *pbgear.Multisig_PalletMultisigTimepoint_210 {
	out := &pbgear.Multisig_PalletMultisigTimepoint_210{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Height
	out.Height = To_uint32(v.ValueAt(0))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Multisig_PalletMultisigTimepoint_310(in any) *pbgear.Multisig_PalletMultisigTimepoint_310 {
	out := &pbgear.Multisig_PalletMultisigTimepoint_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Height
	out.Height = To_uint32(v.ValueAt(0))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Multisig_PalletMultisigTimepoint_1030(in any) *pbgear.Multisig_PalletMultisigTimepoint_1030 {
	out := &pbgear.Multisig_PalletMultisigTimepoint_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Height
	out.Height = To_uint32(v.ValueAt(0))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Multisig_PalletMultisigTimepoint_1040(in any) *pbgear.Multisig_PalletMultisigTimepoint_1040 {
	out := &pbgear.Multisig_PalletMultisigTimepoint_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Height
	out.Height = To_uint32(v.ValueAt(0))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Multisig_PalletMultisigTimepoint_1400(in any) *pbgear.Multisig_PalletMultisigTimepoint_1400 {
	out := &pbgear.Multisig_PalletMultisigTimepoint_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Height
	out.Height = To_uint32(v.ValueAt(0))
	// primitive field Index
	out.Index = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_Blocked_1030(in any) *pbgear.NominationPools_Blocked_1030 {
	out := &pbgear.NominationPools_Blocked_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_Destroying_1030(in any) *pbgear.NominationPools_Destroying_1030 {
	out := &pbgear.NominationPools_Destroying_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_Open_1030(in any) *pbgear.NominationPools_Open_1030 {
	out := &pbgear.NominationPools_Open_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_NominationPools_NewState_1030(in any) *pbgear.NominationPools_NewState_1030 {
	out := &pbgear.NominationPools_NewState_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewState
	v0 := To_OneOf_NominationPools_NewState_1030_new_state(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewState").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewState_1030_new_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewState_1030_NewStateOpen{
			NewStateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_NewState_1030_NewStateBlocked{
			NewStateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_NewState_1030_NewStateDestroying{
			NewStateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewState_1040(in any) *pbgear.NominationPools_NewState_1040 {
	out := &pbgear.NominationPools_NewState_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewState
	v0 := To_OneOf_NominationPools_NewState_1040_new_state(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewState").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewState_1040_new_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewState_1040_NewStateOpen{
			NewStateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_NewState_1040_NewStateBlocked{
			NewStateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_NewState_1040_NewStateDestroying{
			NewStateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_NewState_1400(in any) *pbgear.NominationPools_NewState_1400 {
	out := &pbgear.NominationPools_NewState_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field NewState
	v0 := To_OneOf_NominationPools_NewState_1400_new_state(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("NewState").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_NominationPools_NewState_1400_new_state(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.NominationPools_NewState_1400_NewStateOpen{
			NewStateOpen: To_NominationPools_Open(param),
		}
	case 1:
		return &pbgear.NominationPools_NewState_1400_NewStateBlocked{
			NewStateBlocked: To_NominationPools_Blocked(param),
		}
	case 2:
		return &pbgear.NominationPools_NewState_1400_NewStateDestroying{
			NewStateDestroying: To_NominationPools_Destroying(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_NominationPools_PalletNominationPoolsCommissionChangeRate_310(in any) *pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_310 {
	out := &pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_310{}
	v := in.(registry.Valuable)
	_ = v

	// field MaxIncrease To_SpArithmeticPerThingsPerbill(w)
	out.MaxIncrease = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// primitive field MinDelay
	out.MinDelay = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_PalletNominationPoolsCommissionChangeRate_1030(in any) *pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_1030 {
	out := &pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field MaxIncrease To_SpArithmeticPerThingsPerbill(w)
	out.MaxIncrease = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// primitive field MinDelay
	out.MinDelay = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_PalletNominationPoolsCommissionChangeRate_1040(in any) *pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_1040 {
	out := &pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field MaxIncrease To_SpArithmeticPerThingsPerbill(w)
	out.MaxIncrease = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// primitive field MinDelay
	out.MinDelay = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_NominationPools_PalletNominationPoolsCommissionChangeRate_1400(in any) *pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_1400 {
	out := &pbgear.NominationPools_PalletNominationPoolsCommissionChangeRate_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field MaxIncrease To_SpArithmeticPerThingsPerbill(w)
	out.MaxIncrease = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// primitive field MinDelay
	out.MinDelay = To_uint32(v.ValueAt(1))

	return out //from message
}

func To_Origin_1030(in any) *pbgear.Origin_1030 {
	out := &pbgear.Origin_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Origin
	v0 := To_OneOf_Origin_1030_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Origin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Origin_1030_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Origin_1030_OriginNode{
			OriginNode: To_Node(param),
		}
	case 1:
		return &pbgear.Origin_1030_OriginReservation{
			OriginReservation: To_Reservation(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Origin_1040(in any) *pbgear.Origin_1040 {
	out := &pbgear.Origin_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Origin
	v0 := To_OneOf_Origin_1040_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Origin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Origin_1040_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Origin_1040_OriginNode{
			OriginNode: To_Node(param),
		}
	case 1:
		return &pbgear.Origin_1040_OriginReservation{
			OriginReservation: To_Reservation(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Origin_1110(in any) *pbgear.Origin_1110 {
	out := &pbgear.Origin_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Origin
	v0 := To_OneOf_Origin_1110_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Origin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Origin_1110_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Origin_1110_OriginNode{
			OriginNode: To_Node(param),
		}
	case 1:
		return &pbgear.Origin_1110_OriginReservation{
			OriginReservation: To_Reservation(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Origin_1400(in any) *pbgear.Origin_1400 {
	out := &pbgear.Origin_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Origin
	v0 := To_OneOf_Origin_1400_origin(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Origin").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Origin_1400_origin(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Origin_1400_OriginNode{
			OriginNode: To_Node(param),
		}
	case 1:
		return &pbgear.Origin_1400_OriginReservation{
			OriginReservation: To_Reservation(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_PaysFee_1030(in any) *pbgear.PaysFee_1030 {
	out := &pbgear.PaysFee_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field PaysFee
	v0 := To_OneOf_PaysFee_1030_pays_fee(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("PaysFee").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_PaysFee_1030_pays_fee(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.PaysFee_1030_PaysFeeYes{
			PaysFeeYes: To_Yes(param),
		}
	case 1:
		return &pbgear.PaysFee_1030_PaysFeeNo{
			PaysFeeNo: To_No(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_PrimitiveTypesH256_100(in any) *pbgear.PrimitiveTypesH256_100 {
	out := &pbgear.PrimitiveTypesH256_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_PrimitiveTypesH256_1030(in any) *pbgear.PrimitiveTypesH256_1030 {
	out := &pbgear.PrimitiveTypesH256_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_PrimitiveTypesH256_1400(in any) *pbgear.PrimitiveTypesH256_1400 {
	out := &pbgear.PrimitiveTypesH256_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Hashes To_PrimitiveTypesH256(w)
	out.Hashes = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_PrimitiveTypesH256_1410(in any) *pbgear.PrimitiveTypesH256_1410 {
	out := &pbgear.PrimitiveTypesH256_1410{}
	v := in.(registry.Valuable)
	_ = v

	// field Hashes To_PrimitiveTypesH256(w)
	out.Hashes = To_PrimitiveTypesH256(v.ValueAt(0))

	return out //from message
}

func To_Proposal_1030(in any) *pbgear.Proposal_1030 {
	out := &pbgear.Proposal_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_Proposal_1030_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proposal_1030_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proposal_1030_ProposalLegacy{
			ProposalLegacy: To_Legacy(param),
		}
	case 1:
		return &pbgear.Proposal_1030_ProposalInline{
			ProposalInline: To_Inline(param),
		}
	case 2:
		return &pbgear.Proposal_1030_ProposalLookup{
			ProposalLookup: To_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Proposal_1400(in any) *pbgear.Proposal_1400 {
	out := &pbgear.Proposal_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Proposal
	v0 := To_OneOf_Proposal_1400_proposal(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Proposal").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Proposal_1400_proposal(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Proposal_1400_ProposalLegacy{
			ProposalLegacy: To_Legacy(param),
		}
	case 1:
		return &pbgear.Proposal_1400_ProposalInline{
			ProposalInline: To_Inline(param),
		}
	case 2:
		return &pbgear.Proposal_1400_ProposalLookup{
			ProposalLookup: To_Lookup(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyType_1030(in any) *pbgear.ProxyType_1030 {
	out := &pbgear.ProxyType_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_ProxyType_1030_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyType_1030_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyType_1030_ProxyTypeAny{
			ProxyTypeAny: To_Any(param),
		}
	case 1:
		return &pbgear.ProxyType_1030_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_NonTransfer(param),
		}
	case 2:
		return &pbgear.ProxyType_1030_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Governance(param),
		}
	case 3:
		return &pbgear.ProxyType_1030_ProxyTypeStaking{
			ProxyTypeStaking: To_Staking(param),
		}
	case 4:
		return &pbgear.ProxyType_1030_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.ProxyType_1030_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyType_1040(in any) *pbgear.ProxyType_1040 {
	out := &pbgear.ProxyType_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_ProxyType_1040_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyType_1040_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyType_1040_ProxyTypeAny{
			ProxyTypeAny: To_Any(param),
		}
	case 1:
		return &pbgear.ProxyType_1040_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_NonTransfer(param),
		}
	case 2:
		return &pbgear.ProxyType_1040_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Governance(param),
		}
	case 3:
		return &pbgear.ProxyType_1040_ProxyTypeStaking{
			ProxyTypeStaking: To_Staking(param),
		}
	case 4:
		return &pbgear.ProxyType_1040_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.ProxyType_1040_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyType_1400(in any) *pbgear.ProxyType_1400 {
	out := &pbgear.ProxyType_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_ProxyType_1400_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyType_1400_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyType_1400_ProxyTypeAny{
			ProxyTypeAny: To_Any(param),
		}
	case 1:
		return &pbgear.ProxyType_1400_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_NonTransfer(param),
		}
	case 2:
		return &pbgear.ProxyType_1400_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Governance(param),
		}
	case 3:
		return &pbgear.ProxyType_1400_ProxyTypeStaking{
			ProxyTypeStaking: To_Staking(param),
		}
	case 4:
		return &pbgear.ProxyType_1400_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.ProxyType_1400_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_ProxyType_1410(in any) *pbgear.ProxyType_1410 {
	out := &pbgear.ProxyType_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field ProxyType
	v0 := To_OneOf_ProxyType_1410_proxy_type(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("ProxyType").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_ProxyType_1410_proxy_type(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.ProxyType_1410_ProxyTypeAny{
			ProxyTypeAny: To_Any(param),
		}
	case 1:
		return &pbgear.ProxyType_1410_ProxyTypeNonTransfer{
			ProxyTypeNonTransfer: To_NonTransfer(param),
		}
	case 2:
		return &pbgear.ProxyType_1410_ProxyTypeGovernance{
			ProxyTypeGovernance: To_Governance(param),
		}
	case 3:
		return &pbgear.ProxyType_1410_ProxyTypeStaking{
			ProxyTypeStaking: To_Staking(param),
		}
	case 4:
		return &pbgear.ProxyType_1410_ProxyTypeIdentityJudgement{
			ProxyTypeIdentityJudgement: To_IdentityJudgement(param),
		}
	case 5:
		return &pbgear.ProxyType_1410_ProxyTypeCancelProxy{
			ProxyTypeCancelProxy: To_CancelProxy(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_RankedCollective_Aye_1030(in any) *pbgear.RankedCollective_Aye_1030 {
	out := &pbgear.RankedCollective_Aye_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_RankedCollective_Nay_1030(in any) *pbgear.RankedCollective_Nay_1030 {
	out := &pbgear.RankedCollective_Nay_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_RankedCollective_PalletRankedCollectiveTally_1030(in any) *pbgear.RankedCollective_PalletRankedCollectiveTally_1030 {
	out := &pbgear.RankedCollective_PalletRankedCollectiveTally_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BareAyes
	out.BareAyes = To_uint32(v.ValueAt(0))
	// primitive field Ayes
	out.Ayes = To_uint32(v.ValueAt(1))
	// primitive field Nays
	out.Nays = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_RankedCollective_PalletRankedCollectiveTally_1040(in any) *pbgear.RankedCollective_PalletRankedCollectiveTally_1040 {
	out := &pbgear.RankedCollective_PalletRankedCollectiveTally_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BareAyes
	out.BareAyes = To_uint32(v.ValueAt(0))
	// primitive field Ayes
	out.Ayes = To_uint32(v.ValueAt(1))
	// primitive field Nays
	out.Nays = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_RankedCollective_PalletRankedCollectiveTally_1400(in any) *pbgear.RankedCollective_PalletRankedCollectiveTally_1400 {
	out := &pbgear.RankedCollective_PalletRankedCollectiveTally_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field BareAyes
	out.BareAyes = To_uint32(v.ValueAt(0))
	// primitive field Ayes
	out.Ayes = To_uint32(v.ValueAt(1))
	// primitive field Nays
	out.Nays = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_RankedCollective_Vote_1030(in any) *pbgear.RankedCollective_Vote_1030 {
	out := &pbgear.RankedCollective_Vote_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_RankedCollective_Vote_1030_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_RankedCollective_Vote_1030_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.RankedCollective_Vote_1030_VoteAye{
			VoteAye: To_RankedCollective_Aye(param),
		}
	case 1:
		return &pbgear.RankedCollective_Vote_1030_VoteNay{
			VoteNay: To_RankedCollective_Nay(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_RankedCollective_Vote_1040(in any) *pbgear.RankedCollective_Vote_1040 {
	out := &pbgear.RankedCollective_Vote_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_RankedCollective_Vote_1040_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_RankedCollective_Vote_1040_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.RankedCollective_Vote_1040_VoteAye{
			VoteAye: To_RankedCollective_Aye(param),
		}
	case 1:
		return &pbgear.RankedCollective_Vote_1040_VoteNay{
			VoteNay: To_RankedCollective_Nay(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_RankedCollective_Vote_1400(in any) *pbgear.RankedCollective_Vote_1400 {
	out := &pbgear.RankedCollective_Vote_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Vote
	v0 := To_OneOf_RankedCollective_Vote_1400_vote(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Vote").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_RankedCollective_Vote_1400_vote(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.RankedCollective_Vote_1400_VoteAye{
			VoteAye: To_RankedCollective_Aye(param),
		}
	case 1:
		return &pbgear.RankedCollective_Vote_1400_VoteNay{
			VoteNay: To_RankedCollective_Nay(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Reason_1030(in any) *pbgear.Reason_1030 {
	out := &pbgear.Reason_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Reason
	v0 := To_OneOf_Reason_1030_reason(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Reason_1030_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Reason_1030_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Reason_1030_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Reason_1040(in any) *pbgear.Reason_1040 {
	out := &pbgear.Reason_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Reason
	v0 := To_OneOf_Reason_1040_reason(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Reason_1040_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Reason_1040_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Reason_1040_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Reason_1110(in any) *pbgear.Reason_1110 {
	out := &pbgear.Reason_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Reason
	v0 := To_OneOf_Reason_1110_reason(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Reason_1110_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Reason_1110_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Reason_1110_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Reason_1400(in any) *pbgear.Reason_1400 {
	out := &pbgear.Reason_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Reason
	v0 := To_OneOf_Reason_1400_reason(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Reason").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Reason_1400_reason(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Reason_1400_ReasonRuntime{
			ReasonRuntime: To_Runtime(param),
		}
	case 1:
		return &pbgear.Reason_1400_ReasonSystem{
			ReasonSystem: To_System(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Result_1030(in any) *pbgear.Result_1030 {
	out := &pbgear.Result_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Result
	v0 := To_OneOf_Result_1030_result(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Result_1030_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Result_1030_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Result_1030_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Result_1040(in any) *pbgear.Result_1040 {
	out := &pbgear.Result_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Result
	v0 := To_OneOf_Result_1040_result(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Result_1040_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Result_1040_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Result_1040_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Result_1400(in any) *pbgear.Result_1400 {
	out := &pbgear.Result_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Result
	v0 := To_OneOf_Result_1400_result(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Result_1400_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Result_1400_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Result_1400_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Result_1410(in any) *pbgear.Result_1410 {
	out := &pbgear.Result_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Result
	v0 := To_OneOf_Result_1410_result(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Result").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Result_1410_result(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Result_1410_ResultOk{
			ResultOk: To_Ok(param),
		}
	case 1:
		return &pbgear.Result_1410_ResultErr{
			ResultErr: To_Err(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpArithmeticPerThingsPerU16_310(in any) *pbgear.SpArithmeticPerThingsPerU16_310 {
	out := &pbgear.SpArithmeticPerThingsPerU16_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPerU16_1030(in any) *pbgear.SpArithmeticPerThingsPerU16_1030 {
	out := &pbgear.SpArithmeticPerThingsPerU16_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPerU16_1040(in any) *pbgear.SpArithmeticPerThingsPerU16_1040 {
	out := &pbgear.SpArithmeticPerThingsPerU16_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_SpArithmeticPerThingsPerU16(w)
	out.Value = To_SpArithmeticPerThingsPerU16(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPerU16_1400(in any) *pbgear.SpArithmeticPerThingsPerU16_1400 {
	out := &pbgear.SpArithmeticPerThingsPerU16_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPerU16_1410(in any) *pbgear.SpArithmeticPerThingsPerU16_1410 {
	out := &pbgear.SpArithmeticPerThingsPerU16_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPerbill_100(in any) *pbgear.SpArithmeticPerThingsPerbill_100 {
	out := &pbgear.SpArithmeticPerThingsPerbill_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_SpArithmeticPerThingsPerbill(w)
	out.Value = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPerbill_1030(in any) *pbgear.SpArithmeticPerThingsPerbill_1030 {
	out := &pbgear.SpArithmeticPerThingsPerbill_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_SpArithmeticPerThingsPerbill(w)
	out.Value = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPerbill_1400(in any) *pbgear.SpArithmeticPerThingsPerbill_1400 {
	out := &pbgear.SpArithmeticPerThingsPerbill_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value To_SpArithmeticPerThingsPerbill(w)
	out.Value = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPercent_100(in any) *pbgear.SpArithmeticPerThingsPercent_100 {
	out := &pbgear.SpArithmeticPerThingsPercent_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPercent_310(in any) *pbgear.SpArithmeticPerThingsPercent_310 {
	out := &pbgear.SpArithmeticPerThingsPercent_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPercent_1030(in any) *pbgear.SpArithmeticPerThingsPercent_1030 {
	out := &pbgear.SpArithmeticPerThingsPercent_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpArithmeticPerThingsPercent_1040(in any) *pbgear.SpArithmeticPerThingsPercent_1040 {
	out := &pbgear.SpArithmeticPerThingsPercent_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint32(v.ValueAt(0))

	return out //from message
}

func To_SpAuthorityDiscoveryAppPublic_100(in any) *pbgear.SpAuthorityDiscoveryAppPublic_100 {
	out := &pbgear.SpAuthorityDiscoveryAppPublic_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpAuthorityDiscoveryAppPublic_310(in any) *pbgear.SpAuthorityDiscoveryAppPublic_310 {
	out := &pbgear.SpAuthorityDiscoveryAppPublic_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpAuthorityDiscoveryAppPublic_1030(in any) *pbgear.SpAuthorityDiscoveryAppPublic_1030 {
	out := &pbgear.SpAuthorityDiscoveryAppPublic_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpAuthorityDiscoveryAppPublic_1040(in any) *pbgear.SpAuthorityDiscoveryAppPublic_1040 {
	out := &pbgear.SpAuthorityDiscoveryAppPublic_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusBabeAppPublic_100(in any) *pbgear.SpConsensusBabeAppPublic_100 {
	out := &pbgear.SpConsensusBabeAppPublic_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusBabeAppPublic_310(in any) *pbgear.SpConsensusBabeAppPublic_310 {
	out := &pbgear.SpConsensusBabeAppPublic_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusBabeAppPublic_1030(in any) *pbgear.SpConsensusBabeAppPublic_1030 {
	out := &pbgear.SpConsensusBabeAppPublic_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreSr25519Public(w)
	out.Value0 = To_SpCoreSr25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusGrandpaAppPublic_140(in any) *pbgear.SpConsensusGrandpaAppPublic_140 {
	out := &pbgear.SpConsensusGrandpaAppPublic_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Public(w)
	out.Value0 = To_SpCoreEd25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusGrandpaAppPublic_1030(in any) *pbgear.SpConsensusGrandpaAppPublic_1030 {
	out := &pbgear.SpConsensusGrandpaAppPublic_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Public(w)
	out.Value0 = To_SpCoreEd25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusSlotsEquivocationProof_100(in any) *pbgear.SpConsensusSlotsEquivocationProof_100 {
	out := &pbgear.SpConsensusSlotsEquivocationProof_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Offender To_Babe_SpConsensusBabeAppPublic(w)
	out.Offender = To_Babe_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Slot To_SpConsensusSlotsSlot(w)
	out.Slot = To_SpConsensusSlotsSlot(v.ValueAt(1))
	// field FirstHeader To_SpRuntimeGenericHeaderHeader(w)
	out.FirstHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(2))
	// field SecondHeader To_SpRuntimeGenericHeaderHeader(w)
	out.SecondHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(3))

	return out //from message
}

func To_SpConsensusSlotsEquivocationProof_310(in any) *pbgear.SpConsensusSlotsEquivocationProof_310 {
	out := &pbgear.SpConsensusSlotsEquivocationProof_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Offender To_Babe_SpConsensusBabeAppPublic(w)
	out.Offender = To_Babe_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Slot To_SpConsensusSlotsSlot(w)
	out.Slot = To_SpConsensusSlotsSlot(v.ValueAt(1))
	// field FirstHeader To_SpRuntimeGenericHeaderHeader(w)
	out.FirstHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(2))
	// field SecondHeader To_SpRuntimeGenericHeaderHeader(w)
	out.SecondHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(3))

	return out //from message
}

func To_SpConsensusSlotsEquivocationProof_1030(in any) *pbgear.SpConsensusSlotsEquivocationProof_1030 {
	out := &pbgear.SpConsensusSlotsEquivocationProof_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Offender To_Babe_SpConsensusBabeAppPublic(w)
	out.Offender = To_Babe_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Slot To_SpConsensusSlotsSlot(w)
	out.Slot = To_SpConsensusSlotsSlot(v.ValueAt(1))
	// field FirstHeader To_SpRuntimeGenericHeaderHeader(w)
	out.FirstHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(2))
	// field SecondHeader To_SpRuntimeGenericHeaderHeader(w)
	out.SecondHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(3))

	return out //from message
}

func To_SpConsensusSlotsEquivocationProof_1400(in any) *pbgear.SpConsensusSlotsEquivocationProof_1400 {
	out := &pbgear.SpConsensusSlotsEquivocationProof_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Offender To_Babe_SpConsensusBabeAppPublic(w)
	out.Offender = To_Babe_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Slot To_SpConsensusSlotsSlot(w)
	out.Slot = To_SpConsensusSlotsSlot(v.ValueAt(1))
	// field FirstHeader To_SpRuntimeGenericHeaderHeader(w)
	out.FirstHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(2))
	// field SecondHeader To_SpRuntimeGenericHeaderHeader(w)
	out.SecondHeader = To_SpRuntimeGenericHeaderHeader(v.ValueAt(3))

	return out //from message
}

func To_SpConsensusSlotsSlot_100(in any) *pbgear.SpConsensusSlotsSlot_100 {
	out := &pbgear.SpConsensusSlotsSlot_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusSlotsSlot_310(in any) *pbgear.SpConsensusSlotsSlot_310 {
	out := &pbgear.SpConsensusSlotsSlot_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_SpConsensusSlotsSlot_1030(in any) *pbgear.SpConsensusSlotsSlot_1030 {
	out := &pbgear.SpConsensusSlotsSlot_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_uint64(v.ValueAt(0))

	return out //from message
}

func To_SpCoreOpaquePeerId_100(in any) *pbgear.SpCoreOpaquePeerId_100 {
	out := &pbgear.SpCoreOpaquePeerId_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreOpaquePeerId_310(in any) *pbgear.SpCoreOpaquePeerId_310 {
	out := &pbgear.SpCoreOpaquePeerId_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreOpaquePeerId_1030(in any) *pbgear.SpCoreOpaquePeerId_1030 {
	out := &pbgear.SpCoreOpaquePeerId_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreBoundedBoundedVecBoundedVec_100(in any) *pbgear.SpCoreBoundedBoundedVecBoundedVec_100 {
	out := &pbgear.SpCoreBoundedBoundedVecBoundedVec_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreCryptoAccountId32_100(in any) *pbgear.SpCoreCryptoAccountId32_100 {
	out := &pbgear.SpCoreCryptoAccountId32_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreCryptoAccountId32_210(in any) *pbgear.SpCoreCryptoAccountId32_210 {
	out := &pbgear.SpCoreCryptoAccountId32_210{}
	v := in.(registry.Valuable)
	_ = v

	// field OtherSignatories To_SpCoreCryptoAccountId32(w)
	out.OtherSignatories = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_SpCoreCryptoAccountId32_310(in any) *pbgear.SpCoreCryptoAccountId32_310 {
	out := &pbgear.SpCoreCryptoAccountId32_310{}
	v := in.(registry.Valuable)
	_ = v

	// field OtherSignatories To_SpCoreCryptoAccountId32(w)
	out.OtherSignatories = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_SpCoreCryptoAccountId32_1030(in any) *pbgear.SpCoreCryptoAccountId32_1030 {
	out := &pbgear.SpCoreCryptoAccountId32_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Validators To_SpCoreCryptoAccountId32(w)
	out.Validators = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_SpCoreCryptoAccountId32_1040(in any) *pbgear.SpCoreCryptoAccountId32_1040 {
	out := &pbgear.SpCoreCryptoAccountId32_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Invulnerables To_SpCoreCryptoAccountId32(w)
	out.Invulnerables = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_SpCoreEd25519Public_100(in any) *pbgear.SpCoreEd25519Public_100 {
	out := &pbgear.SpCoreEd25519Public_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreEd25519Public_1030(in any) *pbgear.SpCoreEd25519Public_1030 {
	out := &pbgear.SpCoreEd25519Public_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreEd25519Signature_100(in any) *pbgear.SpCoreEd25519Signature_100 {
	out := &pbgear.SpCoreEd25519Signature_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreEd25519Signature_310(in any) *pbgear.SpCoreEd25519Signature_310 {
	out := &pbgear.SpCoreEd25519Signature_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreEd25519Signature_1030(in any) *pbgear.SpCoreEd25519Signature_1030 {
	out := &pbgear.SpCoreEd25519Signature_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreOffchainOpaqueMultiaddr_100(in any) *pbgear.SpCoreOffchainOpaqueMultiaddr_100 {
	out := &pbgear.SpCoreOffchainOpaqueMultiaddr_100{}
	v := in.(registry.Valuable)
	_ = v

	// field ExternalAddresses To_SpCoreOffchainOpaqueMultiaddr(w)
	out.ExternalAddresses = To_SpCoreOffchainOpaqueMultiaddr(v.ValueAt(0))

	return out //from message
}

func To_SpCoreOffchainOpaqueMultiaddr_310(in any) *pbgear.SpCoreOffchainOpaqueMultiaddr_310 {
	out := &pbgear.SpCoreOffchainOpaqueMultiaddr_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreOffchainOpaqueMultiaddr_1030(in any) *pbgear.SpCoreOffchainOpaqueMultiaddr_1030 {
	out := &pbgear.SpCoreOffchainOpaqueMultiaddr_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreOffchainOpaqueNetworkState_100(in any) *pbgear.SpCoreOffchainOpaqueNetworkState_100 {
	out := &pbgear.SpCoreOffchainOpaqueNetworkState_100{}
	v := in.(registry.Valuable)
	_ = v

	// field PeerId To_SpCoreOpaquePeerId(w)
	out.PeerId = To_SpCoreOpaquePeerId(v.ValueAt(0))
	// repeated field ExternalAddresses
	out.ExternalAddresses = To_Repeated_SpCoreOffchainOpaqueNetworkState_100_external_addresses(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpCoreOffchainOpaqueNetworkState_100_external_addresses(in any) []*pbgear.SpCoreOffchainOpaqueMultiaddr {
	items := in.([]interface{})

	var out []*pbgear.SpCoreOffchainOpaqueMultiaddr
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreOffchainOpaqueMultiaddr(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpCoreOffchainOpaqueNetworkState_310(in any) *pbgear.SpCoreOffchainOpaqueNetworkState_310 {
	out := &pbgear.SpCoreOffchainOpaqueNetworkState_310{}
	v := in.(registry.Valuable)
	_ = v

	// field PeerId To_SpCoreOpaquePeerId(w)
	out.PeerId = To_SpCoreOpaquePeerId(v.ValueAt(0))
	// repeated field ExternalAddresses
	out.ExternalAddresses = To_Repeated_SpCoreOffchainOpaqueNetworkState_310_external_addresses(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpCoreOffchainOpaqueNetworkState_310_external_addresses(in any) []*pbgear.SpCoreOffchainOpaqueMultiaddr {
	items := in.([]interface{})

	var out []*pbgear.SpCoreOffchainOpaqueMultiaddr
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreOffchainOpaqueMultiaddr(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpCoreOffchainOpaqueNetworkState_1030(in any) *pbgear.SpCoreOffchainOpaqueNetworkState_1030 {
	out := &pbgear.SpCoreOffchainOpaqueNetworkState_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field PeerId To_SpCoreOpaquePeerId(w)
	out.PeerId = To_SpCoreOpaquePeerId(v.ValueAt(0))
	// repeated field ExternalAddresses
	out.ExternalAddresses = To_Repeated_SpCoreOffchainOpaqueNetworkState_1030_external_addresses(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpCoreOffchainOpaqueNetworkState_1030_external_addresses(in any) []*pbgear.SpCoreOffchainOpaqueMultiaddr {
	items := in.([]interface{})

	var out []*pbgear.SpCoreOffchainOpaqueMultiaddr
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpCoreOffchainOpaqueMultiaddr(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpCoreSr25519Public_100(in any) *pbgear.SpCoreSr25519Public_100 {
	out := &pbgear.SpCoreSr25519Public_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreSr25519Public_1030(in any) *pbgear.SpCoreSr25519Public_1030 {
	out := &pbgear.SpCoreSr25519Public_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreSr25519Signature_100(in any) *pbgear.SpCoreSr25519Signature_100 {
	out := &pbgear.SpCoreSr25519Signature_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreSr25519Signature_310(in any) *pbgear.SpCoreSr25519Signature_310 {
	out := &pbgear.SpCoreSr25519Signature_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreSr25519Signature_1030(in any) *pbgear.SpCoreSr25519Signature_1030 {
	out := &pbgear.SpCoreSr25519Signature_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpCoreSr25519Signature_1040(in any) *pbgear.SpCoreSr25519Signature_1040 {
	out := &pbgear.SpCoreSr25519Signature_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Value0
	out.Value0 = To_bytes(v.ValueAt(0))

	return out //from message
}

func To_SpFinalityGrandpaAppPublic_100(in any) *pbgear.SpFinalityGrandpaAppPublic_100 {
	out := &pbgear.SpFinalityGrandpaAppPublic_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreEd25519Public(w)
	out.Value0 = To_SpCoreEd25519Public(v.ValueAt(0))

	return out //from message
}

func To_SpNposElectionsElectionScore_310(in any) *pbgear.SpNposElectionsElectionScore_310 {
	out := &pbgear.SpNposElectionsElectionScore_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MinimalStake
	out.MinimalStake = To_string(v.ValueAt(0))
	// primitive field SumStake
	out.SumStake = To_string(v.ValueAt(1))
	// primitive field SumStakeSquared
	out.SumStakeSquared = To_string(v.ValueAt(2))

	return out //from message
}

func To_SpNposElectionsElectionScore_1030(in any) *pbgear.SpNposElectionsElectionScore_1030 {
	out := &pbgear.SpNposElectionsElectionScore_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MinimalStake
	out.MinimalStake = To_string(v.ValueAt(0))
	// primitive field SumStake
	out.SumStake = To_string(v.ValueAt(1))
	// primitive field SumStakeSquared
	out.SumStakeSquared = To_string(v.ValueAt(2))

	return out //from message
}

func To_SpNposElectionsElectionScore_1040(in any) *pbgear.SpNposElectionsElectionScore_1040 {
	out := &pbgear.SpNposElectionsElectionScore_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MinimalStake
	out.MinimalStake = To_string(v.ValueAt(0))
	// primitive field SumStake
	out.SumStake = To_string(v.ValueAt(1))
	// primitive field SumStakeSquared
	out.SumStakeSquared = To_string(v.ValueAt(2))

	return out //from message
}

func To_SpNposElectionsElectionScore_1400(in any) *pbgear.SpNposElectionsElectionScore_1400 {
	out := &pbgear.SpNposElectionsElectionScore_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MinimalStake
	out.MinimalStake = To_string(v.ValueAt(0))
	// primitive field SumStake
	out.SumStake = To_string(v.ValueAt(1))
	// primitive field SumStakeSquared
	out.SumStakeSquared = To_string(v.ValueAt(2))

	return out //from message
}

func To_SpNposElectionsElectionScore_1410(in any) *pbgear.SpNposElectionsElectionScore_1410 {
	out := &pbgear.SpNposElectionsElectionScore_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field MinimalStake
	out.MinimalStake = To_string(v.ValueAt(0))
	// primitive field SumStake
	out.SumStake = To_string(v.ValueAt(1))
	// primitive field SumStakeSquared
	out.SumStakeSquared = To_string(v.ValueAt(2))

	return out //from message
}

func To_SpNposElectionsSupport_310(in any) *pbgear.SpNposElectionsSupport_310 {
	out := &pbgear.SpNposElectionsSupport_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Total
	out.Total = To_string(v.ValueAt(0))
	// repeated field Voters
	out.Voters = To_Repeated_SpNposElectionsSupport_310_voters(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpNposElectionsSupport_310_voters(in any) []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpNposElectionsSupport_1030(in any) *pbgear.SpNposElectionsSupport_1030 {
	out := &pbgear.SpNposElectionsSupport_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Total
	out.Total = To_string(v.ValueAt(0))
	// repeated field Voters
	out.Voters = To_Repeated_SpNposElectionsSupport_1030_voters(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpNposElectionsSupport_1030_voters(in any) []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpNposElectionsSupport_1040(in any) *pbgear.SpNposElectionsSupport_1040 {
	out := &pbgear.SpNposElectionsSupport_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Total
	out.Total = To_string(v.ValueAt(0))
	// repeated field Voters
	out.Voters = To_Repeated_SpNposElectionsSupport_1040_voters(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpNposElectionsSupport_1040_voters(in any) []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpNposElectionsSupport_1400(in any) *pbgear.SpNposElectionsSupport_1400 {
	out := &pbgear.SpNposElectionsSupport_1400{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Total
	out.Total = To_string(v.ValueAt(0))
	// repeated field Voters
	out.Voters = To_Repeated_SpNposElectionsSupport_1400_voters(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpNposElectionsSupport_1400_voters(in any) []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpNposElectionsSupport_1410(in any) *pbgear.SpNposElectionsSupport_1410 {
	out := &pbgear.SpNposElectionsSupport_1410{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Total
	out.Total = To_string(v.ValueAt(0))
	// repeated field Voters
	out.Voters = To_Repeated_SpNposElectionsSupport_1410_voters(v.ValueAt(1))

	return out //from message
}

func To_Repeated_SpNposElectionsSupport_1410_voters(in any) []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleSpCoreCryptoAccountId32String(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpRuntimeDispatchErrorWithPostInfo_1030(in any) *pbgear.SpRuntimeDispatchErrorWithPostInfo_1030 {
	out := &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field PostInfo To_FrameSupportDispatchPostDispatchInfo(w)
	out.PostInfo = To_FrameSupportDispatchPostDispatchInfo(v.ValueAt(0))
	// oneOf field Error
	v1 := To_OneOf_SpRuntimeDispatchErrorWithPostInfo_1030_error(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Error").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_SpRuntimeDispatchErrorWithPostInfo_1030_error(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorOther{
			ErrorOther: To_Other(param),
		}
	case 1:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorCannotLookup{
			ErrorCannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorBadOrigin{
			ErrorBadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorModule{
			ErrorModule: To_Module(param),
		}
	case 4:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorConsumerRemaining{
			ErrorConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorNoProviders{
			ErrorNoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorTooManyConsumers{
			ErrorTooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorToken{
			ErrorToken: To_Token(param),
		}
	case 8:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorArithmetic{
			ErrorArithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorTransactional{
			ErrorTransactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorExhausted{
			ErrorExhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorCorruption{
			ErrorCorruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorUnavailable{
			ErrorUnavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1030_ErrorRootNotAllowed{
			ErrorRootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeDispatchErrorWithPostInfo_1040(in any) *pbgear.SpRuntimeDispatchErrorWithPostInfo_1040 {
	out := &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field PostInfo To_FrameSupportDispatchPostDispatchInfo(w)
	out.PostInfo = To_FrameSupportDispatchPostDispatchInfo(v.ValueAt(0))
	// oneOf field Error
	v1 := To_OneOf_SpRuntimeDispatchErrorWithPostInfo_1040_error(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Error").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_SpRuntimeDispatchErrorWithPostInfo_1040_error(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorOther{
			ErrorOther: To_Other(param),
		}
	case 1:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorCannotLookup{
			ErrorCannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorBadOrigin{
			ErrorBadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorModule{
			ErrorModule: To_Module(param),
		}
	case 4:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorConsumerRemaining{
			ErrorConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorNoProviders{
			ErrorNoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorTooManyConsumers{
			ErrorTooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorToken{
			ErrorToken: To_Token(param),
		}
	case 8:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorArithmetic{
			ErrorArithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorTransactional{
			ErrorTransactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorExhausted{
			ErrorExhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorCorruption{
			ErrorCorruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorUnavailable{
			ErrorUnavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1040_ErrorRootNotAllowed{
			ErrorRootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeDispatchErrorWithPostInfo_1400(in any) *pbgear.SpRuntimeDispatchErrorWithPostInfo_1400 {
	out := &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field PostInfo To_FrameSupportDispatchPostDispatchInfo(w)
	out.PostInfo = To_FrameSupportDispatchPostDispatchInfo(v.ValueAt(0))
	// oneOf field Error
	v1 := To_OneOf_SpRuntimeDispatchErrorWithPostInfo_1400_error(v.ValueAt(1))
	reflect.ValueOf(out).Elem().FieldByName("Error").Set(reflect.ValueOf(v1))

	return out //from message
}

func To_OneOf_SpRuntimeDispatchErrorWithPostInfo_1400_error(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorOther{
			ErrorOther: To_Other(param),
		}
	case 1:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorCannotLookup{
			ErrorCannotLookup: To_CannotLookup(param),
		}
	case 2:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorBadOrigin{
			ErrorBadOrigin: To_BadOrigin(param),
		}
	case 3:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorModule{
			ErrorModule: To_Module(param),
		}
	case 4:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorConsumerRemaining{
			ErrorConsumerRemaining: To_ConsumerRemaining(param),
		}
	case 5:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorNoProviders{
			ErrorNoProviders: To_NoProviders(param),
		}
	case 6:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorTooManyConsumers{
			ErrorTooManyConsumers: To_TooManyConsumers(param),
		}
	case 7:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorToken{
			ErrorToken: To_Token(param),
		}
	case 8:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorArithmetic{
			ErrorArithmetic: To_Arithmetic(param),
		}
	case 9:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorTransactional{
			ErrorTransactional: To_Transactional(param),
		}
	case 10:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorExhausted{
			ErrorExhausted: To_Exhausted(param),
		}
	case 11:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorCorruption{
			ErrorCorruption: To_Corruption(param),
		}
	case 12:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorUnavailable{
			ErrorUnavailable: To_Unavailable(param),
		}
	case 13:
		return &pbgear.SpRuntimeDispatchErrorWithPostInfo_1400_ErrorRootNotAllowed{
			ErrorRootNotAllowed: To_RootNotAllowed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeModuleError_1030(in any) *pbgear.SpRuntimeModuleError_1030 {
	out := &pbgear.SpRuntimeModuleError_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Index
	out.Index = To_uint32(v.ValueAt(0))
	// primitive field Error
	out.Error = To_bytes(v.ValueAt(1))

	return out //from message
}

func To_SpRuntimeGenericDigestDigest_100(in any) *pbgear.SpRuntimeGenericDigestDigest_100 {
	out := &pbgear.SpRuntimeGenericDigestDigest_100{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Logs
	out.Logs = To_Repeated_SpRuntimeGenericDigestDigest_100_logs(v.ValueAt(0))

	return out //from message
}

func To_Repeated_SpRuntimeGenericDigestDigest_100_logs(in any) []*pbgear.SpRuntimeGenericDigestDigestItem {
	items := in.([]interface{})

	var out []*pbgear.SpRuntimeGenericDigestDigestItem
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpRuntimeGenericDigestDigestItem(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpRuntimeGenericDigestDigest_1030(in any) *pbgear.SpRuntimeGenericDigestDigest_1030 {
	out := &pbgear.SpRuntimeGenericDigestDigest_1030{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Logs
	out.Logs = To_Repeated_SpRuntimeGenericDigestDigest_1030_logs(v.ValueAt(0))

	return out //from message
}

func To_Repeated_SpRuntimeGenericDigestDigest_1030_logs(in any) []*pbgear.SpRuntimeGenericDigestDigestItem {
	items := in.([]interface{})

	var out []*pbgear.SpRuntimeGenericDigestDigestItem
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_SpRuntimeGenericDigestDigestItem(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpRuntimeGenericDigestDigestItem_100(in any) *pbgear.SpRuntimeGenericDigestDigestItem_100 {
	out := &pbgear.SpRuntimeGenericDigestDigestItem_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Logs
	v0 := To_OneOf_SpRuntimeGenericDigestDigestItem_100_logs(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Logs").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SpRuntimeGenericDigestDigestItem_100_logs(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 6:
		return &pbgear.SpRuntimeGenericDigestDigestItem_100_LogsPreRuntime{
			LogsPreRuntime: To_Babe_PreRuntime(param),
		}
	case 4:
		return &pbgear.SpRuntimeGenericDigestDigestItem_100_LogsConsensus{
			LogsConsensus: To_Babe_Consensus(param),
		}
	case 5:
		return &pbgear.SpRuntimeGenericDigestDigestItem_100_LogsSeal{
			LogsSeal: To_Babe_Seal(param),
		}
	case 0:
		return &pbgear.SpRuntimeGenericDigestDigestItem_100_LogsOther{
			LogsOther: To_Babe_Other(param),
		}
	case 8:
		return &pbgear.SpRuntimeGenericDigestDigestItem_100_LogsRuntimeEnvironmentUpdated{
			LogsRuntimeEnvironmentUpdated: To_Babe_RuntimeEnvironmentUpdated(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeGenericDigestDigestItem_1030(in any) *pbgear.SpRuntimeGenericDigestDigestItem_1030 {
	out := &pbgear.SpRuntimeGenericDigestDigestItem_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Logs
	v0 := To_OneOf_SpRuntimeGenericDigestDigestItem_1030_logs(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Logs").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SpRuntimeGenericDigestDigestItem_1030_logs(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 6:
		return &pbgear.SpRuntimeGenericDigestDigestItem_1030_LogsPreRuntime{
			LogsPreRuntime: To_Babe_PreRuntime(param),
		}
	case 4:
		return &pbgear.SpRuntimeGenericDigestDigestItem_1030_LogsConsensus{
			LogsConsensus: To_Babe_Consensus(param),
		}
	case 5:
		return &pbgear.SpRuntimeGenericDigestDigestItem_1030_LogsSeal{
			LogsSeal: To_Babe_Seal(param),
		}
	case 0:
		return &pbgear.SpRuntimeGenericDigestDigestItem_1030_LogsOther{
			LogsOther: To_Babe_Other(param),
		}
	case 8:
		return &pbgear.SpRuntimeGenericDigestDigestItem_1030_LogsRuntimeEnvironmentUpdated{
			LogsRuntimeEnvironmentUpdated: To_Babe_RuntimeEnvironmentUpdated(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeGenericHeaderHeader_100(in any) *pbgear.SpRuntimeGenericHeaderHeader_100 {
	out := &pbgear.SpRuntimeGenericHeaderHeader_100{}
	v := in.(registry.Valuable)
	_ = v

	// field ParentHash To_PrimitiveTypesH256(w)
	out.ParentHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field Number
	out.Number = To_uint32(v.ValueAt(1))
	// field StateRoot To_PrimitiveTypesH256(w)
	out.StateRoot = To_PrimitiveTypesH256(v.ValueAt(2))
	// field ExtrinsicsRoot To_PrimitiveTypesH256(w)
	out.ExtrinsicsRoot = To_PrimitiveTypesH256(v.ValueAt(3))
	// field Digest To_SpRuntimeGenericDigestDigest(w)
	out.Digest = To_SpRuntimeGenericDigestDigest(v.ValueAt(4))

	return out //from message
}

func To_SpRuntimeGenericHeaderHeader_310(in any) *pbgear.SpRuntimeGenericHeaderHeader_310 {
	out := &pbgear.SpRuntimeGenericHeaderHeader_310{}
	v := in.(registry.Valuable)
	_ = v

	// field ParentHash To_PrimitiveTypesH256(w)
	out.ParentHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field Number
	out.Number = To_uint32(v.ValueAt(1))
	// field StateRoot To_PrimitiveTypesH256(w)
	out.StateRoot = To_PrimitiveTypesH256(v.ValueAt(2))
	// field ExtrinsicsRoot To_PrimitiveTypesH256(w)
	out.ExtrinsicsRoot = To_PrimitiveTypesH256(v.ValueAt(3))
	// field Digest To_SpRuntimeGenericDigestDigest(w)
	out.Digest = To_SpRuntimeGenericDigestDigest(v.ValueAt(4))

	return out //from message
}

func To_SpRuntimeGenericHeaderHeader_1030(in any) *pbgear.SpRuntimeGenericHeaderHeader_1030 {
	out := &pbgear.SpRuntimeGenericHeaderHeader_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field ParentHash To_PrimitiveTypesH256(w)
	out.ParentHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field Number
	out.Number = To_uint32(v.ValueAt(1))
	// field StateRoot To_PrimitiveTypesH256(w)
	out.StateRoot = To_PrimitiveTypesH256(v.ValueAt(2))
	// field ExtrinsicsRoot To_PrimitiveTypesH256(w)
	out.ExtrinsicsRoot = To_PrimitiveTypesH256(v.ValueAt(3))
	// field Digest To_SpRuntimeGenericDigestDigest(w)
	out.Digest = To_SpRuntimeGenericDigestDigest(v.ValueAt(4))

	return out //from message
}

func To_SpRuntimeGenericHeaderHeader_1400(in any) *pbgear.SpRuntimeGenericHeaderHeader_1400 {
	out := &pbgear.SpRuntimeGenericHeaderHeader_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field ParentHash To_PrimitiveTypesH256(w)
	out.ParentHash = To_PrimitiveTypesH256(v.ValueAt(0))
	// primitive field Number
	out.Number = To_uint32(v.ValueAt(1))
	// field StateRoot To_PrimitiveTypesH256(w)
	out.StateRoot = To_PrimitiveTypesH256(v.ValueAt(2))
	// field ExtrinsicsRoot To_PrimitiveTypesH256(w)
	out.ExtrinsicsRoot = To_PrimitiveTypesH256(v.ValueAt(3))
	// field Digest To_SpRuntimeGenericDigestDigest(w)
	out.Digest = To_SpRuntimeGenericDigestDigest(v.ValueAt(4))

	return out //from message
}

func To_SpRuntimeMultiaddressMultiAddress_100(in any) *pbgear.SpRuntimeMultiaddressMultiAddress_100 {
	out := &pbgear.SpRuntimeMultiaddressMultiAddress_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Targets
	v0 := To_OneOf_SpRuntimeMultiaddressMultiAddress_100_targets(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Targets").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SpRuntimeMultiaddressMultiAddress_100_targets(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_100_TargetsId{
			TargetsId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_100_TargetsIndex{
			TargetsIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_100_TargetsRaw{
			TargetsRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_100_TargetsAddress32{
			TargetsAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_100_TargetsAddress20{
			TargetsAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeMultiaddressMultiAddress_310(in any) *pbgear.SpRuntimeMultiaddressMultiAddress_310 {
	out := &pbgear.SpRuntimeMultiaddressMultiAddress_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Targets
	v0 := To_OneOf_SpRuntimeMultiaddressMultiAddress_310_targets(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Targets").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SpRuntimeMultiaddressMultiAddress_310_targets(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_310_TargetsId{
			TargetsId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_310_TargetsIndex{
			TargetsIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_310_TargetsRaw{
			TargetsRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_310_TargetsAddress32{
			TargetsAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_310_TargetsAddress20{
			TargetsAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeMultiaddressMultiAddress_1030(in any) *pbgear.SpRuntimeMultiaddressMultiAddress_1030 {
	out := &pbgear.SpRuntimeMultiaddressMultiAddress_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Targets
	v0 := To_OneOf_SpRuntimeMultiaddressMultiAddress_1030_targets(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Targets").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SpRuntimeMultiaddressMultiAddress_1030_targets(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1030_TargetsId{
			TargetsId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1030_TargetsIndex{
			TargetsIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1030_TargetsRaw{
			TargetsRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1030_TargetsAddress32{
			TargetsAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1030_TargetsAddress20{
			TargetsAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpRuntimeMultiaddressMultiAddress_1040(in any) *pbgear.SpRuntimeMultiaddressMultiAddress_1040 {
	out := &pbgear.SpRuntimeMultiaddressMultiAddress_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Targets
	v0 := To_OneOf_SpRuntimeMultiaddressMultiAddress_1040_targets(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Targets").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_SpRuntimeMultiaddressMultiAddress_1040_targets(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1040_TargetsId{
			TargetsId: To_Staking_Id(param),
		}
	case 1:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1040_TargetsIndex{
			TargetsIndex: To_Staking_Index(param),
		}
	case 2:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1040_TargetsRaw{
			TargetsRaw: To_Staking_Raw(param),
		}
	case 3:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1040_TargetsAddress32{
			TargetsAddress32: To_Staking_Address32(param),
		}
	case 4:
		return &pbgear.SpRuntimeMultiaddressMultiAddress_1040_TargetsAddress20{
			TargetsAddress20: To_Staking_Address20(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_SpSessionMembershipProof_100(in any) *pbgear.SpSessionMembershipProof_100 {
	out := &pbgear.SpSessionMembershipProof_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Session
	out.Session = To_uint32(v.ValueAt(0))
	// repeated field TrieNodes
	out.TrieNodes = To_Repeated_SpSessionMembershipProof_100_trie_nodes(v.ValueAt(1))
	// primitive field ValidatorCount
	out.ValidatorCount = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_SpSessionMembershipProof_100_trie_nodes(in any) []*pbgear.Babe_BabeTrieNodesList {
	items := in.([]interface{})

	var out []*pbgear.Babe_BabeTrieNodesList
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Babe_BabeTrieNodesList(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpSessionMembershipProof_310(in any) *pbgear.SpSessionMembershipProof_310 {
	out := &pbgear.SpSessionMembershipProof_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Session
	out.Session = To_uint32(v.ValueAt(0))
	// repeated field TrieNodes
	out.TrieNodes = To_Repeated_SpSessionMembershipProof_310_trie_nodes(v.ValueAt(1))
	// primitive field ValidatorCount
	out.ValidatorCount = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_SpSessionMembershipProof_310_trie_nodes(in any) []*pbgear.Babe_BabeTrieNodesList {
	items := in.([]interface{})

	var out []*pbgear.Babe_BabeTrieNodesList
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Babe_BabeTrieNodesList(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpSessionMembershipProof_1030(in any) *pbgear.SpSessionMembershipProof_1030 {
	out := &pbgear.SpSessionMembershipProof_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Session
	out.Session = To_uint32(v.ValueAt(0))
	// repeated field TrieNodes
	out.TrieNodes = To_Repeated_SpSessionMembershipProof_1030_trie_nodes(v.ValueAt(1))
	// primitive field ValidatorCount
	out.ValidatorCount = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Repeated_SpSessionMembershipProof_1030_trie_nodes(in any) []*pbgear.Grandpa_GrandpaTrieNodesList {
	items := in.([]interface{})

	var out []*pbgear.Grandpa_GrandpaTrieNodesList
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Grandpa_GrandpaTrieNodesList(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_SpWeightsWeightV2Weight_100(in any) *pbgear.SpWeightsWeightV2Weight_100 {
	out := &pbgear.SpWeightsWeightV2Weight_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RefTime
	out.RefTime = To_uint64(v.ValueAt(0))
	// primitive field ProofSize
	out.ProofSize = To_uint64(v.ValueAt(1))

	return out //from message
}

func To_SpWeightsWeightV2Weight_1030(in any) *pbgear.SpWeightsWeightV2Weight_1030 {
	out := &pbgear.SpWeightsWeightV2Weight_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field RefTime
	out.RefTime = To_uint64(v.ValueAt(0))
	// primitive field ProofSize
	out.ProofSize = To_uint64(v.ValueAt(1))

	return out //from message
}

func To_Staking_Account_1400(in any) *pbgear.Staking_Account_1400 {
	out := &pbgear.Staking_Account_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Value0 To_SpCoreCryptoAccountId32(w)
	out.Value0 = To_SpCoreCryptoAccountId32(v.ValueAt(0))

	return out //from message
}

func To_Staking_Controller_1400(in any) *pbgear.Staking_Controller_1400 {
	out := &pbgear.Staking_Controller_1400{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ForceAlways_1030(in any) *pbgear.Staking_ForceAlways_1030 {
	out := &pbgear.Staking_ForceAlways_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ForceNew_1030(in any) *pbgear.Staking_ForceNew_1030 {
	out := &pbgear.Staking_ForceNew_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_ForceNone_1030(in any) *pbgear.Staking_ForceNone_1030 {
	out := &pbgear.Staking_ForceNone_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_None_1400(in any) *pbgear.Staking_None_1400 {
	out := &pbgear.Staking_None_1400{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_NotForcing_1030(in any) *pbgear.Staking_NotForcing_1030 {
	out := &pbgear.Staking_NotForcing_1030{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_Staked_1400(in any) *pbgear.Staking_Staked_1400 {
	out := &pbgear.Staking_Staked_1400{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_Stash_1400(in any) *pbgear.Staking_Stash_1400 {
	out := &pbgear.Staking_Stash_1400{}
	v := in.(registry.Valuable)
	_ = v

	return out //from message
}

func To_Staking_Dest_1400(in any) *pbgear.Staking_Dest_1400 {
	out := &pbgear.Staking_Dest_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Dest
	v0 := To_OneOf_Staking_Dest_1400_dest(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Dest").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Dest_1400_dest(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Dest_1400_DestStaked{
			DestStaked: To_Staking_Staked(param),
		}
	case 1:
		return &pbgear.Staking_Dest_1400_DestStash{
			DestStash: To_Staking_Stash(param),
		}
	case 2:
		return &pbgear.Staking_Dest_1400_DestController{
			DestController: To_Staking_Controller(param),
		}
	case 3:
		return &pbgear.Staking_Dest_1400_DestAccount{
			DestAccount: To_Staking_Account(param),
		}
	case 4:
		return &pbgear.Staking_Dest_1400_DestNone{
			DestNone: To_Staking_None(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Mode_1030(in any) *pbgear.Staking_Mode_1030 {
	out := &pbgear.Staking_Mode_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Mode
	v0 := To_OneOf_Staking_Mode_1030_mode(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Mode").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Mode_1030_mode(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Mode_1030_ModeNotForcing{
			ModeNotForcing: To_Staking_NotForcing(param),
		}
	case 1:
		return &pbgear.Staking_Mode_1030_ModeForceNew{
			ModeForceNew: To_Staking_ForceNew(param),
		}
	case 2:
		return &pbgear.Staking_Mode_1030_ModeForceNone{
			ModeForceNone: To_Staking_ForceNone(param),
		}
	case 3:
		return &pbgear.Staking_Mode_1030_ModeForceAlways{
			ModeForceAlways: To_Staking_ForceAlways(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_Mode_1400(in any) *pbgear.Staking_Mode_1400 {
	out := &pbgear.Staking_Mode_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Mode
	v0 := To_OneOf_Staking_Mode_1400_mode(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Mode").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Staking_Mode_1400_mode(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Staking_Mode_1400_ModeNotForcing{
			ModeNotForcing: To_Staking_NotForcing(param),
		}
	case 1:
		return &pbgear.Staking_Mode_1400_ModeForceNew{
			ModeForceNew: To_Staking_ForceNew(param),
		}
	case 2:
		return &pbgear.Staking_Mode_1400_ModeForceNone{
			ModeForceNone: To_Staking_ForceNone(param),
		}
	case 3:
		return &pbgear.Staking_Mode_1400_ModeForceAlways{
			ModeForceAlways: To_Staking_ForceAlways(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Staking_PalletStakingExposure_1030(in any) *pbgear.Staking_PalletStakingExposure_1030 {
	out := &pbgear.Staking_PalletStakingExposure_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Total
	out.Total = To_string(v.ValueAt(0))
	// primitive field Own
	out.Own = To_string(v.ValueAt(1))
	// repeated field Others
	out.Others = To_Repeated_Staking_PalletStakingExposure_1030_others(v.ValueAt(2))

	return out //from message
}

func To_Repeated_Staking_PalletStakingExposure_1030_others(in any) []*pbgear.Staking_PalletStakingIndividualExposure {
	items := in.([]interface{})

	var out []*pbgear.Staking_PalletStakingIndividualExposure
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_Staking_PalletStakingIndividualExposure(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_Staking_PalletStakingIndividualExposure_1030(in any) *pbgear.Staking_PalletStakingIndividualExposure_1030 {
	out := &pbgear.Staking_PalletStakingIndividualExposure_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Others To_Staking_PalletStakingIndividualExposure(w)
	out.Others = To_Staking_PalletStakingIndividualExposure(v.ValueAt(0))

	return out //from message
}

func To_Staking_PalletStakingValidatorPrefs_100(in any) *pbgear.Staking_PalletStakingValidatorPrefs_100 {
	out := &pbgear.Staking_PalletStakingValidatorPrefs_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Commission To_SpArithmeticPerThingsPerbill(w)
	out.Commission = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// primitive field Blocked
	out.Blocked = To_bool(v.ValueAt(1))

	return out //from message
}

func To_Staking_PalletStakingValidatorPrefs_1030(in any) *pbgear.Staking_PalletStakingValidatorPrefs_1030 {
	out := &pbgear.Staking_PalletStakingValidatorPrefs_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Commission To_SpArithmeticPerThingsPerbill(w)
	out.Commission = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// primitive field Blocked
	out.Blocked = To_bool(v.ValueAt(1))

	return out //from message
}

func To_Staking_PalletStakingValidatorPrefs_1400(in any) *pbgear.Staking_PalletStakingValidatorPrefs_1400 {
	out := &pbgear.Staking_PalletStakingValidatorPrefs_1400{}
	v := in.(registry.Valuable)
	_ = v

	// field Commission To_SpArithmeticPerThingsPerbill(w)
	out.Commission = To_SpArithmeticPerThingsPerbill(v.ValueAt(0))
	// primitive field Blocked
	out.Blocked = To_bool(v.ValueAt(1))

	return out //from message
}

func To_Value0_100(in any) *pbgear.Value0_100 {
	out := &pbgear.Value0_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_100_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_100_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value0_100_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Value0_100_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Value0_100_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Value0_100_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Value0_100_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Value0_100_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Value0_100_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.Value0_100_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.Value0_100_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.Value0_100_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.Value0_100_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value0_130(in any) *pbgear.Value0_130 {
	out := &pbgear.Value0_130{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_130_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_130_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value0_130_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Value0_130_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Value0_130_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Value0_130_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Value0_130_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Value0_130_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Value0_130_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 7:
		return &pbgear.Value0_130_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 8:
		return &pbgear.Value0_130_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 9:
		return &pbgear.Value0_130_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 10:
		return &pbgear.Value0_130_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 11:
		return &pbgear.Value0_130_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 12:
		return &pbgear.Value0_130_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 13:
		return &pbgear.Value0_130_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 14:
		return &pbgear.Value0_130_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 15:
		return &pbgear.Value0_130_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 16:
		return &pbgear.Value0_130_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 17:
		return &pbgear.Value0_130_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 18:
		return &pbgear.Value0_130_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 19:
		return &pbgear.Value0_130_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value0_210(in any) *pbgear.Value0_210 {
	out := &pbgear.Value0_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_210_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_210_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value0_210_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Value0_210_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Value0_210_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Value0_210_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Value0_210_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Value0_210_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Value0_210_Value0SmallTipper{
			Value0SmallTipper: To_SmallTipper(param),
		}
	case 7:
		return &pbgear.Value0_210_Value0BigTipper{
			Value0BigTipper: To_BigTipper(param),
		}
	case 8:
		return &pbgear.Value0_210_Value0SmallSpender{
			Value0SmallSpender: To_SmallSpender(param),
		}
	case 9:
		return &pbgear.Value0_210_Value0MediumSpender{
			Value0MediumSpender: To_MediumSpender(param),
		}
	case 10:
		return &pbgear.Value0_210_Value0BigSpender{
			Value0BigSpender: To_BigSpender(param),
		}
	case 11:
		return &pbgear.Value0_210_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 12:
		return &pbgear.Value0_210_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 13:
		return &pbgear.Value0_210_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 14:
		return &pbgear.Value0_210_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 15:
		return &pbgear.Value0_210_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 16:
		return &pbgear.Value0_210_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 17:
		return &pbgear.Value0_210_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 18:
		return &pbgear.Value0_210_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 19:
		return &pbgear.Value0_210_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 20:
		return &pbgear.Value0_210_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 21:
		return &pbgear.Value0_210_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 22:
		return &pbgear.Value0_210_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 23:
		return &pbgear.Value0_210_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 24:
		return &pbgear.Value0_210_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value0_310(in any) *pbgear.Value0_310 {
	out := &pbgear.Value0_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_310_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_310_value0(in any) any {
	return nil
}
func To_Value0_1030(in any) *pbgear.Value0_1030 {
	out := &pbgear.Value0_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_1030_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_1030_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value0_1030_Value0ProgramGotInitialized{
			Value0ProgramGotInitialized: To_ProgramGotInitialized(param),
		}
	case 1:
		return &pbgear.Value0_1030_Value0TimeoutHasCome{
			Value0TimeoutHasCome: To_TimeoutHasCome(param),
		}
	case 2:
		return &pbgear.Value0_1030_Value0OutOfRent{
			Value0OutOfRent: To_OutOfRent(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value0_1040(in any) *pbgear.Value0_1040 {
	out := &pbgear.Value0_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_1040_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_1040_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value0_1040_Value0StakingAdmin{
			Value0StakingAdmin: To_StakingAdmin(param),
		}
	case 1:
		return &pbgear.Value0_1040_Value0Treasurer{
			Value0Treasurer: To_Treasurer(param),
		}
	case 2:
		return &pbgear.Value0_1040_Value0FellowshipAdmin{
			Value0FellowshipAdmin: To_FellowshipAdmin(param),
		}
	case 3:
		return &pbgear.Value0_1040_Value0GeneralAdmin{
			Value0GeneralAdmin: To_GeneralAdmin(param),
		}
	case 4:
		return &pbgear.Value0_1040_Value0ReferendumCanceller{
			Value0ReferendumCanceller: To_ReferendumCanceller(param),
		}
	case 5:
		return &pbgear.Value0_1040_Value0ReferendumKiller{
			Value0ReferendumKiller: To_ReferendumKiller(param),
		}
	case 6:
		return &pbgear.Value0_1040_Value0SmallTipper{
			Value0SmallTipper: To_SmallTipper(param),
		}
	case 7:
		return &pbgear.Value0_1040_Value0BigTipper{
			Value0BigTipper: To_BigTipper(param),
		}
	case 8:
		return &pbgear.Value0_1040_Value0SmallSpender{
			Value0SmallSpender: To_SmallSpender(param),
		}
	case 9:
		return &pbgear.Value0_1040_Value0MediumSpender{
			Value0MediumSpender: To_MediumSpender(param),
		}
	case 10:
		return &pbgear.Value0_1040_Value0BigSpender{
			Value0BigSpender: To_BigSpender(param),
		}
	case 11:
		return &pbgear.Value0_1040_Value0WhitelistedCaller{
			Value0WhitelistedCaller: To_WhitelistedCaller(param),
		}
	case 12:
		return &pbgear.Value0_1040_Value0FellowshipInitiates{
			Value0FellowshipInitiates: To_FellowshipInitiates(param),
		}
	case 13:
		return &pbgear.Value0_1040_Value0Fellows{
			Value0Fellows: To_Fellows(param),
		}
	case 14:
		return &pbgear.Value0_1040_Value0FellowshipExperts{
			Value0FellowshipExperts: To_FellowshipExperts(param),
		}
	case 15:
		return &pbgear.Value0_1040_Value0FellowshipMasters{
			Value0FellowshipMasters: To_FellowshipMasters(param),
		}
	case 16:
		return &pbgear.Value0_1040_Value0Fellowship1Dan{
			Value0Fellowship1Dan: To_Fellowship1Dan(param),
		}
	case 17:
		return &pbgear.Value0_1040_Value0Fellowship2Dan{
			Value0Fellowship2Dan: To_Fellowship2Dan(param),
		}
	case 18:
		return &pbgear.Value0_1040_Value0Fellowship3Dan{
			Value0Fellowship3Dan: To_Fellowship3Dan(param),
		}
	case 19:
		return &pbgear.Value0_1040_Value0Fellowship4Dan{
			Value0Fellowship4Dan: To_Fellowship4Dan(param),
		}
	case 20:
		return &pbgear.Value0_1040_Value0Fellowship5Dan{
			Value0Fellowship5Dan: To_Fellowship5Dan(param),
		}
	case 21:
		return &pbgear.Value0_1040_Value0Fellowship6Dan{
			Value0Fellowship6Dan: To_Fellowship6Dan(param),
		}
	case 22:
		return &pbgear.Value0_1040_Value0Fellowship7Dan{
			Value0Fellowship7Dan: To_Fellowship7Dan(param),
		}
	case 23:
		return &pbgear.Value0_1040_Value0Fellowship8Dan{
			Value0Fellowship8Dan: To_Fellowship8Dan(param),
		}
	case 24:
		return &pbgear.Value0_1040_Value0Fellowship9Dan{
			Value0Fellowship9Dan: To_Fellowship9Dan(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value0_1110(in any) *pbgear.Value0_1110 {
	out := &pbgear.Value0_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_1110_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_1110_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value0_1110_Value0MessageReplied{
			Value0MessageReplied: To_MessageReplied(param),
		}
	case 1:
		return &pbgear.Value0_1110_Value0MessageClaimed{
			Value0MessageClaimed: To_MessageClaimed(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value0_1400(in any) *pbgear.Value0_1400 {
	out := &pbgear.Value0_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_1400_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_1400_value0(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value0_1400_Value0Execution{
			Value0Execution: To_Execution(param),
		}
	case 1:
		return &pbgear.Value0_1400_Value0FailedToCreateProgram{
			Value0FailedToCreateProgram: To_FailedToCreateProgram(param),
		}
	case 2:
		return &pbgear.Value0_1400_Value0InactiveActor{
			Value0InactiveActor: To_InactiveActor(param),
		}
	case 3:
		return &pbgear.Value0_1400_Value0RemovedFromWaitlist{
			Value0RemovedFromWaitlist: To_RemovedFromWaitlist(param),
		}
	case 4:
		return &pbgear.Value0_1400_Value0ReinstrumentationFailure{
			Value0ReinstrumentationFailure: To_ReinstrumentationFailure(param),
		}
	case 255:
		return &pbgear.Value0_1400_Value0Unsupported{
			Value0Unsupported: To_Unsupported(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value0_1410(in any) *pbgear.Value0_1410 {
	out := &pbgear.Value0_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value0
	v0 := To_OneOf_Value0_1410_value0(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value0").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value0_1410_value0(in any) any {
	return nil
}
func To_Value1_1030(in any) *pbgear.Value1_1030 {
	out := &pbgear.Value1_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Value1_1030_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value1_1030_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value1_1030_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.Value1_1030_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.Value1_1030_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value1_1040(in any) *pbgear.Value1_1040 {
	out := &pbgear.Value1_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Value1_1040_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value1_1040_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value1_1040_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.Value1_1040_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.Value1_1040_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value1_1110(in any) *pbgear.Value1_1110 {
	out := &pbgear.Value1_1110{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Value1_1110_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value1_1110_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value1_1110_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.Value1_1110_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.Value1_1110_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_Value1_1400(in any) *pbgear.Value1_1400 {
	out := &pbgear.Value1_1400{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Value1
	v0 := To_OneOf_Value1_1400_value1(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Value1").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_Value1_1400_value1(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.Value1_1400_Value1Success{
			Value1Success: To_Success(param),
		}
	case 1:
		return &pbgear.Value1_1400_Value1Failed{
			Value1Failed: To_Failed(param),
		}
	case 2:
		return &pbgear.Value1_1400_Value1NotExecuted{
			Value1NotExecuted: To_NotExecuted(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeNposSolution16_310(in any) *pbgear.VaraRuntimeNposSolution16_310 {
	out := &pbgear.VaraRuntimeNposSolution16_310{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Votes1
	out.Votes1 = To_Repeated_VaraRuntimeNposSolution16_310_votes1(v.ValueAt(0))
	// repeated field Votes2
	out.Votes2 = To_Repeated_VaraRuntimeNposSolution16_310_votes2(v.ValueAt(1))
	// repeated field Votes3
	out.Votes3 = To_Repeated_VaraRuntimeNposSolution16_310_votes3(v.ValueAt(2))
	// repeated field Votes4
	out.Votes4 = To_Repeated_VaraRuntimeNposSolution16_310_votes4(v.ValueAt(3))
	// repeated field Votes5
	out.Votes5 = To_Repeated_VaraRuntimeNposSolution16_310_votes5(v.ValueAt(4))
	// repeated field Votes6
	out.Votes6 = To_Repeated_VaraRuntimeNposSolution16_310_votes6(v.ValueAt(5))
	// repeated field Votes7
	out.Votes7 = To_Repeated_VaraRuntimeNposSolution16_310_votes7(v.ValueAt(6))
	// repeated field Votes8
	out.Votes8 = To_Repeated_VaraRuntimeNposSolution16_310_votes8(v.ValueAt(7))
	// repeated field Votes9
	out.Votes9 = To_Repeated_VaraRuntimeNposSolution16_310_votes9(v.ValueAt(8))
	// repeated field Votes10
	out.Votes10 = To_Repeated_VaraRuntimeNposSolution16_310_votes10(v.ValueAt(9))
	// repeated field Votes11
	out.Votes11 = To_Repeated_VaraRuntimeNposSolution16_310_votes11(v.ValueAt(10))
	// repeated field Votes12
	out.Votes12 = To_Repeated_VaraRuntimeNposSolution16_310_votes12(v.ValueAt(11))
	// repeated field Votes13
	out.Votes13 = To_Repeated_VaraRuntimeNposSolution16_310_votes13(v.ValueAt(12))
	// repeated field Votes14
	out.Votes14 = To_Repeated_VaraRuntimeNposSolution16_310_votes14(v.ValueAt(13))
	// repeated field Votes15
	out.Votes15 = To_Repeated_VaraRuntimeNposSolution16_310_votes15(v.ValueAt(14))
	// repeated field Votes16
	out.Votes16 = To_Repeated_VaraRuntimeNposSolution16_310_votes16(v.ValueAt(15))

	return out //from message
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes2(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes3(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes4(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes5(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes6(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes7(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes8(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes9(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes10(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes11(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes12(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes13(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes14(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes15(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_310_votes16(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_VaraRuntimeNposSolution16_1030(in any) *pbgear.VaraRuntimeNposSolution16_1030 {
	out := &pbgear.VaraRuntimeNposSolution16_1030{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Votes1
	out.Votes1 = To_Repeated_VaraRuntimeNposSolution16_1030_votes1(v.ValueAt(0))
	// repeated field Votes2
	out.Votes2 = To_Repeated_VaraRuntimeNposSolution16_1030_votes2(v.ValueAt(1))
	// repeated field Votes3
	out.Votes3 = To_Repeated_VaraRuntimeNposSolution16_1030_votes3(v.ValueAt(2))
	// repeated field Votes4
	out.Votes4 = To_Repeated_VaraRuntimeNposSolution16_1030_votes4(v.ValueAt(3))
	// repeated field Votes5
	out.Votes5 = To_Repeated_VaraRuntimeNposSolution16_1030_votes5(v.ValueAt(4))
	// repeated field Votes6
	out.Votes6 = To_Repeated_VaraRuntimeNposSolution16_1030_votes6(v.ValueAt(5))
	// repeated field Votes7
	out.Votes7 = To_Repeated_VaraRuntimeNposSolution16_1030_votes7(v.ValueAt(6))
	// repeated field Votes8
	out.Votes8 = To_Repeated_VaraRuntimeNposSolution16_1030_votes8(v.ValueAt(7))
	// repeated field Votes9
	out.Votes9 = To_Repeated_VaraRuntimeNposSolution16_1030_votes9(v.ValueAt(8))
	// repeated field Votes10
	out.Votes10 = To_Repeated_VaraRuntimeNposSolution16_1030_votes10(v.ValueAt(9))
	// repeated field Votes11
	out.Votes11 = To_Repeated_VaraRuntimeNposSolution16_1030_votes11(v.ValueAt(10))
	// repeated field Votes12
	out.Votes12 = To_Repeated_VaraRuntimeNposSolution16_1030_votes12(v.ValueAt(11))
	// repeated field Votes13
	out.Votes13 = To_Repeated_VaraRuntimeNposSolution16_1030_votes13(v.ValueAt(12))
	// repeated field Votes14
	out.Votes14 = To_Repeated_VaraRuntimeNposSolution16_1030_votes14(v.ValueAt(13))
	// repeated field Votes15
	out.Votes15 = To_Repeated_VaraRuntimeNposSolution16_1030_votes15(v.ValueAt(14))
	// repeated field Votes16
	out.Votes16 = To_Repeated_VaraRuntimeNposSolution16_1030_votes16(v.ValueAt(15))

	return out //from message
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes2(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes3(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes4(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes5(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes6(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes7(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes8(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes9(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes10(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes11(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes12(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes13(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes14(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes15(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1030_votes16(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_VaraRuntimeNposSolution16_1040(in any) *pbgear.VaraRuntimeNposSolution16_1040 {
	out := &pbgear.VaraRuntimeNposSolution16_1040{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Votes1
	out.Votes1 = To_Repeated_VaraRuntimeNposSolution16_1040_votes1(v.ValueAt(0))
	// repeated field Votes2
	out.Votes2 = To_Repeated_VaraRuntimeNposSolution16_1040_votes2(v.ValueAt(1))
	// repeated field Votes3
	out.Votes3 = To_Repeated_VaraRuntimeNposSolution16_1040_votes3(v.ValueAt(2))
	// repeated field Votes4
	out.Votes4 = To_Repeated_VaraRuntimeNposSolution16_1040_votes4(v.ValueAt(3))
	// repeated field Votes5
	out.Votes5 = To_Repeated_VaraRuntimeNposSolution16_1040_votes5(v.ValueAt(4))
	// repeated field Votes6
	out.Votes6 = To_Repeated_VaraRuntimeNposSolution16_1040_votes6(v.ValueAt(5))
	// repeated field Votes7
	out.Votes7 = To_Repeated_VaraRuntimeNposSolution16_1040_votes7(v.ValueAt(6))
	// repeated field Votes8
	out.Votes8 = To_Repeated_VaraRuntimeNposSolution16_1040_votes8(v.ValueAt(7))
	// repeated field Votes9
	out.Votes9 = To_Repeated_VaraRuntimeNposSolution16_1040_votes9(v.ValueAt(8))
	// repeated field Votes10
	out.Votes10 = To_Repeated_VaraRuntimeNposSolution16_1040_votes10(v.ValueAt(9))
	// repeated field Votes11
	out.Votes11 = To_Repeated_VaraRuntimeNposSolution16_1040_votes11(v.ValueAt(10))
	// repeated field Votes12
	out.Votes12 = To_Repeated_VaraRuntimeNposSolution16_1040_votes12(v.ValueAt(11))
	// repeated field Votes13
	out.Votes13 = To_Repeated_VaraRuntimeNposSolution16_1040_votes13(v.ValueAt(12))
	// repeated field Votes14
	out.Votes14 = To_Repeated_VaraRuntimeNposSolution16_1040_votes14(v.ValueAt(13))
	// repeated field Votes15
	out.Votes15 = To_Repeated_VaraRuntimeNposSolution16_1040_votes15(v.ValueAt(14))
	// repeated field Votes16
	out.Votes16 = To_Repeated_VaraRuntimeNposSolution16_1040_votes16(v.ValueAt(15))

	return out //from message
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes2(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes3(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes4(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes5(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes6(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes7(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes8(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes9(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes10(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes11(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes12(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes13(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes14(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes15(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1040_votes16(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_VaraRuntimeNposSolution16_1400(in any) *pbgear.VaraRuntimeNposSolution16_1400 {
	out := &pbgear.VaraRuntimeNposSolution16_1400{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Votes1
	out.Votes1 = To_Repeated_VaraRuntimeNposSolution16_1400_votes1(v.ValueAt(0))
	// repeated field Votes2
	out.Votes2 = To_Repeated_VaraRuntimeNposSolution16_1400_votes2(v.ValueAt(1))
	// repeated field Votes3
	out.Votes3 = To_Repeated_VaraRuntimeNposSolution16_1400_votes3(v.ValueAt(2))
	// repeated field Votes4
	out.Votes4 = To_Repeated_VaraRuntimeNposSolution16_1400_votes4(v.ValueAt(3))
	// repeated field Votes5
	out.Votes5 = To_Repeated_VaraRuntimeNposSolution16_1400_votes5(v.ValueAt(4))
	// repeated field Votes6
	out.Votes6 = To_Repeated_VaraRuntimeNposSolution16_1400_votes6(v.ValueAt(5))
	// repeated field Votes7
	out.Votes7 = To_Repeated_VaraRuntimeNposSolution16_1400_votes7(v.ValueAt(6))
	// repeated field Votes8
	out.Votes8 = To_Repeated_VaraRuntimeNposSolution16_1400_votes8(v.ValueAt(7))
	// repeated field Votes9
	out.Votes9 = To_Repeated_VaraRuntimeNposSolution16_1400_votes9(v.ValueAt(8))
	// repeated field Votes10
	out.Votes10 = To_Repeated_VaraRuntimeNposSolution16_1400_votes10(v.ValueAt(9))
	// repeated field Votes11
	out.Votes11 = To_Repeated_VaraRuntimeNposSolution16_1400_votes11(v.ValueAt(10))
	// repeated field Votes12
	out.Votes12 = To_Repeated_VaraRuntimeNposSolution16_1400_votes12(v.ValueAt(11))
	// repeated field Votes13
	out.Votes13 = To_Repeated_VaraRuntimeNposSolution16_1400_votes13(v.ValueAt(12))
	// repeated field Votes14
	out.Votes14 = To_Repeated_VaraRuntimeNposSolution16_1400_votes14(v.ValueAt(13))
	// repeated field Votes15
	out.Votes15 = To_Repeated_VaraRuntimeNposSolution16_1400_votes15(v.ValueAt(14))
	// repeated field Votes16
	out.Votes16 = To_Repeated_VaraRuntimeNposSolution16_1400_votes16(v.ValueAt(15))

	return out //from message
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes2(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes3(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes4(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes5(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes6(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes7(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes8(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes9(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes10(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes11(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes12(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes13(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes14(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes15(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1400_votes16(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_VaraRuntimeNposSolution16_1410(in any) *pbgear.VaraRuntimeNposSolution16_1410 {
	out := &pbgear.VaraRuntimeNposSolution16_1410{}
	v := in.(registry.Valuable)
	_ = v

	// repeated field Votes1
	out.Votes1 = To_Repeated_VaraRuntimeNposSolution16_1410_votes1(v.ValueAt(0))
	// repeated field Votes2
	out.Votes2 = To_Repeated_VaraRuntimeNposSolution16_1410_votes2(v.ValueAt(1))
	// repeated field Votes3
	out.Votes3 = To_Repeated_VaraRuntimeNposSolution16_1410_votes3(v.ValueAt(2))
	// repeated field Votes4
	out.Votes4 = To_Repeated_VaraRuntimeNposSolution16_1410_votes4(v.ValueAt(3))
	// repeated field Votes5
	out.Votes5 = To_Repeated_VaraRuntimeNposSolution16_1410_votes5(v.ValueAt(4))
	// repeated field Votes6
	out.Votes6 = To_Repeated_VaraRuntimeNposSolution16_1410_votes6(v.ValueAt(5))
	// repeated field Votes7
	out.Votes7 = To_Repeated_VaraRuntimeNposSolution16_1410_votes7(v.ValueAt(6))
	// repeated field Votes8
	out.Votes8 = To_Repeated_VaraRuntimeNposSolution16_1410_votes8(v.ValueAt(7))
	// repeated field Votes9
	out.Votes9 = To_Repeated_VaraRuntimeNposSolution16_1410_votes9(v.ValueAt(8))
	// repeated field Votes10
	out.Votes10 = To_Repeated_VaraRuntimeNposSolution16_1410_votes10(v.ValueAt(9))
	// repeated field Votes11
	out.Votes11 = To_Repeated_VaraRuntimeNposSolution16_1410_votes11(v.ValueAt(10))
	// repeated field Votes12
	out.Votes12 = To_Repeated_VaraRuntimeNposSolution16_1410_votes12(v.ValueAt(11))
	// repeated field Votes13
	out.Votes13 = To_Repeated_VaraRuntimeNposSolution16_1410_votes13(v.ValueAt(12))
	// repeated field Votes14
	out.Votes14 = To_Repeated_VaraRuntimeNposSolution16_1410_votes14(v.ValueAt(13))
	// repeated field Votes15
	out.Votes15 = To_Repeated_VaraRuntimeNposSolution16_1410_votes15(v.ValueAt(14))
	// repeated field Votes16
	out.Votes16 = To_Repeated_VaraRuntimeNposSolution16_1410_votes16(v.ValueAt(15))

	return out //from message
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes1(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes2(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32TupleUint32SpArithmeticPerThingsPerU16Uint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes3(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes3Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes4(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes4Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes5(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes5Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes6(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes6Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes7(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes7Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes8(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes8Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes9(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes9Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes10(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes10Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes11(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes11Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes12(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes12Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes13(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes13Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes14(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes14Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes15(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes15Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}

func To_Repeated_VaraRuntimeNposSolution16_1410_votes16(in any) []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32 {
	items := in.([]interface{})

	var out []*pbgear.ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32
	for _, item := range items {
		w := item
		if i, ok := w.(registry.Valuable); ok { //ugly ack the will bite later
			w = &Wrap{Value: i}
		}
		o := To_ElectionProviderMultiPhase_TupleUint32ElectionProviderMultiPhaseVotes16Listuint32(w)
		out = append(out, o)
	}
	return nil //funcForRepeatedField
}
func To_VaraRuntimeRuntimeCall_100(in any) *pbgear.VaraRuntimeRuntimeCall_100 {
	out := &pbgear.VaraRuntimeRuntimeCall_100{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_100_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_100_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 99:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsSudo{
			CallsSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.VaraRuntimeRuntimeCall_100_CallsAirdrop{
			CallsAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeRuntimeCall_140(in any) *pbgear.VaraRuntimeRuntimeCall_140 {
	out := &pbgear.VaraRuntimeRuntimeCall_140{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_140_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_140_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsValidatorSet{
			CallsValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsSudo{
			CallsSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 198:
		return &pbgear.VaraRuntimeRuntimeCall_140_CallsAirdrop{
			CallsAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeRuntimeCall_210(in any) *pbgear.VaraRuntimeRuntimeCall_210 {
	out := &pbgear.VaraRuntimeRuntimeCall_210{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_210_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_210_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 98:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsValidatorSet{
			CallsValidatorSet: To_ValidatorSetPallet(param),
		}
	case 99:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsSudo{
			CallsSudo: To_SudoPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsProxy{
			CallsProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsMultisig{
			CallsMultisig: To_MultisigPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsGearVoucher{
			CallsGearVoucher: To_GearVoucherPallet(param),
		}
	case 198:
		return &pbgear.VaraRuntimeRuntimeCall_210_CallsAirdrop{
			CallsAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeRuntimeCall_310(in any) *pbgear.VaraRuntimeRuntimeCall_310 {
	out := &pbgear.VaraRuntimeRuntimeCall_310{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_310_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_310_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsProxy{
			CallsProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsMultisig{
			CallsMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsElectionProviderMultiPhase{
			CallsElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsBounties{
			CallsBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsChildBounties{
			CallsChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsNominationPools{
			CallsNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsGearVoucher{
			CallsGearVoucher: To_GearVoucherPallet(param),
		}
	case 99:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsSudo{
			CallsSudo: To_SudoPallet(param),
		}
	case 198:
		return &pbgear.VaraRuntimeRuntimeCall_310_CallsAirdrop{
			CallsAirdrop: To_AirdropPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeRuntimeCall_1000(in any) *pbgear.VaraRuntimeRuntimeCall_1000 {
	out := &pbgear.VaraRuntimeRuntimeCall_1000{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_1000_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_1000_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsProxy{
			CallsProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsMultisig{
			CallsMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsElectionProviderMultiPhase{
			CallsElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsBounties{
			CallsBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsChildBounties{
			CallsChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsNominationPools{
			CallsNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.VaraRuntimeRuntimeCall_1000_CallsGearVoucher{
			CallsGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeRuntimeCall_1030(in any) *pbgear.VaraRuntimeRuntimeCall_1030 {
	out := &pbgear.VaraRuntimeRuntimeCall_1030{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_1030_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_1030_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsProxy{
			CallsProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsMultisig{
			CallsMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsElectionProviderMultiPhase{
			CallsElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsBounties{
			CallsBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsChildBounties{
			CallsChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsNominationPools{
			CallsNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.VaraRuntimeRuntimeCall_1030_CallsGearVoucher{
			CallsGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeRuntimeCall_1040(in any) *pbgear.VaraRuntimeRuntimeCall_1040 {
	out := &pbgear.VaraRuntimeRuntimeCall_1040{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_1040_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_1040_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsProxy{
			CallsProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsMultisig{
			CallsMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsElectionProviderMultiPhase{
			CallsElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsBounties{
			CallsBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsChildBounties{
			CallsChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsNominationPools{
			CallsNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.VaraRuntimeRuntimeCall_1040_CallsGearVoucher{
			CallsGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeRuntimeCall_1410(in any) *pbgear.VaraRuntimeRuntimeCall_1410 {
	out := &pbgear.VaraRuntimeRuntimeCall_1410{}
	v := in.(registry.Valuable)
	_ = v

	// oneOf field Calls
	v0 := To_OneOf_VaraRuntimeRuntimeCall_1410_calls(v.ValueAt(0))
	reflect.ValueOf(out).Elem().FieldByName("Calls").Set(reflect.ValueOf(v0))

	return out //from message
}

func To_OneOf_VaraRuntimeRuntimeCall_1410_calls(in any) any {
	variantIn := in.(*registry.VariantWTF)
	param := variantIn.Value
	switch variantIn.VariantByte {
	case 0:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsSystem{
			CallsSystem: To_SystemPallet(param),
		}
	case 1:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsTimestamp{
			CallsTimestamp: To_TimestampPallet(param),
		}
	case 3:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsBabe{
			CallsBabe: To_BabePallet(param),
		}
	case 4:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsGrandpa{
			CallsGrandpa: To_GrandpaPallet(param),
		}
	case 5:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsBalances{
			CallsBalances: To_BalancesPallet(param),
		}
	case 10:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsVesting{
			CallsVesting: To_VestingPallet(param),
		}
	case 11:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsBagsList{
			CallsBagsList: To_BagsListPallet(param),
		}
	case 12:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsImOnline{
			CallsImOnline: To_ImOnlinePallet(param),
		}
	case 13:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsStaking{
			CallsStaking: To_StakingPallet(param),
		}
	case 7:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsSession{
			CallsSession: To_SessionPallet(param),
		}
	case 14:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsTreasury{
			CallsTreasury: To_TreasuryPallet(param),
		}
	case 8:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsUtility{
			CallsUtility: To_UtilityPallet(param),
		}
	case 16:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsConvictionVoting{
			CallsConvictionVoting: To_ConvictionVotingPallet(param),
		}
	case 17:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsReferenda{
			CallsReferenda: To_ReferendaPallet(param),
		}
	case 18:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsFellowshipCollective{
			CallsFellowshipCollective: To_FellowshipCollectivePallet(param),
		}
	case 19:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsFellowshipReferenda{
			CallsFellowshipReferenda: To_FellowshipReferendaPallet(param),
		}
	case 21:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsWhitelist{
			CallsWhitelist: To_WhitelistPallet(param),
		}
	case 22:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsScheduler{
			CallsScheduler: To_SchedulerPallet(param),
		}
	case 23:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsPreimage{
			CallsPreimage: To_PreimagePallet(param),
		}
	case 24:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsIdentity{
			CallsIdentity: To_IdentityPallet(param),
		}
	case 25:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsProxy{
			CallsProxy: To_ProxyPallet(param),
		}
	case 26:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsMultisig{
			CallsMultisig: To_MultisigPallet(param),
		}
	case 27:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsElectionProviderMultiPhase{
			CallsElectionProviderMultiPhase: To_ElectionProviderMultiPhasePallet(param),
		}
	case 29:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsBounties{
			CallsBounties: To_BountiesPallet(param),
		}
	case 30:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsChildBounties{
			CallsChildBounties: To_ChildBountiesPallet(param),
		}
	case 31:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsNominationPools{
			CallsNominationPools: To_NominationPoolsPallet(param),
		}
	case 104:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsGear{
			CallsGear: To_GearPallet(param),
		}
	case 106:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsStakingRewards{
			CallsStakingRewards: To_StakingRewardsPallet(param),
		}
	case 107:
		return &pbgear.VaraRuntimeRuntimeCall_1410_CallsGearVoucher{
			CallsGearVoucher: To_GearVoucherPallet(param),
		}
	default:
		panic(fmt.Sprintf("Unknown variant byte: %d", variantIn.VariantByte))
	}
}
func To_VaraRuntimeSessionKeys_100(in any) *pbgear.VaraRuntimeSessionKeys_100 {
	out := &pbgear.VaraRuntimeSessionKeys_100{}
	v := in.(registry.Valuable)
	_ = v

	// field Babe To_SpConsensusBabeAppPublic(w)
	out.Babe = To_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Grandpa To_SpFinalityGrandpaAppPublic(w)
	out.Grandpa = To_SpFinalityGrandpaAppPublic(v.ValueAt(1))
	// field ImOnline To_ImOnline_PalletImOnlineSr25519AppSr25519Public(w)
	out.ImOnline = To_ImOnline_PalletImOnlineSr25519AppSr25519Public(v.ValueAt(2))
	// field AuthorityDiscovery To_SpAuthorityDiscoveryAppPublic(w)
	out.AuthorityDiscovery = To_SpAuthorityDiscoveryAppPublic(v.ValueAt(3))

	return out //from message
}

func To_VaraRuntimeSessionKeys_140(in any) *pbgear.VaraRuntimeSessionKeys_140 {
	out := &pbgear.VaraRuntimeSessionKeys_140{}
	v := in.(registry.Valuable)
	_ = v

	// field Babe To_SpConsensusBabeAppPublic(w)
	out.Babe = To_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Grandpa To_SpConsensusGrandpaAppPublic(w)
	out.Grandpa = To_SpConsensusGrandpaAppPublic(v.ValueAt(1))
	// field ImOnline To_ImOnline_PalletImOnlineSr25519AppSr25519Public(w)
	out.ImOnline = To_ImOnline_PalletImOnlineSr25519AppSr25519Public(v.ValueAt(2))
	// field AuthorityDiscovery To_SpAuthorityDiscoveryAppPublic(w)
	out.AuthorityDiscovery = To_SpAuthorityDiscoveryAppPublic(v.ValueAt(3))

	return out //from message
}

func To_VaraRuntimeSessionKeys_310(in any) *pbgear.VaraRuntimeSessionKeys_310 {
	out := &pbgear.VaraRuntimeSessionKeys_310{}
	v := in.(registry.Valuable)
	_ = v

	// field Babe To_SpConsensusBabeAppPublic(w)
	out.Babe = To_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Grandpa To_SpConsensusGrandpaAppPublic(w)
	out.Grandpa = To_SpConsensusGrandpaAppPublic(v.ValueAt(1))
	// field ImOnline To_ImOnline_PalletImOnlineSr25519AppSr25519Public(w)
	out.ImOnline = To_ImOnline_PalletImOnlineSr25519AppSr25519Public(v.ValueAt(2))
	// field AuthorityDiscovery To_SpAuthorityDiscoveryAppPublic(w)
	out.AuthorityDiscovery = To_SpAuthorityDiscoveryAppPublic(v.ValueAt(3))

	return out //from message
}

func To_VaraRuntimeSessionKeys_1030(in any) *pbgear.VaraRuntimeSessionKeys_1030 {
	out := &pbgear.VaraRuntimeSessionKeys_1030{}
	v := in.(registry.Valuable)
	_ = v

	// field Babe To_SpConsensusBabeAppPublic(w)
	out.Babe = To_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Grandpa To_SpConsensusGrandpaAppPublic(w)
	out.Grandpa = To_SpConsensusGrandpaAppPublic(v.ValueAt(1))
	// field ImOnline To_ImOnline_PalletImOnlineSr25519AppSr25519Public(w)
	out.ImOnline = To_ImOnline_PalletImOnlineSr25519AppSr25519Public(v.ValueAt(2))
	// field AuthorityDiscovery To_SpAuthorityDiscoveryAppPublic(w)
	out.AuthorityDiscovery = To_SpAuthorityDiscoveryAppPublic(v.ValueAt(3))

	return out //from message
}

func To_VaraRuntimeSessionKeys_1040(in any) *pbgear.VaraRuntimeSessionKeys_1040 {
	out := &pbgear.VaraRuntimeSessionKeys_1040{}
	v := in.(registry.Valuable)
	_ = v

	// field Babe To_SpConsensusBabeAppPublic(w)
	out.Babe = To_SpConsensusBabeAppPublic(v.ValueAt(0))
	// field Grandpa To_SpConsensusGrandpaAppPublic(w)
	out.Grandpa = To_SpConsensusGrandpaAppPublic(v.ValueAt(1))
	// field ImOnline To_ImOnline_PalletImOnlineSr25519AppSr25519Public(w)
	out.ImOnline = To_ImOnline_PalletImOnlineSr25519AppSr25519Public(v.ValueAt(2))
	// field AuthorityDiscovery To_SpAuthorityDiscoveryAppPublic(w)
	out.AuthorityDiscovery = To_SpAuthorityDiscoveryAppPublic(v.ValueAt(3))

	return out //from message
}

func To_Vesting_PalletVestingVestingInfoVestingInfo_100(in any) *pbgear.Vesting_PalletVestingVestingInfoVestingInfo_100 {
	out := &pbgear.Vesting_PalletVestingVestingInfoVestingInfo_100{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Locked
	out.Locked = To_string(v.ValueAt(0))
	// primitive field PerBlock
	out.PerBlock = To_string(v.ValueAt(1))
	// primitive field StartingBlock
	out.StartingBlock = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Vesting_PalletVestingVestingInfoVestingInfo_310(in any) *pbgear.Vesting_PalletVestingVestingInfoVestingInfo_310 {
	out := &pbgear.Vesting_PalletVestingVestingInfoVestingInfo_310{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Locked
	out.Locked = To_string(v.ValueAt(0))
	// primitive field PerBlock
	out.PerBlock = To_string(v.ValueAt(1))
	// primitive field StartingBlock
	out.StartingBlock = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Vesting_PalletVestingVestingInfoVestingInfo_1030(in any) *pbgear.Vesting_PalletVestingVestingInfoVestingInfo_1030 {
	out := &pbgear.Vesting_PalletVestingVestingInfoVestingInfo_1030{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Locked
	out.Locked = To_string(v.ValueAt(0))
	// primitive field PerBlock
	out.PerBlock = To_string(v.ValueAt(1))
	// primitive field StartingBlock
	out.StartingBlock = To_uint32(v.ValueAt(2))

	return out //from message
}

func To_Vesting_PalletVestingVestingInfoVestingInfo_1040(in any) *pbgear.Vesting_PalletVestingVestingInfoVestingInfo_1040 {
	out := &pbgear.Vesting_PalletVestingVestingInfoVestingInfo_1040{}
	v := in.(registry.Valuable)
	_ = v

	// primitive field Locked
	out.Locked = To_string(v.ValueAt(0))
	// primitive field PerBlock
	out.PerBlock = To_string(v.ValueAt(1))
	// primitive field StartingBlock
	out.StartingBlock = To_uint32(v.ValueAt(2))

	return out //from message
}

type Wrap struct {
	Value registry.Valuable
}

func (w Wrap) ValueAt(index int) any {
	return w.Value
}

func To_bytes(a any) []byte {
	var items []any
	switch in := a.(type) {
	case registry.DecodedFields:
		fields := []*registry.DecodedField(in)
		items = fields[0].Value.([]any)
	case []any:
		items = in
	default:
		panic(fmt.Sprintf("Unsupported type %T", in))
	}
	var out []byte
	for _, i := range items {
		u := uint8(i.(types.U8))
		out = append(out, byte(u))
	}
	return out
}

func To_string(i any) string {
	switch v := i.(type) {
	case types.UCompact:
		return fmt.Sprintf("%d", v.Int64())
	case types.Text:
		return string(v)
	case types.U128:
		return v.String()
	case types.U256:
		return v.String()
	case types.I128:
		return v.String()
	case types.I256:
		return v.String()
	default:
		panic("Unknown type")
	}
}

func To_uint32(i any) uint32 {
	switch v := i.(type) {
	case types.UCompact:
		return uint32(v.Int64())
	case types.U8:
		return uint32(v)
	case types.U16:
		return uint32(v)
	case types.U32:
		return uint32(v)
	default:
		panic("Unknown type")
	}
}

func To_Optional_uint32(i any) *uint32 {
	o := To_uint32(i)
	return &o
}

func To_uint64(a any) uint64 {
	switch v := a.(type) {
	case types.UCompact:
		return uint64(v.Int64())
	case types.U8:
		return uint64(v)
	case types.U16:
		return uint64(v)
	case types.U32:
		return uint64(v)
	case types.U64:
		return uint64(v)
	case uint8:
		return uint64(v)
	case uint16:
		return uint64(v)
	case uint32:
		return uint64(v)
	case uint64:
		return uint64(v)
	default:
		panic("Unknown type")
	}
}

func To_Optional_uint64(i any) *uint64 {
	o := To_uint64(i)
	return &o
}

func To_Optional_string(a any) *string {
	s := To_string(a)
	return &s
}

func To_bool(b any) bool {
	return b.(bool)
}

func To_Optional_bool(b any) *bool {
	o := To_bool(b)
	return &o
}

func To_Repeated_uint32(a any) []uint32 {
	panic("To_repeated_uint32")
}

var FuncMap map[string]reflect.Value

func init() {
	FuncMap = make(map[string]reflect.Value)
	FuncMap["To_Airdrop_TransferCall_100"] = reflect.ValueOf(To_Airdrop_TransferCall_100_wrap)
	FuncMap["To_Airdrop_TransferVestedCall_210"] = reflect.ValueOf(To_Airdrop_TransferVestedCall_210_wrap)
	FuncMap["To_Babe_PlanConfigChangeCall_100"] = reflect.ValueOf(To_Babe_PlanConfigChangeCall_100_wrap)
	FuncMap["To_Babe_ReportEquivocationCall_100"] = reflect.ValueOf(To_Babe_ReportEquivocationCall_100_wrap)
	FuncMap["To_Babe_ReportEquivocationUnsignedCall_100"] = reflect.ValueOf(To_Babe_ReportEquivocationUnsignedCall_100_wrap)
	FuncMap["To_BagsList_PutInFrontOfCall_100"] = reflect.ValueOf(To_BagsList_PutInFrontOfCall_100_wrap)
	FuncMap["To_BagsList_PutInFrontOfOtherCall_1300"] = reflect.ValueOf(To_BagsList_PutInFrontOfOtherCall_1300_wrap)
	FuncMap["To_BagsList_RebagCall_100"] = reflect.ValueOf(To_BagsList_RebagCall_100_wrap)
	FuncMap["To_Balances_ForceSetBalanceCall_1030"] = reflect.ValueOf(To_Balances_ForceSetBalanceCall_1030_wrap)
	FuncMap["To_Balances_ForceTransferCall_100"] = reflect.ValueOf(To_Balances_ForceTransferCall_100_wrap)
	FuncMap["To_Balances_ForceUnreserveCall_100"] = reflect.ValueOf(To_Balances_ForceUnreserveCall_100_wrap)
	FuncMap["To_Balances_SetBalanceCall_100"] = reflect.ValueOf(To_Balances_SetBalanceCall_100_wrap)
	FuncMap["To_Balances_SetBalanceDeprecatedCall_1030"] = reflect.ValueOf(To_Balances_SetBalanceDeprecatedCall_1030_wrap)
	FuncMap["To_Balances_TransferAllCall_100"] = reflect.ValueOf(To_Balances_TransferAllCall_100_wrap)
	FuncMap["To_Balances_TransferAllowDeathCall_1030"] = reflect.ValueOf(To_Balances_TransferAllowDeathCall_1030_wrap)
	FuncMap["To_Balances_TransferCall_100"] = reflect.ValueOf(To_Balances_TransferCall_100_wrap)
	FuncMap["To_Balances_TransferKeepAliveCall_100"] = reflect.ValueOf(To_Balances_TransferKeepAliveCall_100_wrap)
	FuncMap["To_Balances_UpgradeAccountsCall_1030"] = reflect.ValueOf(To_Balances_UpgradeAccountsCall_1030_wrap)
	FuncMap["To_Bounties_AcceptCuratorCall_310"] = reflect.ValueOf(To_Bounties_AcceptCuratorCall_310_wrap)
	FuncMap["To_Bounties_ApproveBountyCall_310"] = reflect.ValueOf(To_Bounties_ApproveBountyCall_310_wrap)
	FuncMap["To_Bounties_AwardBountyCall_310"] = reflect.ValueOf(To_Bounties_AwardBountyCall_310_wrap)
	FuncMap["To_Bounties_ClaimBountyCall_310"] = reflect.ValueOf(To_Bounties_ClaimBountyCall_310_wrap)
	FuncMap["To_Bounties_CloseBountyCall_310"] = reflect.ValueOf(To_Bounties_CloseBountyCall_310_wrap)
	FuncMap["To_Bounties_ExtendBountyExpiryCall_310"] = reflect.ValueOf(To_Bounties_ExtendBountyExpiryCall_310_wrap)
	FuncMap["To_Bounties_ProposeBountyCall_310"] = reflect.ValueOf(To_Bounties_ProposeBountyCall_310_wrap)
	FuncMap["To_Bounties_ProposeCuratorCall_310"] = reflect.ValueOf(To_Bounties_ProposeCuratorCall_310_wrap)
	FuncMap["To_Bounties_UnassignCuratorCall_310"] = reflect.ValueOf(To_Bounties_UnassignCuratorCall_310_wrap)
	FuncMap["To_ChildBounties_AcceptCuratorCall_310"] = reflect.ValueOf(To_ChildBounties_AcceptCuratorCall_310_wrap)
	FuncMap["To_ChildBounties_AddChildBountyCall_310"] = reflect.ValueOf(To_ChildBounties_AddChildBountyCall_310_wrap)
	FuncMap["To_ChildBounties_AwardChildBountyCall_310"] = reflect.ValueOf(To_ChildBounties_AwardChildBountyCall_310_wrap)
	FuncMap["To_ChildBounties_ClaimChildBountyCall_310"] = reflect.ValueOf(To_ChildBounties_ClaimChildBountyCall_310_wrap)
	FuncMap["To_ChildBounties_CloseChildBountyCall_310"] = reflect.ValueOf(To_ChildBounties_CloseChildBountyCall_310_wrap)
	FuncMap["To_ChildBounties_ProposeCuratorCall_310"] = reflect.ValueOf(To_ChildBounties_ProposeCuratorCall_310_wrap)
	FuncMap["To_ChildBounties_UnassignCuratorCall_310"] = reflect.ValueOf(To_ChildBounties_UnassignCuratorCall_310_wrap)
	FuncMap["To_ConvictionVoting_DelegateCall_100"] = reflect.ValueOf(To_ConvictionVoting_DelegateCall_100_wrap)
	FuncMap["To_ConvictionVoting_RemoveOtherVoteCall_100"] = reflect.ValueOf(To_ConvictionVoting_RemoveOtherVoteCall_100_wrap)
	FuncMap["To_ConvictionVoting_RemoveVoteCall_100"] = reflect.ValueOf(To_ConvictionVoting_RemoveVoteCall_100_wrap)
	FuncMap["To_ConvictionVoting_UndelegateCall_100"] = reflect.ValueOf(To_ConvictionVoting_UndelegateCall_100_wrap)
	FuncMap["To_ConvictionVoting_UnlockCall_100"] = reflect.ValueOf(To_ConvictionVoting_UnlockCall_100_wrap)
	FuncMap["To_ConvictionVoting_VoteCall_100"] = reflect.ValueOf(To_ConvictionVoting_VoteCall_100_wrap)
	FuncMap["To_ElectionProviderMultiPhase_GovernanceFallbackCall_310"] = reflect.ValueOf(To_ElectionProviderMultiPhase_GovernanceFallbackCall_310_wrap)
	FuncMap["To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310"] = reflect.ValueOf(To_ElectionProviderMultiPhase_SetEmergencyElectionResultCall_310_wrap)
	FuncMap["To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310"] = reflect.ValueOf(To_ElectionProviderMultiPhase_SetMinimumUntrustedScoreCall_310_wrap)
	FuncMap["To_ElectionProviderMultiPhase_SubmitCall_310"] = reflect.ValueOf(To_ElectionProviderMultiPhase_SubmitCall_310_wrap)
	FuncMap["To_ElectionProviderMultiPhase_SubmitUnsignedCall_310"] = reflect.ValueOf(To_ElectionProviderMultiPhase_SubmitUnsignedCall_310_wrap)
	FuncMap["To_FellowshipCollective_AddMemberCall_100"] = reflect.ValueOf(To_FellowshipCollective_AddMemberCall_100_wrap)
	FuncMap["To_FellowshipCollective_CleanupPollCall_100"] = reflect.ValueOf(To_FellowshipCollective_CleanupPollCall_100_wrap)
	FuncMap["To_FellowshipCollective_DemoteMemberCall_100"] = reflect.ValueOf(To_FellowshipCollective_DemoteMemberCall_100_wrap)
	FuncMap["To_FellowshipCollective_PromoteMemberCall_100"] = reflect.ValueOf(To_FellowshipCollective_PromoteMemberCall_100_wrap)
	FuncMap["To_FellowshipCollective_RemoveMemberCall_100"] = reflect.ValueOf(To_FellowshipCollective_RemoveMemberCall_100_wrap)
	FuncMap["To_FellowshipCollective_VoteCall_100"] = reflect.ValueOf(To_FellowshipCollective_VoteCall_100_wrap)
	FuncMap["To_FellowshipReferenda_CancelCall_100"] = reflect.ValueOf(To_FellowshipReferenda_CancelCall_100_wrap)
	FuncMap["To_FellowshipReferenda_KillCall_100"] = reflect.ValueOf(To_FellowshipReferenda_KillCall_100_wrap)
	FuncMap["To_FellowshipReferenda_NudgeReferendumCall_100"] = reflect.ValueOf(To_FellowshipReferenda_NudgeReferendumCall_100_wrap)
	FuncMap["To_FellowshipReferenda_OneFewerDecidingCall_100"] = reflect.ValueOf(To_FellowshipReferenda_OneFewerDecidingCall_100_wrap)
	FuncMap["To_FellowshipReferenda_PlaceDecisionDepositCall_100"] = reflect.ValueOf(To_FellowshipReferenda_PlaceDecisionDepositCall_100_wrap)
	FuncMap["To_FellowshipReferenda_RefundDecisionDepositCall_100"] = reflect.ValueOf(To_FellowshipReferenda_RefundDecisionDepositCall_100_wrap)
	FuncMap["To_FellowshipReferenda_RefundSubmissionDepositCall_100"] = reflect.ValueOf(To_FellowshipReferenda_RefundSubmissionDepositCall_100_wrap)
	FuncMap["To_FellowshipReferenda_SetMetadataCall_140"] = reflect.ValueOf(To_FellowshipReferenda_SetMetadataCall_140_wrap)
	FuncMap["To_FellowshipReferenda_SubmitCall_100"] = reflect.ValueOf(To_FellowshipReferenda_SubmitCall_100_wrap)
	FuncMap["To_GearVoucher_CallCall_1010"] = reflect.ValueOf(To_GearVoucher_CallCall_1010_wrap)
	FuncMap["To_GearVoucher_CallCall_1110"] = reflect.ValueOf(To_GearVoucher_CallCall_1110_wrap)
	FuncMap["To_GearVoucher_CallDeprecatedCall_1110"] = reflect.ValueOf(To_GearVoucher_CallDeprecatedCall_1110_wrap)
	FuncMap["To_GearVoucher_DeclineCall_1110"] = reflect.ValueOf(To_GearVoucher_DeclineCall_1110_wrap)
	FuncMap["To_GearVoucher_IssueCall_210"] = reflect.ValueOf(To_GearVoucher_IssueCall_210_wrap)
	FuncMap["To_GearVoucher_IssueCall_1110"] = reflect.ValueOf(To_GearVoucher_IssueCall_1110_wrap)
	FuncMap["To_GearVoucher_RevokeCall_1110"] = reflect.ValueOf(To_GearVoucher_RevokeCall_1110_wrap)
	FuncMap["To_GearVoucher_UpdateCall_1110"] = reflect.ValueOf(To_GearVoucher_UpdateCall_1110_wrap)
	FuncMap["To_Gear_ClaimValueCall_100"] = reflect.ValueOf(To_Gear_ClaimValueCall_100_wrap)
	FuncMap["To_Gear_ClaimValueCall_1420"] = reflect.ValueOf(To_Gear_ClaimValueCall_1420_wrap)
	FuncMap["To_Gear_CreateProgramCall_100"] = reflect.ValueOf(To_Gear_CreateProgramCall_100_wrap)
	FuncMap["To_Gear_CreateProgramCall_1010"] = reflect.ValueOf(To_Gear_CreateProgramCall_1010_wrap)
	FuncMap["To_Gear_CreateProgramCall_1420"] = reflect.ValueOf(To_Gear_CreateProgramCall_1420_wrap)
	FuncMap["To_Gear_PayProgramRentCall_210"] = reflect.ValueOf(To_Gear_PayProgramRentCall_210_wrap)
	FuncMap["To_Gear_ResumeSessionCommitCall_210"] = reflect.ValueOf(To_Gear_ResumeSessionCommitCall_210_wrap)
	FuncMap["To_Gear_ResumeSessionInitCall_210"] = reflect.ValueOf(To_Gear_ResumeSessionInitCall_210_wrap)
	FuncMap["To_Gear_ResumeSessionPushCall_210"] = reflect.ValueOf(To_Gear_ResumeSessionPushCall_210_wrap)
	FuncMap["To_Gear_ResumeSessionPushCall_310"] = reflect.ValueOf(To_Gear_ResumeSessionPushCall_310_wrap)
	FuncMap["To_Gear_RunCall_310"] = reflect.ValueOf(To_Gear_RunCall_310_wrap)
	FuncMap["To_Gear_SendMessageCall_100"] = reflect.ValueOf(To_Gear_SendMessageCall_100_wrap)
	FuncMap["To_Gear_SendMessageCall_310"] = reflect.ValueOf(To_Gear_SendMessageCall_310_wrap)
	FuncMap["To_Gear_SendMessageCall_1010"] = reflect.ValueOf(To_Gear_SendMessageCall_1010_wrap)
	FuncMap["To_Gear_SendMessageCall_1420"] = reflect.ValueOf(To_Gear_SendMessageCall_1420_wrap)
	FuncMap["To_Gear_SendMessageWithVoucherCall_210"] = reflect.ValueOf(To_Gear_SendMessageWithVoucherCall_210_wrap)
	FuncMap["To_Gear_SendReplyCall_100"] = reflect.ValueOf(To_Gear_SendReplyCall_100_wrap)
	FuncMap["To_Gear_SendReplyCall_310"] = reflect.ValueOf(To_Gear_SendReplyCall_310_wrap)
	FuncMap["To_Gear_SendReplyCall_1010"] = reflect.ValueOf(To_Gear_SendReplyCall_1010_wrap)
	FuncMap["To_Gear_SendReplyCall_1420"] = reflect.ValueOf(To_Gear_SendReplyCall_1420_wrap)
	FuncMap["To_Gear_SendReplyWithVoucherCall_210"] = reflect.ValueOf(To_Gear_SendReplyWithVoucherCall_210_wrap)
	FuncMap["To_Gear_SetExecuteInherentCall_100"] = reflect.ValueOf(To_Gear_SetExecuteInherentCall_100_wrap)
	FuncMap["To_Gear_UploadCodeCall_100"] = reflect.ValueOf(To_Gear_UploadCodeCall_100_wrap)
	FuncMap["To_Gear_UploadProgramCall_100"] = reflect.ValueOf(To_Gear_UploadProgramCall_100_wrap)
	FuncMap["To_Gear_UploadProgramCall_1010"] = reflect.ValueOf(To_Gear_UploadProgramCall_1010_wrap)
	FuncMap["To_Grandpa_NoteStalledCall_100"] = reflect.ValueOf(To_Grandpa_NoteStalledCall_100_wrap)
	FuncMap["To_Grandpa_ReportEquivocationCall_100"] = reflect.ValueOf(To_Grandpa_ReportEquivocationCall_100_wrap)
	FuncMap["To_Grandpa_ReportEquivocationCall_140"] = reflect.ValueOf(To_Grandpa_ReportEquivocationCall_140_wrap)
	FuncMap["To_Grandpa_ReportEquivocationUnsignedCall_100"] = reflect.ValueOf(To_Grandpa_ReportEquivocationUnsignedCall_100_wrap)
	FuncMap["To_Grandpa_ReportEquivocationUnsignedCall_140"] = reflect.ValueOf(To_Grandpa_ReportEquivocationUnsignedCall_140_wrap)
	FuncMap["To_Identity_AddRegistrarCall_100"] = reflect.ValueOf(To_Identity_AddRegistrarCall_100_wrap)
	FuncMap["To_Identity_AddSubCall_100"] = reflect.ValueOf(To_Identity_AddSubCall_100_wrap)
	FuncMap["To_Identity_CancelRequestCall_100"] = reflect.ValueOf(To_Identity_CancelRequestCall_100_wrap)
	FuncMap["To_Identity_KillIdentityCall_100"] = reflect.ValueOf(To_Identity_KillIdentityCall_100_wrap)
	FuncMap["To_Identity_ProvideJudgementCall_100"] = reflect.ValueOf(To_Identity_ProvideJudgementCall_100_wrap)
	FuncMap["To_Identity_RemoveSubCall_100"] = reflect.ValueOf(To_Identity_RemoveSubCall_100_wrap)
	FuncMap["To_Identity_RenameSubCall_100"] = reflect.ValueOf(To_Identity_RenameSubCall_100_wrap)
	FuncMap["To_Identity_RequestJudgementCall_100"] = reflect.ValueOf(To_Identity_RequestJudgementCall_100_wrap)
	FuncMap["To_Identity_SetAccountIdCall_100"] = reflect.ValueOf(To_Identity_SetAccountIdCall_100_wrap)
	FuncMap["To_Identity_SetFeeCall_100"] = reflect.ValueOf(To_Identity_SetFeeCall_100_wrap)
	FuncMap["To_Identity_SetFieldsCall_100"] = reflect.ValueOf(To_Identity_SetFieldsCall_100_wrap)
	FuncMap["To_Identity_SetIdentityCall_100"] = reflect.ValueOf(To_Identity_SetIdentityCall_100_wrap)
	FuncMap["To_Identity_SetIdentityCall_1410"] = reflect.ValueOf(To_Identity_SetIdentityCall_1410_wrap)
	FuncMap["To_Identity_SetSubsCall_100"] = reflect.ValueOf(To_Identity_SetSubsCall_100_wrap)
	FuncMap["To_ImOnline_HeartbeatCall_100"] = reflect.ValueOf(To_ImOnline_HeartbeatCall_100_wrap)
	FuncMap["To_Multisig_ApproveAsMultiCall_210"] = reflect.ValueOf(To_Multisig_ApproveAsMultiCall_210_wrap)
	FuncMap["To_Multisig_AsMultiCall_210"] = reflect.ValueOf(To_Multisig_AsMultiCall_210_wrap)
	FuncMap["To_Multisig_AsMultiCall_310"] = reflect.ValueOf(To_Multisig_AsMultiCall_310_wrap)
	FuncMap["To_Multisig_AsMultiCall_1000"] = reflect.ValueOf(To_Multisig_AsMultiCall_1000_wrap)
	FuncMap["To_Multisig_AsMultiThreshold1Call_210"] = reflect.ValueOf(To_Multisig_AsMultiThreshold1Call_210_wrap)
	FuncMap["To_Multisig_AsMultiThreshold1Call_310"] = reflect.ValueOf(To_Multisig_AsMultiThreshold1Call_310_wrap)
	FuncMap["To_Multisig_AsMultiThreshold1Call_1000"] = reflect.ValueOf(To_Multisig_AsMultiThreshold1Call_1000_wrap)
	FuncMap["To_Multisig_CancelAsMultiCall_210"] = reflect.ValueOf(To_Multisig_CancelAsMultiCall_210_wrap)
	FuncMap["To_NominationPools_AdjustPoolDepositCall_1410"] = reflect.ValueOf(To_NominationPools_AdjustPoolDepositCall_1410_wrap)
	FuncMap["To_NominationPools_BondExtraCall_310"] = reflect.ValueOf(To_NominationPools_BondExtraCall_310_wrap)
	FuncMap["To_NominationPools_BondExtraOtherCall_310"] = reflect.ValueOf(To_NominationPools_BondExtraOtherCall_310_wrap)
	FuncMap["To_NominationPools_ChillCall_310"] = reflect.ValueOf(To_NominationPools_ChillCall_310_wrap)
	FuncMap["To_NominationPools_ClaimCommissionCall_310"] = reflect.ValueOf(To_NominationPools_ClaimCommissionCall_310_wrap)
	FuncMap["To_NominationPools_ClaimPayoutOtherCall_310"] = reflect.ValueOf(To_NominationPools_ClaimPayoutOtherCall_310_wrap)
	FuncMap["To_NominationPools_CreateCall_310"] = reflect.ValueOf(To_NominationPools_CreateCall_310_wrap)
	FuncMap["To_NominationPools_CreateWithPoolIdCall_310"] = reflect.ValueOf(To_NominationPools_CreateWithPoolIdCall_310_wrap)
	FuncMap["To_NominationPools_JoinCall_310"] = reflect.ValueOf(To_NominationPools_JoinCall_310_wrap)
	FuncMap["To_NominationPools_NominateCall_310"] = reflect.ValueOf(To_NominationPools_NominateCall_310_wrap)
	FuncMap["To_NominationPools_PoolWithdrawUnbondedCall_310"] = reflect.ValueOf(To_NominationPools_PoolWithdrawUnbondedCall_310_wrap)
	FuncMap["To_NominationPools_SetClaimPermissionCall_310"] = reflect.ValueOf(To_NominationPools_SetClaimPermissionCall_310_wrap)
	FuncMap["To_NominationPools_SetCommissionCall_310"] = reflect.ValueOf(To_NominationPools_SetCommissionCall_310_wrap)
	FuncMap["To_NominationPools_SetCommissionChangeRateCall_310"] = reflect.ValueOf(To_NominationPools_SetCommissionChangeRateCall_310_wrap)
	FuncMap["To_NominationPools_SetCommissionMaxCall_310"] = reflect.ValueOf(To_NominationPools_SetCommissionMaxCall_310_wrap)
	FuncMap["To_NominationPools_SetConfigsCall_310"] = reflect.ValueOf(To_NominationPools_SetConfigsCall_310_wrap)
	FuncMap["To_NominationPools_SetMetadataCall_310"] = reflect.ValueOf(To_NominationPools_SetMetadataCall_310_wrap)
	FuncMap["To_NominationPools_SetStateCall_310"] = reflect.ValueOf(To_NominationPools_SetStateCall_310_wrap)
	FuncMap["To_NominationPools_UnbondCall_310"] = reflect.ValueOf(To_NominationPools_UnbondCall_310_wrap)
	FuncMap["To_NominationPools_UpdateRolesCall_310"] = reflect.ValueOf(To_NominationPools_UpdateRolesCall_310_wrap)
	FuncMap["To_NominationPools_WithdrawUnbondedCall_310"] = reflect.ValueOf(To_NominationPools_WithdrawUnbondedCall_310_wrap)
	FuncMap["To_Preimage_EnsureUpdatedCall_1400"] = reflect.ValueOf(To_Preimage_EnsureUpdatedCall_1400_wrap)
	FuncMap["To_Preimage_NotePreimageCall_100"] = reflect.ValueOf(To_Preimage_NotePreimageCall_100_wrap)
	FuncMap["To_Preimage_RequestPreimageCall_100"] = reflect.ValueOf(To_Preimage_RequestPreimageCall_100_wrap)
	FuncMap["To_Preimage_UnnotePreimageCall_100"] = reflect.ValueOf(To_Preimage_UnnotePreimageCall_100_wrap)
	FuncMap["To_Preimage_UnrequestPreimageCall_100"] = reflect.ValueOf(To_Preimage_UnrequestPreimageCall_100_wrap)
	FuncMap["To_Proxy_AddProxyCall_210"] = reflect.ValueOf(To_Proxy_AddProxyCall_210_wrap)
	FuncMap["To_Proxy_AnnounceCall_210"] = reflect.ValueOf(To_Proxy_AnnounceCall_210_wrap)
	FuncMap["To_Proxy_CreatePureCall_210"] = reflect.ValueOf(To_Proxy_CreatePureCall_210_wrap)
	FuncMap["To_Proxy_KillPureCall_210"] = reflect.ValueOf(To_Proxy_KillPureCall_210_wrap)
	FuncMap["To_Proxy_ProxyAnnouncedCall_210"] = reflect.ValueOf(To_Proxy_ProxyAnnouncedCall_210_wrap)
	FuncMap["To_Proxy_ProxyAnnouncedCall_310"] = reflect.ValueOf(To_Proxy_ProxyAnnouncedCall_310_wrap)
	FuncMap["To_Proxy_ProxyAnnouncedCall_1000"] = reflect.ValueOf(To_Proxy_ProxyAnnouncedCall_1000_wrap)
	FuncMap["To_Proxy_ProxyCall_210"] = reflect.ValueOf(To_Proxy_ProxyCall_210_wrap)
	FuncMap["To_Proxy_ProxyCall_310"] = reflect.ValueOf(To_Proxy_ProxyCall_310_wrap)
	FuncMap["To_Proxy_ProxyCall_1000"] = reflect.ValueOf(To_Proxy_ProxyCall_1000_wrap)
	FuncMap["To_Proxy_RejectAnnouncementCall_210"] = reflect.ValueOf(To_Proxy_RejectAnnouncementCall_210_wrap)
	FuncMap["To_Proxy_RemoveAnnouncementCall_210"] = reflect.ValueOf(To_Proxy_RemoveAnnouncementCall_210_wrap)
	FuncMap["To_Proxy_RemoveProxyCall_210"] = reflect.ValueOf(To_Proxy_RemoveProxyCall_210_wrap)
	FuncMap["To_Referenda_CancelCall_100"] = reflect.ValueOf(To_Referenda_CancelCall_100_wrap)
	FuncMap["To_Referenda_KillCall_100"] = reflect.ValueOf(To_Referenda_KillCall_100_wrap)
	FuncMap["To_Referenda_NudgeReferendumCall_100"] = reflect.ValueOf(To_Referenda_NudgeReferendumCall_100_wrap)
	FuncMap["To_Referenda_OneFewerDecidingCall_100"] = reflect.ValueOf(To_Referenda_OneFewerDecidingCall_100_wrap)
	FuncMap["To_Referenda_PlaceDecisionDepositCall_100"] = reflect.ValueOf(To_Referenda_PlaceDecisionDepositCall_100_wrap)
	FuncMap["To_Referenda_RefundDecisionDepositCall_100"] = reflect.ValueOf(To_Referenda_RefundDecisionDepositCall_100_wrap)
	FuncMap["To_Referenda_RefundSubmissionDepositCall_100"] = reflect.ValueOf(To_Referenda_RefundSubmissionDepositCall_100_wrap)
	FuncMap["To_Referenda_SetMetadataCall_140"] = reflect.ValueOf(To_Referenda_SetMetadataCall_140_wrap)
	FuncMap["To_Referenda_SubmitCall_100"] = reflect.ValueOf(To_Referenda_SubmitCall_100_wrap)
	FuncMap["To_Scheduler_CancelCall_100"] = reflect.ValueOf(To_Scheduler_CancelCall_100_wrap)
	FuncMap["To_Scheduler_CancelNamedCall_100"] = reflect.ValueOf(To_Scheduler_CancelNamedCall_100_wrap)
	FuncMap["To_Scheduler_ScheduleAfterCall_100"] = reflect.ValueOf(To_Scheduler_ScheduleAfterCall_100_wrap)
	FuncMap["To_Scheduler_ScheduleAfterCall_140"] = reflect.ValueOf(To_Scheduler_ScheduleAfterCall_140_wrap)
	FuncMap["To_Scheduler_ScheduleAfterCall_210"] = reflect.ValueOf(To_Scheduler_ScheduleAfterCall_210_wrap)
	FuncMap["To_Scheduler_ScheduleAfterCall_310"] = reflect.ValueOf(To_Scheduler_ScheduleAfterCall_310_wrap)
	FuncMap["To_Scheduler_ScheduleAfterCall_1000"] = reflect.ValueOf(To_Scheduler_ScheduleAfterCall_1000_wrap)
	FuncMap["To_Scheduler_ScheduleCall_100"] = reflect.ValueOf(To_Scheduler_ScheduleCall_100_wrap)
	FuncMap["To_Scheduler_ScheduleCall_140"] = reflect.ValueOf(To_Scheduler_ScheduleCall_140_wrap)
	FuncMap["To_Scheduler_ScheduleCall_210"] = reflect.ValueOf(To_Scheduler_ScheduleCall_210_wrap)
	FuncMap["To_Scheduler_ScheduleCall_310"] = reflect.ValueOf(To_Scheduler_ScheduleCall_310_wrap)
	FuncMap["To_Scheduler_ScheduleCall_1000"] = reflect.ValueOf(To_Scheduler_ScheduleCall_1000_wrap)
	FuncMap["To_Scheduler_ScheduleNamedAfterCall_100"] = reflect.ValueOf(To_Scheduler_ScheduleNamedAfterCall_100_wrap)
	FuncMap["To_Scheduler_ScheduleNamedAfterCall_140"] = reflect.ValueOf(To_Scheduler_ScheduleNamedAfterCall_140_wrap)
	FuncMap["To_Scheduler_ScheduleNamedAfterCall_210"] = reflect.ValueOf(To_Scheduler_ScheduleNamedAfterCall_210_wrap)
	FuncMap["To_Scheduler_ScheduleNamedAfterCall_310"] = reflect.ValueOf(To_Scheduler_ScheduleNamedAfterCall_310_wrap)
	FuncMap["To_Scheduler_ScheduleNamedAfterCall_1000"] = reflect.ValueOf(To_Scheduler_ScheduleNamedAfterCall_1000_wrap)
	FuncMap["To_Scheduler_ScheduleNamedCall_100"] = reflect.ValueOf(To_Scheduler_ScheduleNamedCall_100_wrap)
	FuncMap["To_Scheduler_ScheduleNamedCall_140"] = reflect.ValueOf(To_Scheduler_ScheduleNamedCall_140_wrap)
	FuncMap["To_Scheduler_ScheduleNamedCall_210"] = reflect.ValueOf(To_Scheduler_ScheduleNamedCall_210_wrap)
	FuncMap["To_Scheduler_ScheduleNamedCall_310"] = reflect.ValueOf(To_Scheduler_ScheduleNamedCall_310_wrap)
	FuncMap["To_Scheduler_ScheduleNamedCall_1000"] = reflect.ValueOf(To_Scheduler_ScheduleNamedCall_1000_wrap)
	FuncMap["To_Session_SetKeysCall_100"] = reflect.ValueOf(To_Session_SetKeysCall_100_wrap)
	FuncMap["To_StakingRewards_AlignSupplyCall_1010"] = reflect.ValueOf(To_StakingRewards_AlignSupplyCall_1010_wrap)
	FuncMap["To_StakingRewards_ForceRefillCall_100"] = reflect.ValueOf(To_StakingRewards_ForceRefillCall_100_wrap)
	FuncMap["To_StakingRewards_RefillCall_100"] = reflect.ValueOf(To_StakingRewards_RefillCall_100_wrap)
	FuncMap["To_StakingRewards_WithdrawCall_100"] = reflect.ValueOf(To_StakingRewards_WithdrawCall_100_wrap)
	FuncMap["To_Staking_BondCall_100"] = reflect.ValueOf(To_Staking_BondCall_100_wrap)
	FuncMap["To_Staking_BondCall_1030"] = reflect.ValueOf(To_Staking_BondCall_1030_wrap)
	FuncMap["To_Staking_BondExtraCall_100"] = reflect.ValueOf(To_Staking_BondExtraCall_100_wrap)
	FuncMap["To_Staking_CancelDeferredSlashCall_100"] = reflect.ValueOf(To_Staking_CancelDeferredSlashCall_100_wrap)
	FuncMap["To_Staking_ChillOtherCall_100"] = reflect.ValueOf(To_Staking_ChillOtherCall_100_wrap)
	FuncMap["To_Staking_ForceApplyMinCommissionCall_100"] = reflect.ValueOf(To_Staking_ForceApplyMinCommissionCall_100_wrap)
	FuncMap["To_Staking_ForceUnstakeCall_100"] = reflect.ValueOf(To_Staking_ForceUnstakeCall_100_wrap)
	FuncMap["To_Staking_IncreaseValidatorCountCall_100"] = reflect.ValueOf(To_Staking_IncreaseValidatorCountCall_100_wrap)
	FuncMap["To_Staking_KickCall_100"] = reflect.ValueOf(To_Staking_KickCall_100_wrap)
	FuncMap["To_Staking_NominateCall_100"] = reflect.ValueOf(To_Staking_NominateCall_100_wrap)
	FuncMap["To_Staking_PayoutStakersCall_100"] = reflect.ValueOf(To_Staking_PayoutStakersCall_100_wrap)
	FuncMap["To_Staking_ReapStashCall_100"] = reflect.ValueOf(To_Staking_ReapStashCall_100_wrap)
	FuncMap["To_Staking_RebondCall_100"] = reflect.ValueOf(To_Staking_RebondCall_100_wrap)
	FuncMap["To_Staking_ScaleValidatorCountCall_100"] = reflect.ValueOf(To_Staking_ScaleValidatorCountCall_100_wrap)
	FuncMap["To_Staking_SetControllerCall_100"] = reflect.ValueOf(To_Staking_SetControllerCall_100_wrap)
	FuncMap["To_Staking_SetInvulnerablesCall_100"] = reflect.ValueOf(To_Staking_SetInvulnerablesCall_100_wrap)
	FuncMap["To_Staking_SetMinCommissionCall_100"] = reflect.ValueOf(To_Staking_SetMinCommissionCall_100_wrap)
	FuncMap["To_Staking_SetPayeeCall_100"] = reflect.ValueOf(To_Staking_SetPayeeCall_100_wrap)
	FuncMap["To_Staking_SetStakingConfigsCall_100"] = reflect.ValueOf(To_Staking_SetStakingConfigsCall_100_wrap)
	FuncMap["To_Staking_SetValidatorCountCall_100"] = reflect.ValueOf(To_Staking_SetValidatorCountCall_100_wrap)
	FuncMap["To_Staking_UnbondCall_100"] = reflect.ValueOf(To_Staking_UnbondCall_100_wrap)
	FuncMap["To_Staking_ValidateCall_100"] = reflect.ValueOf(To_Staking_ValidateCall_100_wrap)
	FuncMap["To_Staking_WithdrawUnbondedCall_100"] = reflect.ValueOf(To_Staking_WithdrawUnbondedCall_100_wrap)
	FuncMap["To_Sudo_SetKeyCall_100"] = reflect.ValueOf(To_Sudo_SetKeyCall_100_wrap)
	FuncMap["To_Sudo_SudoAsCall_100"] = reflect.ValueOf(To_Sudo_SudoAsCall_100_wrap)
	FuncMap["To_Sudo_SudoAsCall_140"] = reflect.ValueOf(To_Sudo_SudoAsCall_140_wrap)
	FuncMap["To_Sudo_SudoAsCall_210"] = reflect.ValueOf(To_Sudo_SudoAsCall_210_wrap)
	FuncMap["To_Sudo_SudoAsCall_310"] = reflect.ValueOf(To_Sudo_SudoAsCall_310_wrap)
	FuncMap["To_Sudo_SudoCall_100"] = reflect.ValueOf(To_Sudo_SudoCall_100_wrap)
	FuncMap["To_Sudo_SudoCall_140"] = reflect.ValueOf(To_Sudo_SudoCall_140_wrap)
	FuncMap["To_Sudo_SudoCall_210"] = reflect.ValueOf(To_Sudo_SudoCall_210_wrap)
	FuncMap["To_Sudo_SudoCall_310"] = reflect.ValueOf(To_Sudo_SudoCall_310_wrap)
	FuncMap["To_Sudo_SudoUncheckedWeightCall_100"] = reflect.ValueOf(To_Sudo_SudoUncheckedWeightCall_100_wrap)
	FuncMap["To_Sudo_SudoUncheckedWeightCall_140"] = reflect.ValueOf(To_Sudo_SudoUncheckedWeightCall_140_wrap)
	FuncMap["To_Sudo_SudoUncheckedWeightCall_210"] = reflect.ValueOf(To_Sudo_SudoUncheckedWeightCall_210_wrap)
	FuncMap["To_Sudo_SudoUncheckedWeightCall_310"] = reflect.ValueOf(To_Sudo_SudoUncheckedWeightCall_310_wrap)
	FuncMap["To_System_KillPrefixCall_100"] = reflect.ValueOf(To_System_KillPrefixCall_100_wrap)
	FuncMap["To_System_KillStorageCall_100"] = reflect.ValueOf(To_System_KillStorageCall_100_wrap)
	FuncMap["To_System_RemarkCall_100"] = reflect.ValueOf(To_System_RemarkCall_100_wrap)
	FuncMap["To_System_RemarkWithEventCall_100"] = reflect.ValueOf(To_System_RemarkWithEventCall_100_wrap)
	FuncMap["To_System_SetCodeCall_100"] = reflect.ValueOf(To_System_SetCodeCall_100_wrap)
	FuncMap["To_System_SetCodeWithoutChecksCall_100"] = reflect.ValueOf(To_System_SetCodeWithoutChecksCall_100_wrap)
	FuncMap["To_System_SetHeapPagesCall_100"] = reflect.ValueOf(To_System_SetHeapPagesCall_100_wrap)
	FuncMap["To_System_SetStorageCall_100"] = reflect.ValueOf(To_System_SetStorageCall_100_wrap)
	FuncMap["To_Timestamp_SetCall_100"] = reflect.ValueOf(To_Timestamp_SetCall_100_wrap)
	FuncMap["To_Treasury_ApproveProposalCall_100"] = reflect.ValueOf(To_Treasury_ApproveProposalCall_100_wrap)
	FuncMap["To_Treasury_CheckStatusCall_1410"] = reflect.ValueOf(To_Treasury_CheckStatusCall_1410_wrap)
	FuncMap["To_Treasury_PayoutCall_1410"] = reflect.ValueOf(To_Treasury_PayoutCall_1410_wrap)
	FuncMap["To_Treasury_ProposeSpendCall_100"] = reflect.ValueOf(To_Treasury_ProposeSpendCall_100_wrap)
	FuncMap["To_Treasury_RejectProposalCall_100"] = reflect.ValueOf(To_Treasury_RejectProposalCall_100_wrap)
	FuncMap["To_Treasury_RemoveApprovalCall_100"] = reflect.ValueOf(To_Treasury_RemoveApprovalCall_100_wrap)
	FuncMap["To_Treasury_SpendCall_100"] = reflect.ValueOf(To_Treasury_SpendCall_100_wrap)
	FuncMap["To_Treasury_SpendCall_1410"] = reflect.ValueOf(To_Treasury_SpendCall_1410_wrap)
	FuncMap["To_Treasury_SpendLocalCall_1410"] = reflect.ValueOf(To_Treasury_SpendLocalCall_1410_wrap)
	FuncMap["To_Treasury_VoidSpendCall_1410"] = reflect.ValueOf(To_Treasury_VoidSpendCall_1410_wrap)
	FuncMap["To_Utility_AsDerivativeCall_100"] = reflect.ValueOf(To_Utility_AsDerivativeCall_100_wrap)
	FuncMap["To_Utility_AsDerivativeCall_140"] = reflect.ValueOf(To_Utility_AsDerivativeCall_140_wrap)
	FuncMap["To_Utility_AsDerivativeCall_210"] = reflect.ValueOf(To_Utility_AsDerivativeCall_210_wrap)
	FuncMap["To_Utility_AsDerivativeCall_310"] = reflect.ValueOf(To_Utility_AsDerivativeCall_310_wrap)
	FuncMap["To_Utility_AsDerivativeCall_1000"] = reflect.ValueOf(To_Utility_AsDerivativeCall_1000_wrap)
	FuncMap["To_Utility_BatchAllCall_100"] = reflect.ValueOf(To_Utility_BatchAllCall_100_wrap)
	FuncMap["To_Utility_BatchCall_100"] = reflect.ValueOf(To_Utility_BatchCall_100_wrap)
	FuncMap["To_Utility_DispatchAsCall_100"] = reflect.ValueOf(To_Utility_DispatchAsCall_100_wrap)
	FuncMap["To_Utility_DispatchAsCall_140"] = reflect.ValueOf(To_Utility_DispatchAsCall_140_wrap)
	FuncMap["To_Utility_DispatchAsCall_210"] = reflect.ValueOf(To_Utility_DispatchAsCall_210_wrap)
	FuncMap["To_Utility_DispatchAsCall_310"] = reflect.ValueOf(To_Utility_DispatchAsCall_310_wrap)
	FuncMap["To_Utility_DispatchAsCall_1000"] = reflect.ValueOf(To_Utility_DispatchAsCall_1000_wrap)
	FuncMap["To_Utility_ForceBatchCall_100"] = reflect.ValueOf(To_Utility_ForceBatchCall_100_wrap)
	FuncMap["To_Utility_WithWeightCall_100"] = reflect.ValueOf(To_Utility_WithWeightCall_100_wrap)
	FuncMap["To_Utility_WithWeightCall_140"] = reflect.ValueOf(To_Utility_WithWeightCall_140_wrap)
	FuncMap["To_Utility_WithWeightCall_210"] = reflect.ValueOf(To_Utility_WithWeightCall_210_wrap)
	FuncMap["To_Utility_WithWeightCall_310"] = reflect.ValueOf(To_Utility_WithWeightCall_310_wrap)
	FuncMap["To_Utility_WithWeightCall_1000"] = reflect.ValueOf(To_Utility_WithWeightCall_1000_wrap)
	FuncMap["To_ValidatorSet_AddValidatorAgainCall_140"] = reflect.ValueOf(To_ValidatorSet_AddValidatorAgainCall_140_wrap)
	FuncMap["To_ValidatorSet_AddValidatorCall_140"] = reflect.ValueOf(To_ValidatorSet_AddValidatorCall_140_wrap)
	FuncMap["To_ValidatorSet_RemoveValidatorCall_140"] = reflect.ValueOf(To_ValidatorSet_RemoveValidatorCall_140_wrap)
	FuncMap["To_Vesting_ForceVestedTransferCall_100"] = reflect.ValueOf(To_Vesting_ForceVestedTransferCall_100_wrap)
	FuncMap["To_Vesting_MergeSchedulesCall_100"] = reflect.ValueOf(To_Vesting_MergeSchedulesCall_100_wrap)
	FuncMap["To_Vesting_VestOtherCall_100"] = reflect.ValueOf(To_Vesting_VestOtherCall_100_wrap)
	FuncMap["To_Vesting_VestedTransferCall_100"] = reflect.ValueOf(To_Vesting_VestedTransferCall_100_wrap)
	FuncMap["To_Whitelist_DispatchWhitelistedCallCall_100"] = reflect.ValueOf(To_Whitelist_DispatchWhitelistedCallCall_100_wrap)
	FuncMap["To_Whitelist_DispatchWhitelistedCallWithPreimageCall_100"] = reflect.ValueOf(To_Whitelist_DispatchWhitelistedCallWithPreimageCall_100_wrap)
	FuncMap["To_Whitelist_DispatchWhitelistedCallWithPreimageCall_140"] = reflect.ValueOf(To_Whitelist_DispatchWhitelistedCallWithPreimageCall_140_wrap)
	FuncMap["To_Whitelist_DispatchWhitelistedCallWithPreimageCall_210"] = reflect.ValueOf(To_Whitelist_DispatchWhitelistedCallWithPreimageCall_210_wrap)
	FuncMap["To_Whitelist_DispatchWhitelistedCallWithPreimageCall_310"] = reflect.ValueOf(To_Whitelist_DispatchWhitelistedCallWithPreimageCall_310_wrap)
	FuncMap["To_Whitelist_DispatchWhitelistedCallWithPreimageCall_1000"] = reflect.ValueOf(To_Whitelist_DispatchWhitelistedCallWithPreimageCall_1000_wrap)
	FuncMap["To_Whitelist_RemoveWhitelistedCallCall_100"] = reflect.ValueOf(To_Whitelist_RemoveWhitelistedCallCall_100_wrap)
	FuncMap["To_Whitelist_WhitelistCallCall_100"] = reflect.ValueOf(To_Whitelist_WhitelistCallCall_100_wrap)
}
