// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: sf/gear/type/v1/block.proto

package pbgear

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number        uint64        `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Hash          []byte        `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Header        *Header       `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	Extrinsics    []*Extrinsic  `protobuf:"bytes,4,rep,name=extrinsics,proto3" json:"extrinsics,omitempty"`
	Events        []*Event      `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
	DigestItems   []*DigestItem `protobuf:"bytes,6,rep,name=digest_items,json=digestItems,proto3" json:"digest_items,omitempty"`
	Justification []byte        `protobuf:"bytes,7,opt,name=justification,proto3" json:"justification,omitempty"`
	RawEvents     []byte        `protobuf:"bytes,8,opt,name=raw_events,json=rawEvents,proto3" json:"raw_events,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Block) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetExtrinsics() []*Extrinsic {
	if x != nil {
		return x.Extrinsics
	}
	return nil
}

func (x *Block) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Block) GetDigestItems() []*DigestItem {
	if x != nil {
		return x.DigestItems
	}
	return nil
}

func (x *Block) GetJustification() []byte {
	if x != nil {
		return x.Justification
	}
	return nil
}

func (x *Block) GetRawEvents() []byte {
	if x != nil {
		return x.RawEvents
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [32]byte
	ParentHash []byte `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	// [32]byte
	StateRoot []byte `protobuf:"bytes,2,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	// [32]byte
	ExtrinsicsRoot  []byte `protobuf:"bytes,3,opt,name=extrinsics_root,json=extrinsicsRoot,proto3" json:"extrinsics_root,omitempty"`
	SpecVersion     uint32 `protobuf:"varint,4,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	UpdatedMetadata []byte `protobuf:"bytes,5,opt,name=updated_metadata,json=updatedMetadata,proto3" json:"updated_metadata,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *Header) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *Header) GetExtrinsicsRoot() []byte {
	if x != nil {
		return x.ExtrinsicsRoot
	}
	return nil
}

func (x *Header) GetSpecVersion() uint32 {
	if x != nil {
		return x.SpecVersion
	}
	return 0
}

func (x *Header) GetUpdatedMetadata() []byte {
	if x != nil {
		return x.UpdatedMetadata
	}
	return nil
}

type DigestItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Item:
	//
	//	*DigestItem_AsChangesTrieRoot
	//	*DigestItem_AsPreRuntime
	//	*DigestItem_AsConsensus
	//	*DigestItem_AsSeal
	//	*DigestItem_AsChangesTrieSignal
	//	*DigestItem_AsOther
	Item isDigestItem_Item `protobuf_oneof:"Item"`
}

func (x *DigestItem) Reset() {
	*x = DigestItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DigestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigestItem) ProtoMessage() {}

func (x *DigestItem) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigestItem.ProtoReflect.Descriptor instead.
func (*DigestItem) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{2}
}

func (m *DigestItem) GetItem() isDigestItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *DigestItem) GetAsChangesTrieRoot() []byte {
	if x, ok := x.GetItem().(*DigestItem_AsChangesTrieRoot); ok {
		return x.AsChangesTrieRoot
	}
	return nil
}

func (x *DigestItem) GetAsPreRuntime() *PreRuntime {
	if x, ok := x.GetItem().(*DigestItem_AsPreRuntime); ok {
		return x.AsPreRuntime
	}
	return nil
}

func (x *DigestItem) GetAsConsensus() *Consensus {
	if x, ok := x.GetItem().(*DigestItem_AsConsensus); ok {
		return x.AsConsensus
	}
	return nil
}

func (x *DigestItem) GetAsSeal() *Seal {
	if x, ok := x.GetItem().(*DigestItem_AsSeal); ok {
		return x.AsSeal
	}
	return nil
}

func (x *DigestItem) GetAsChangesTrieSignal() *ChangesTrieSignal {
	if x, ok := x.GetItem().(*DigestItem_AsChangesTrieSignal); ok {
		return x.AsChangesTrieSignal
	}
	return nil
}

func (x *DigestItem) GetAsOther() []byte {
	if x, ok := x.GetItem().(*DigestItem_AsOther); ok {
		return x.AsOther
	}
	return nil
}

type isDigestItem_Item interface {
	isDigestItem_Item()
}

type DigestItem_AsChangesTrieRoot struct {
	// [32]byte
	AsChangesTrieRoot []byte `protobuf:"bytes,1,opt,name=as_changes_trie_root,json=asChangesTrieRoot,proto3,oneof"`
}

type DigestItem_AsPreRuntime struct {
	AsPreRuntime *PreRuntime `protobuf:"bytes,2,opt,name=as_pre_runtime,json=asPreRuntime,proto3,oneof"`
}

type DigestItem_AsConsensus struct {
	AsConsensus *Consensus `protobuf:"bytes,3,opt,name=as_consensus,json=asConsensus,proto3,oneof"`
}

type DigestItem_AsSeal struct {
	AsSeal *Seal `protobuf:"bytes,4,opt,name=as_seal,json=asSeal,proto3,oneof"`
}

type DigestItem_AsChangesTrieSignal struct {
	AsChangesTrieSignal *ChangesTrieSignal `protobuf:"bytes,5,opt,name=as_changes_trie_signal,json=asChangesTrieSignal,proto3,oneof"`
}

type DigestItem_AsOther struct {
	AsOther []byte `protobuf:"bytes,6,opt,name=as_other,json=asOther,proto3,oneof"`
}

func (*DigestItem_AsChangesTrieRoot) isDigestItem_Item() {}

func (*DigestItem_AsPreRuntime) isDigestItem_Item() {}

func (*DigestItem_AsConsensus) isDigestItem_Item() {}

func (*DigestItem_AsSeal) isDigestItem_Item() {}

func (*DigestItem_AsChangesTrieSignal) isDigestItem_Item() {}

func (*DigestItem_AsOther) isDigestItem_Item() {}

type PreRuntime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsensusEngineId uint32 `protobuf:"varint,1,opt,name=consensus_engine_id,json=consensusEngineId,proto3" json:"consensus_engine_id,omitempty"`
	Bytes             []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *PreRuntime) Reset() {
	*x = PreRuntime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreRuntime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreRuntime) ProtoMessage() {}

func (x *PreRuntime) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreRuntime.ProtoReflect.Descriptor instead.
func (*PreRuntime) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{3}
}

func (x *PreRuntime) GetConsensusEngineId() uint32 {
	if x != nil {
		return x.ConsensusEngineId
	}
	return 0
}

func (x *PreRuntime) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type Consensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsensusEngineId uint32 `protobuf:"varint,1,opt,name=consensus_engine_id,json=consensusEngineId,proto3" json:"consensus_engine_id,omitempty"`
	Bytes             []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *Consensus) Reset() {
	*x = Consensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consensus) ProtoMessage() {}

func (x *Consensus) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consensus.ProtoReflect.Descriptor instead.
func (*Consensus) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{4}
}

func (x *Consensus) GetConsensusEngineId() uint32 {
	if x != nil {
		return x.ConsensusEngineId
	}
	return 0
}

func (x *Consensus) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type Seal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsensusEngineId uint32 `protobuf:"varint,1,opt,name=consensus_engine_id,json=consensusEngineId,proto3" json:"consensus_engine_id,omitempty"`
	Bytes             []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *Seal) Reset() {
	*x = Seal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seal) ProtoMessage() {}

func (x *Seal) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seal.ProtoReflect.Descriptor instead.
func (*Seal) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{5}
}

func (x *Seal) GetConsensusEngineId() uint32 {
	if x != nil {
		return x.ConsensusEngineId
	}
	return 0
}

func (x *Seal) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type ChangesTrieSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsNewConfiguration bool   `protobuf:"varint,1,opt,name=is_new_configuration,json=isNewConfiguration,proto3" json:"is_new_configuration,omitempty"`
	AsNewConfiguration []byte `protobuf:"bytes,2,opt,name=as_new_configuration,json=asNewConfiguration,proto3" json:"as_new_configuration,omitempty"`
}

func (x *ChangesTrieSignal) Reset() {
	*x = ChangesTrieSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesTrieSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesTrieSignal) ProtoMessage() {}

func (x *ChangesTrieSignal) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesTrieSignal.ProtoReflect.Descriptor instead.
func (*ChangesTrieSignal) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{6}
}

func (x *ChangesTrieSignal) GetIsNewConfiguration() bool {
	if x != nil {
		return x.IsNewConfiguration
	}
	return false
}

func (x *ChangesTrieSignal) GetAsNewConfiguration() []byte {
	if x != nil {
		return x.AsNewConfiguration
	}
	return nil
}

type Extrinsic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   uint32     `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Signature *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Method    *Call      `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *Extrinsic) Reset() {
	*x = Extrinsic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extrinsic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extrinsic) ProtoMessage() {}

func (x *Extrinsic) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extrinsic.ProtoReflect.Descriptor instead.
func (*Extrinsic) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{7}
}

func (x *Extrinsic) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Extrinsic) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Extrinsic) GetMethod() *Call {
	if x != nil {
		return x.Method
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer    *MultiAddress   `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Signature *MultiSignature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Era       *ExtrinsicEra   `protobuf:"bytes,3,opt,name=era,proto3" json:"era,omitempty"`
	// big.Int
	Nonce string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// big.Int
	Tip string `protobuf:"bytes,5,opt,name=tip,proto3" json:"tip,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{8}
}

func (x *Signature) GetSigner() *MultiAddress {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *Signature) GetSignature() *MultiSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Signature) GetEra() *ExtrinsicEra {
	if x != nil {
		return x.Era
	}
	return nil
}

func (x *Signature) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *Signature) GetTip() string {
	if x != nil {
		return x.Tip
	}
	return ""
}

type MultiAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsId bool `protobuf:"varint,1,opt,name=is_id,json=isId,proto3" json:"is_id,omitempty"`
	// [32]byte
	AsId         []byte `protobuf:"bytes,2,opt,name=as_id,json=asId,proto3" json:"as_id,omitempty"`
	IsIndex      bool   `protobuf:"varint,3,opt,name=is_index,json=isIndex,proto3" json:"is_index,omitempty"`
	AsIndex      uint32 `protobuf:"varint,4,opt,name=as_index,json=asIndex,proto3" json:"as_index,omitempty"`
	IsRaw        bool   `protobuf:"varint,5,opt,name=is_raw,json=isRaw,proto3" json:"is_raw,omitempty"`
	AsRaw        []byte `protobuf:"bytes,6,opt,name=as_raw,json=asRaw,proto3" json:"as_raw,omitempty"`
	IsAddress_32 bool   `protobuf:"varint,7,opt,name=is_address_32,json=isAddress32,proto3" json:"is_address_32,omitempty"`
	AsAddress_32 []byte `protobuf:"bytes,8,opt,name=as_address_32,json=asAddress32,proto3" json:"as_address_32,omitempty"`
	IsAddress_20 bool   `protobuf:"varint,9,opt,name=is_address_20,json=isAddress20,proto3" json:"is_address_20,omitempty"`
	// [20]byte
	AsAddress_20 []byte `protobuf:"bytes,10,opt,name=as_address_20,json=asAddress20,proto3" json:"as_address_20,omitempty"`
}

func (x *MultiAddress) Reset() {
	*x = MultiAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiAddress) ProtoMessage() {}

func (x *MultiAddress) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiAddress.ProtoReflect.Descriptor instead.
func (*MultiAddress) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{9}
}

func (x *MultiAddress) GetIsId() bool {
	if x != nil {
		return x.IsId
	}
	return false
}

func (x *MultiAddress) GetAsId() []byte {
	if x != nil {
		return x.AsId
	}
	return nil
}

func (x *MultiAddress) GetIsIndex() bool {
	if x != nil {
		return x.IsIndex
	}
	return false
}

func (x *MultiAddress) GetAsIndex() uint32 {
	if x != nil {
		return x.AsIndex
	}
	return 0
}

func (x *MultiAddress) GetIsRaw() bool {
	if x != nil {
		return x.IsRaw
	}
	return false
}

func (x *MultiAddress) GetAsRaw() []byte {
	if x != nil {
		return x.AsRaw
	}
	return nil
}

func (x *MultiAddress) GetIsAddress_32() bool {
	if x != nil {
		return x.IsAddress_32
	}
	return false
}

func (x *MultiAddress) GetAsAddress_32() []byte {
	if x != nil {
		return x.AsAddress_32
	}
	return nil
}

func (x *MultiAddress) GetIsAddress_20() bool {
	if x != nil {
		return x.IsAddress_20
	}
	return false
}

func (x *MultiAddress) GetAsAddress_20() []byte {
	if x != nil {
		return x.AsAddress_20
	}
	return nil
}

type MultiSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEd_25519 bool `protobuf:"varint,1,opt,name=is_ed_25519,json=isEd25519,proto3" json:"is_ed_25519,omitempty"`
	// [64]byte
	AsEd_25519 []byte `protobuf:"bytes,2,opt,name=as_ed_25519,json=asEd25519,proto3" json:"as_ed_25519,omitempty"`
	IsSr_25519 bool   `protobuf:"varint,3,opt,name=is_sr_25519,json=isSr25519,proto3" json:"is_sr_25519,omitempty"`
	// [64]byte
	AsSr_25519 []byte `protobuf:"bytes,4,opt,name=as_sr_25519,json=asSr25519,proto3" json:"as_sr_25519,omitempty"`
	IsEcdsa    bool   `protobuf:"varint,5,opt,name=is_ecdsa,json=isEcdsa,proto3" json:"is_ecdsa,omitempty"`
	// [64]byte
	AsEcdsa []byte `protobuf:"bytes,6,opt,name=as_ecdsa,json=asEcdsa,proto3" json:"as_ecdsa,omitempty"`
}

func (x *MultiSignature) Reset() {
	*x = MultiSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSignature) ProtoMessage() {}

func (x *MultiSignature) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSignature.ProtoReflect.Descriptor instead.
func (*MultiSignature) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{10}
}

func (x *MultiSignature) GetIsEd_25519() bool {
	if x != nil {
		return x.IsEd_25519
	}
	return false
}

func (x *MultiSignature) GetAsEd_25519() []byte {
	if x != nil {
		return x.AsEd_25519
	}
	return nil
}

func (x *MultiSignature) GetIsSr_25519() bool {
	if x != nil {
		return x.IsSr_25519
	}
	return false
}

func (x *MultiSignature) GetAsSr_25519() []byte {
	if x != nil {
		return x.AsSr_25519
	}
	return nil
}

func (x *MultiSignature) GetIsEcdsa() bool {
	if x != nil {
		return x.IsEcdsa
	}
	return false
}

func (x *MultiSignature) GetAsEcdsa() []byte {
	if x != nil {
		return x.AsEcdsa
	}
	return nil
}

type ExtrinsicEra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsImmortalEra bool       `protobuf:"varint,1,opt,name=is_immortal_era,json=isImmortalEra,proto3" json:"is_immortal_era,omitempty"`
	IsMortalEra   bool       `protobuf:"varint,2,opt,name=is_mortal_era,json=isMortalEra,proto3" json:"is_mortal_era,omitempty"`
	AsMortalEra   *MortalEra `protobuf:"bytes,3,opt,name=as_mortal_era,json=asMortalEra,proto3" json:"as_mortal_era,omitempty"`
}

func (x *ExtrinsicEra) Reset() {
	*x = ExtrinsicEra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtrinsicEra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtrinsicEra) ProtoMessage() {}

func (x *ExtrinsicEra) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtrinsicEra.ProtoReflect.Descriptor instead.
func (*ExtrinsicEra) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{11}
}

func (x *ExtrinsicEra) GetIsImmortalEra() bool {
	if x != nil {
		return x.IsImmortalEra
	}
	return false
}

func (x *ExtrinsicEra) GetIsMortalEra() bool {
	if x != nil {
		return x.IsMortalEra
	}
	return false
}

func (x *ExtrinsicEra) GetAsMortalEra() *MortalEra {
	if x != nil {
		return x.AsMortalEra
	}
	return nil
}

type Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallIndex *CallIndex `protobuf:"bytes,1,opt,name=call_index,json=callIndex,proto3" json:"call_index,omitempty"`
	Args      []byte     `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *Call) Reset() {
	*x = Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{12}
}

func (x *Call) GetCallIndex() *CallIndex {
	if x != nil {
		return x.CallIndex
	}
	return nil
}

func (x *Call) GetArgs() []byte {
	if x != nil {
		return x.Args
	}
	return nil
}

type CallIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionIndex uint32 `protobuf:"varint,1,opt,name=section_index,json=sectionIndex,proto3" json:"section_index,omitempty"`
	MethodIndex  uint32 `protobuf:"varint,2,opt,name=method_index,json=methodIndex,proto3" json:"method_index,omitempty"`
}

func (x *CallIndex) Reset() {
	*x = CallIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallIndex) ProtoMessage() {}

func (x *CallIndex) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallIndex.ProtoReflect.Descriptor instead.
func (*CallIndex) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{13}
}

func (x *CallIndex) GetSectionIndex() uint32 {
	if x != nil {
		return x.SectionIndex
	}
	return 0
}

func (x *CallIndex) GetMethodIndex() uint32 {
	if x != nil {
		return x.MethodIndex
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// [2]byte
	Id    []byte `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Phase *Phase `protobuf:"bytes,4,opt,name=phase,proto3" json:"phase,omitempty"`
	// [32]byte
	Topics [][]byte `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{14}
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Event) GetPhase() *Phase {
	if x != nil {
		return x.Phase
	}
	return nil
}

func (x *Event) GetTopics() [][]byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

type Phase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsApplyExtrinsic bool   `protobuf:"varint,1,opt,name=is_apply_extrinsic,json=isApplyExtrinsic,proto3" json:"is_apply_extrinsic,omitempty"`
	AsApplyExtrinsic uint32 `protobuf:"varint,2,opt,name=as_apply_extrinsic,json=asApplyExtrinsic,proto3" json:"as_apply_extrinsic,omitempty"`
	IsFinalization   bool   `protobuf:"varint,3,opt,name=is_finalization,json=isFinalization,proto3" json:"is_finalization,omitempty"`
	IsInitialization bool   `protobuf:"varint,4,opt,name=is_initialization,json=isInitialization,proto3" json:"is_initialization,omitempty"`
}

func (x *Phase) Reset() {
	*x = Phase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phase) ProtoMessage() {}

func (x *Phase) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phase.ProtoReflect.Descriptor instead.
func (*Phase) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{15}
}

func (x *Phase) GetIsApplyExtrinsic() bool {
	if x != nil {
		return x.IsApplyExtrinsic
	}
	return false
}

func (x *Phase) GetAsApplyExtrinsic() uint32 {
	if x != nil {
		return x.AsApplyExtrinsic
	}
	return 0
}

func (x *Phase) GetIsFinalization() bool {
	if x != nil {
		return x.IsFinalization
	}
	return false
}

func (x *Phase) GetIsInitialization() bool {
	if x != nil {
		return x.IsInitialization
	}
	return false
}

type MortalEra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First  uint32 `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Second uint32 `protobuf:"varint,2,opt,name=second,proto3" json:"second,omitempty"`
}

func (x *MortalEra) Reset() {
	*x = MortalEra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MortalEra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MortalEra) ProtoMessage() {}

func (x *MortalEra) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MortalEra.ProtoReflect.Descriptor instead.
func (*MortalEra) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{16}
}

func (x *MortalEra) GetFirst() uint32 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *MortalEra) GetSecond() uint32 {
	if x != nil {
		return x.Second
	}
	return 0
}

type PaymentFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// big.Int
	Tip string `protobuf:"bytes,1,opt,name=tip,proto3" json:"tip,omitempty"`
}

func (x *PaymentFields) Reset() {
	*x = PaymentFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_gear_type_v1_block_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentFields) ProtoMessage() {}

func (x *PaymentFields) ProtoReflect() protoreflect.Message {
	mi := &file_sf_gear_type_v1_block_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentFields.ProtoReflect.Descriptor instead.
func (*PaymentFields) Descriptor() ([]byte, []int) {
	return file_sf_gear_type_v1_block_proto_rawDescGZIP(), []int{17}
}

func (x *PaymentFields) GetTip() string {
	if x != nil {
		return x.Tip
	}
	return ""
}

var File_sf_gear_type_v1_block_proto protoreflect.FileDescriptor

var file_sf_gear_type_v1_block_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x66, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73,
	0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x22, 0xd5,
	0x02, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x2f, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73,
	0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66, 0x2e, 0x67,
	0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x69, 0x6e, 0x73, 0x69, 0x63, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63,
	0x73, 0x12, 0x2e, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61,
	0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x61, 0x77,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x72,
	0x69, 0x6e, 0x73, 0x69, 0x63, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a,
	0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf7, 0x02, 0x0a, 0x0a, 0x44, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x73, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x11, 0x61, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x54, 0x72, 0x69, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x61, 0x73,
	0x5f, 0x70, 0x72, 0x65, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x50, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x3f, 0x0a, 0x0c, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x07, 0x61, 0x73, 0x5f, 0x73, 0x65, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x06, 0x61, 0x73, 0x53, 0x65,
	0x61, 0x6c, 0x12, 0x59, 0x0a, 0x16, 0x61, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x5f, 0x74, 0x72, 0x69, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x54, 0x72, 0x69, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x13, 0x61, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x54, 0x72, 0x69, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a,
	0x08, 0x61, 0x73, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x07, 0x61, 0x73, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x22, 0x52, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x04, 0x53, 0x65, 0x61,
	0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x54, 0x72, 0x69, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14,
	0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x14, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x61, 0x73,
	0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x8e, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66,
	0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x22, 0xda, 0x01, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x67,
	0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x65, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x45, 0x72,
	0x61, 0x52, 0x03, 0x65, 0x72, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x70, 0x22, 0xac,
	0x02, 0x0a, 0x0c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x69, 0x73, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x52, 0x61, 0x77, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x73, 0x5f, 0x72, 0x61, 0x77,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x73, 0x52, 0x61, 0x77, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x33, 0x32, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x33,
	0x32, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x33, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x73, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x33, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x32, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x30, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x73, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x32, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x61, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x30, 0x22, 0xc6, 0x01,
	0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x64, 0x5f, 0x32, 0x35, 0x35, 0x31, 0x39, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39,
	0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x73, 0x5f, 0x65, 0x64, 0x5f, 0x32, 0x35, 0x35, 0x31, 0x39, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x73, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39,
	0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x72, 0x5f, 0x32, 0x35, 0x35, 0x31, 0x39, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x72, 0x32, 0x35, 0x35, 0x31, 0x39,
	0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x73, 0x5f, 0x73, 0x72, 0x5f, 0x32, 0x35, 0x35, 0x31, 0x39, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x73, 0x53, 0x72, 0x32, 0x35, 0x35, 0x31, 0x39,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x63, 0x64, 0x73, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x63, 0x64, 0x73, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x73, 0x5f, 0x65, 0x63, 0x64, 0x73, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x73, 0x45, 0x63, 0x64, 0x73, 0x61, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x72, 0x69,
	0x6e, 0x73, 0x69, 0x63, 0x45, 0x72, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x69, 0x6d,
	0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x73, 0x49, 0x6d, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x45, 0x72, 0x61, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x72, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4d, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x45, 0x72, 0x61, 0x12, 0x3e, 0x0a, 0x0d, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x5f, 0x65, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66, 0x2e,
	0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x72,
	0x74, 0x61, 0x6c, 0x45, 0x72, 0x61, 0x52, 0x0b, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x74, 0x61, 0x6c,
	0x45, 0x72, 0x61, 0x22, 0x55, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x66, 0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x09, 0x63, 0x61, 0x6c,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x53, 0x0a, 0x09, 0x43, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x71, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x05,
	0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x66,
	0x2e, 0x67, 0x65, 0x61, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x45, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x73,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x45,
	0x78, 0x74, 0x72, 0x69, 0x6e, 0x73, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39,
	0x0a, 0x09, 0x4d, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x45, 0x72, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x21, 0x0a, 0x0d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x70, 0x42, 0x42, 0x5a, 0x40,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x73, 0x74, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x68, 0x6f, 0x73,
	0x65, 0x2d, 0x67, 0x65, 0x61, 0x72, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x67, 0x65, 0x61,
	0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x67, 0x65, 0x61, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_gear_type_v1_block_proto_rawDescOnce sync.Once
	file_sf_gear_type_v1_block_proto_rawDescData = file_sf_gear_type_v1_block_proto_rawDesc
)

func file_sf_gear_type_v1_block_proto_rawDescGZIP() []byte {
	file_sf_gear_type_v1_block_proto_rawDescOnce.Do(func() {
		file_sf_gear_type_v1_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_gear_type_v1_block_proto_rawDescData)
	})
	return file_sf_gear_type_v1_block_proto_rawDescData
}

var file_sf_gear_type_v1_block_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_sf_gear_type_v1_block_proto_goTypes = []interface{}{
	(*Block)(nil),             // 0: sf.gear.type.v1.Block
	(*Header)(nil),            // 1: sf.gear.type.v1.Header
	(*DigestItem)(nil),        // 2: sf.gear.type.v1.DigestItem
	(*PreRuntime)(nil),        // 3: sf.gear.type.v1.PreRuntime
	(*Consensus)(nil),         // 4: sf.gear.type.v1.Consensus
	(*Seal)(nil),              // 5: sf.gear.type.v1.Seal
	(*ChangesTrieSignal)(nil), // 6: sf.gear.type.v1.ChangesTrieSignal
	(*Extrinsic)(nil),         // 7: sf.gear.type.v1.Extrinsic
	(*Signature)(nil),         // 8: sf.gear.type.v1.Signature
	(*MultiAddress)(nil),      // 9: sf.gear.type.v1.MultiAddress
	(*MultiSignature)(nil),    // 10: sf.gear.type.v1.MultiSignature
	(*ExtrinsicEra)(nil),      // 11: sf.gear.type.v1.ExtrinsicEra
	(*Call)(nil),              // 12: sf.gear.type.v1.Call
	(*CallIndex)(nil),         // 13: sf.gear.type.v1.CallIndex
	(*Event)(nil),             // 14: sf.gear.type.v1.Event
	(*Phase)(nil),             // 15: sf.gear.type.v1.Phase
	(*MortalEra)(nil),         // 16: sf.gear.type.v1.MortalEra
	(*PaymentFields)(nil),     // 17: sf.gear.type.v1.PaymentFields
}
var file_sf_gear_type_v1_block_proto_depIdxs = []int32{
	1,  // 0: sf.gear.type.v1.Block.header:type_name -> sf.gear.type.v1.Header
	7,  // 1: sf.gear.type.v1.Block.extrinsics:type_name -> sf.gear.type.v1.Extrinsic
	14, // 2: sf.gear.type.v1.Block.events:type_name -> sf.gear.type.v1.Event
	2,  // 3: sf.gear.type.v1.Block.digest_items:type_name -> sf.gear.type.v1.DigestItem
	3,  // 4: sf.gear.type.v1.DigestItem.as_pre_runtime:type_name -> sf.gear.type.v1.PreRuntime
	4,  // 5: sf.gear.type.v1.DigestItem.as_consensus:type_name -> sf.gear.type.v1.Consensus
	5,  // 6: sf.gear.type.v1.DigestItem.as_seal:type_name -> sf.gear.type.v1.Seal
	6,  // 7: sf.gear.type.v1.DigestItem.as_changes_trie_signal:type_name -> sf.gear.type.v1.ChangesTrieSignal
	8,  // 8: sf.gear.type.v1.Extrinsic.signature:type_name -> sf.gear.type.v1.Signature
	12, // 9: sf.gear.type.v1.Extrinsic.method:type_name -> sf.gear.type.v1.Call
	9,  // 10: sf.gear.type.v1.Signature.signer:type_name -> sf.gear.type.v1.MultiAddress
	10, // 11: sf.gear.type.v1.Signature.signature:type_name -> sf.gear.type.v1.MultiSignature
	11, // 12: sf.gear.type.v1.Signature.era:type_name -> sf.gear.type.v1.ExtrinsicEra
	16, // 13: sf.gear.type.v1.ExtrinsicEra.as_mortal_era:type_name -> sf.gear.type.v1.MortalEra
	13, // 14: sf.gear.type.v1.Call.call_index:type_name -> sf.gear.type.v1.CallIndex
	15, // 15: sf.gear.type.v1.Event.phase:type_name -> sf.gear.type.v1.Phase
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_sf_gear_type_v1_block_proto_init() }
func file_sf_gear_type_v1_block_proto_init() {
	if File_sf_gear_type_v1_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sf_gear_type_v1_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DigestItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreRuntime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangesTrieSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extrinsic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtrinsicEra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MortalEra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_gear_type_v1_block_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sf_gear_type_v1_block_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*DigestItem_AsChangesTrieRoot)(nil),
		(*DigestItem_AsPreRuntime)(nil),
		(*DigestItem_AsConsensus)(nil),
		(*DigestItem_AsSeal)(nil),
		(*DigestItem_AsChangesTrieSignal)(nil),
		(*DigestItem_AsOther)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_gear_type_v1_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_gear_type_v1_block_proto_goTypes,
		DependencyIndexes: file_sf_gear_type_v1_block_proto_depIdxs,
		MessageInfos:      file_sf_gear_type_v1_block_proto_msgTypes,
	}.Build()
	File_sf_gear_type_v1_block_proto = out.File
	file_sf_gear_type_v1_block_proto_rawDesc = nil
	file_sf_gear_type_v1_block_proto_goTypes = nil
	file_sf_gear_type_v1_block_proto_depIdxs = nil
}
